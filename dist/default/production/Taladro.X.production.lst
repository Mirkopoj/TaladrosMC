

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb  4 22:47:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1503
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1503 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000E                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     008C                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0099                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010E                     	;# 
   115     0111                     	;# 
   116     0112                     	;# 
   117     0113                     	;# 
   118     0114                     	;# 
   119     0115                     	;# 
   120     0116                     	;# 
   121     0117                     	;# 
   122     0118                     	;# 
   123     0119                     	;# 
   124     011D                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0194                     	;# 
   133     0195                     	;# 
   134     0196                     	;# 
   135     0197                     	;# 
   136     020C                     	;# 
   137     0211                     	;# 
   138     0211                     	;# 
   139     0212                     	;# 
   140     0212                     	;# 
   141     0213                     	;# 
   142     0213                     	;# 
   143     0214                     	;# 
   144     0214                     	;# 
   145     0215                     	;# 
   146     0215                     	;# 
   147     0215                     	;# 
   148     0216                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0217                     	;# 
   152     0391                     	;# 
   153     0392                     	;# 
   154     0393                     	;# 
   155     0498                     	;# 
   156     0498                     	;# 
   157     0499                     	;# 
   158     049A                     	;# 
   159     049B                     	;# 
   160     049B                     	;# 
   161     049C                     	;# 
   162     049D                     	;# 
   163     049E                     	;# 
   164     049F                     	;# 
   165     0611                     	;# 
   166     0612                     	;# 
   167     0613                     	;# 
   168     0613                     	;# 
   169     0614                     	;# 
   170     0615                     	;# 
   171     0616                     	;# 
   172     0616                     	;# 
   173     0617                     	;# 
   174     0618                     	;# 
   175     0619                     	;# 
   176     0619                     	;# 
   177     061A                     	;# 
   178     061B                     	;# 
   179     061C                     	;# 
   180     061C                     	;# 
   181     0691                     	;# 
   182     0692                     	;# 
   183     0693                     	;# 
   184     0694                     	;# 
   185     0695                     	;# 
   186     0F0F                     	;# 
   187     0F10                     	;# 
   188     0F11                     	;# 
   189     0F12                     	;# 
   190     0F13                     	;# 
   191     0F14                     	;# 
   192     0F15                     	;# 
   193     0F16                     	;# 
   194     0F17                     	;# 
   195     0F18                     	;# 
   196     0F19                     	;# 
   197     0F1A                     	;# 
   198     0F1B                     	;# 
   199     0F1C                     	;# 
   200     0F1D                     	;# 
   201     0F1E                     	;# 
   202     0F1F                     	;# 
   203     0FE3                     	;# 
   204     0FE4                     	;# 
   205     0FE5                     	;# 
   206     0FE6                     	;# 
   207     0FE7                     	;# 
   208     0FE8                     	;# 
   209     0FE9                     	;# 
   210     0FEA                     	;# 
   211     0FEB                     	;# 
   212     0FED                     	;# 
   213     0FEE                     	;# 
   214     0FEF                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000E                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     008C                     	;# 
   242     008E                     	;# 
   243     0091                     	;# 
   244     0092                     	;# 
   245     0093                     	;# 
   246     0095                     	;# 
   247     0096                     	;# 
   248     0097                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010E                     	;# 
   259     0111                     	;# 
   260     0112                     	;# 
   261     0113                     	;# 
   262     0114                     	;# 
   263     0115                     	;# 
   264     0116                     	;# 
   265     0117                     	;# 
   266     0118                     	;# 
   267     0119                     	;# 
   268     011D                     	;# 
   269     018C                     	;# 
   270     018E                     	;# 
   271     0191                     	;# 
   272     0191                     	;# 
   273     0192                     	;# 
   274     0193                     	;# 
   275     0193                     	;# 
   276     0194                     	;# 
   277     0195                     	;# 
   278     0196                     	;# 
   279     0197                     	;# 
   280     020C                     	;# 
   281     0211                     	;# 
   282     0211                     	;# 
   283     0212                     	;# 
   284     0212                     	;# 
   285     0213                     	;# 
   286     0213                     	;# 
   287     0214                     	;# 
   288     0214                     	;# 
   289     0215                     	;# 
   290     0215                     	;# 
   291     0215                     	;# 
   292     0216                     	;# 
   293     0216                     	;# 
   294     0217                     	;# 
   295     0217                     	;# 
   296     0391                     	;# 
   297     0392                     	;# 
   298     0393                     	;# 
   299     0498                     	;# 
   300     0498                     	;# 
   301     0499                     	;# 
   302     049A                     	;# 
   303     049B                     	;# 
   304     049B                     	;# 
   305     049C                     	;# 
   306     049D                     	;# 
   307     049E                     	;# 
   308     049F                     	;# 
   309     0611                     	;# 
   310     0612                     	;# 
   311     0613                     	;# 
   312     0613                     	;# 
   313     0614                     	;# 
   314     0615                     	;# 
   315     0616                     	;# 
   316     0616                     	;# 
   317     0617                     	;# 
   318     0618                     	;# 
   319     0619                     	;# 
   320     0619                     	;# 
   321     061A                     	;# 
   322     061B                     	;# 
   323     061C                     	;# 
   324     061C                     	;# 
   325     0691                     	;# 
   326     0692                     	;# 
   327     0693                     	;# 
   328     0694                     	;# 
   329     0695                     	;# 
   330     0F0F                     	;# 
   331     0F10                     	;# 
   332     0F11                     	;# 
   333     0F12                     	;# 
   334     0F13                     	;# 
   335     0F14                     	;# 
   336     0F15                     	;# 
   337     0F16                     	;# 
   338     0F17                     	;# 
   339     0F18                     	;# 
   340     0F19                     	;# 
   341     0F1A                     	;# 
   342     0F1B                     	;# 
   343     0F1C                     	;# 
   344     0F1D                     	;# 
   345     0F1E                     	;# 
   346     0F1F                     	;# 
   347     0FE3                     	;# 
   348     0FE4                     	;# 
   349     0FE5                     	;# 
   350     0FE6                     	;# 
   351     0FE7                     	;# 
   352     0FE8                     	;# 
   353     0FE9                     	;# 
   354     0FEA                     	;# 
   355     0FEB                     	;# 
   356     0FED                     	;# 
   357     0FEE                     	;# 
   358     0FEF                     	;# 
   359     0000                     	;# 
   360     0001                     	;# 
   361     0002                     	;# 
   362     0003                     	;# 
   363     0004                     	;# 
   364     0005                     	;# 
   365     0006                     	;# 
   366     0007                     	;# 
   367     0008                     	;# 
   368     0009                     	;# 
   369     000A                     	;# 
   370     000B                     	;# 
   371     000C                     	;# 
   372     000E                     	;# 
   373     0011                     	;# 
   374     0012                     	;# 
   375     0013                     	;# 
   376     0015                     	;# 
   377     0016                     	;# 
   378     0016                     	;# 
   379     0017                     	;# 
   380     0018                     	;# 
   381     0019                     	;# 
   382     001A                     	;# 
   383     001B                     	;# 
   384     001C                     	;# 
   385     008C                     	;# 
   386     008E                     	;# 
   387     0091                     	;# 
   388     0092                     	;# 
   389     0093                     	;# 
   390     0095                     	;# 
   391     0096                     	;# 
   392     0097                     	;# 
   393     0099                     	;# 
   394     009A                     	;# 
   395     009B                     	;# 
   396     009B                     	;# 
   397     009C                     	;# 
   398     009D                     	;# 
   399     009E                     	;# 
   400     009F                     	;# 
   401     010C                     	;# 
   402     010E                     	;# 
   403     0111                     	;# 
   404     0112                     	;# 
   405     0113                     	;# 
   406     0114                     	;# 
   407     0115                     	;# 
   408     0116                     	;# 
   409     0117                     	;# 
   410     0118                     	;# 
   411     0119                     	;# 
   412     011D                     	;# 
   413     018C                     	;# 
   414     018E                     	;# 
   415     0191                     	;# 
   416     0191                     	;# 
   417     0192                     	;# 
   418     0193                     	;# 
   419     0193                     	;# 
   420     0194                     	;# 
   421     0195                     	;# 
   422     0196                     	;# 
   423     0197                     	;# 
   424     020C                     	;# 
   425     0211                     	;# 
   426     0211                     	;# 
   427     0212                     	;# 
   428     0212                     	;# 
   429     0213                     	;# 
   430     0213                     	;# 
   431     0214                     	;# 
   432     0214                     	;# 
   433     0215                     	;# 
   434     0215                     	;# 
   435     0215                     	;# 
   436     0216                     	;# 
   437     0216                     	;# 
   438     0217                     	;# 
   439     0217                     	;# 
   440     0391                     	;# 
   441     0392                     	;# 
   442     0393                     	;# 
   443     0498                     	;# 
   444     0498                     	;# 
   445     0499                     	;# 
   446     049A                     	;# 
   447     049B                     	;# 
   448     049B                     	;# 
   449     049C                     	;# 
   450     049D                     	;# 
   451     049E                     	;# 
   452     049F                     	;# 
   453     0611                     	;# 
   454     0612                     	;# 
   455     0613                     	;# 
   456     0613                     	;# 
   457     0614                     	;# 
   458     0615                     	;# 
   459     0616                     	;# 
   460     0616                     	;# 
   461     0617                     	;# 
   462     0618                     	;# 
   463     0619                     	;# 
   464     0619                     	;# 
   465     061A                     	;# 
   466     061B                     	;# 
   467     061C                     	;# 
   468     061C                     	;# 
   469     0691                     	;# 
   470     0692                     	;# 
   471     0693                     	;# 
   472     0694                     	;# 
   473     0695                     	;# 
   474     0F0F                     	;# 
   475     0F10                     	;# 
   476     0F11                     	;# 
   477     0F12                     	;# 
   478     0F13                     	;# 
   479     0F14                     	;# 
   480     0F15                     	;# 
   481     0F16                     	;# 
   482     0F17                     	;# 
   483     0F18                     	;# 
   484     0F19                     	;# 
   485     0F1A                     	;# 
   486     0F1B                     	;# 
   487     0F1C                     	;# 
   488     0F1D                     	;# 
   489     0F1E                     	;# 
   490     0F1F                     	;# 
   491     0FE3                     	;# 
   492     0FE4                     	;# 
   493     0FE5                     	;# 
   494     0FE6                     	;# 
   495     0FE7                     	;# 
   496     0FE8                     	;# 
   497     0FE9                     	;# 
   498     0FEA                     	;# 
   499     0FEB                     	;# 
   500     0FED                     	;# 
   501     0FEE                     	;# 
   502     0FEF                     	;# 
   503     0000                     	;# 
   504     0001                     	;# 
   505     0002                     	;# 
   506     0003                     	;# 
   507     0004                     	;# 
   508     0005                     	;# 
   509     0006                     	;# 
   510     0007                     	;# 
   511     0008                     	;# 
   512     0009                     	;# 
   513     000A                     	;# 
   514     000B                     	;# 
   515     000C                     	;# 
   516     000E                     	;# 
   517     0011                     	;# 
   518     0012                     	;# 
   519     0013                     	;# 
   520     0015                     	;# 
   521     0016                     	;# 
   522     0016                     	;# 
   523     0017                     	;# 
   524     0018                     	;# 
   525     0019                     	;# 
   526     001A                     	;# 
   527     001B                     	;# 
   528     001C                     	;# 
   529     008C                     	;# 
   530     008E                     	;# 
   531     0091                     	;# 
   532     0092                     	;# 
   533     0093                     	;# 
   534     0095                     	;# 
   535     0096                     	;# 
   536     0097                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009B                     	;# 
   541     009C                     	;# 
   542     009D                     	;# 
   543     009E                     	;# 
   544     009F                     	;# 
   545     010C                     	;# 
   546     010E                     	;# 
   547     0111                     	;# 
   548     0112                     	;# 
   549     0113                     	;# 
   550     0114                     	;# 
   551     0115                     	;# 
   552     0116                     	;# 
   553     0117                     	;# 
   554     0118                     	;# 
   555     0119                     	;# 
   556     011D                     	;# 
   557     018C                     	;# 
   558     018E                     	;# 
   559     0191                     	;# 
   560     0191                     	;# 
   561     0192                     	;# 
   562     0193                     	;# 
   563     0193                     	;# 
   564     0194                     	;# 
   565     0195                     	;# 
   566     0196                     	;# 
   567     0197                     	;# 
   568     020C                     	;# 
   569     0211                     	;# 
   570     0211                     	;# 
   571     0212                     	;# 
   572     0212                     	;# 
   573     0213                     	;# 
   574     0213                     	;# 
   575     0214                     	;# 
   576     0214                     	;# 
   577     0215                     	;# 
   578     0215                     	;# 
   579     0215                     	;# 
   580     0216                     	;# 
   581     0216                     	;# 
   582     0217                     	;# 
   583     0217                     	;# 
   584     0391                     	;# 
   585     0392                     	;# 
   586     0393                     	;# 
   587     0498                     	;# 
   588     0498                     	;# 
   589     0499                     	;# 
   590     049A                     	;# 
   591     049B                     	;# 
   592     049B                     	;# 
   593     049C                     	;# 
   594     049D                     	;# 
   595     049E                     	;# 
   596     049F                     	;# 
   597     0611                     	;# 
   598     0612                     	;# 
   599     0613                     	;# 
   600     0613                     	;# 
   601     0614                     	;# 
   602     0615                     	;# 
   603     0616                     	;# 
   604     0616                     	;# 
   605     0617                     	;# 
   606     0618                     	;# 
   607     0619                     	;# 
   608     0619                     	;# 
   609     061A                     	;# 
   610     061B                     	;# 
   611     061C                     	;# 
   612     061C                     	;# 
   613     0691                     	;# 
   614     0692                     	;# 
   615     0693                     	;# 
   616     0694                     	;# 
   617     0695                     	;# 
   618     0F0F                     	;# 
   619     0F10                     	;# 
   620     0F11                     	;# 
   621     0F12                     	;# 
   622     0F13                     	;# 
   623     0F14                     	;# 
   624     0F15                     	;# 
   625     0F16                     	;# 
   626     0F17                     	;# 
   627     0F18                     	;# 
   628     0F19                     	;# 
   629     0F1A                     	;# 
   630     0F1B                     	;# 
   631     0F1C                     	;# 
   632     0F1D                     	;# 
   633     0F1E                     	;# 
   634     0F1F                     	;# 
   635     0FE3                     	;# 
   636     0FE4                     	;# 
   637     0FE5                     	;# 
   638     0FE6                     	;# 
   639     0FE7                     	;# 
   640     0FE8                     	;# 
   641     0FE9                     	;# 
   642     0FEA                     	;# 
   643     0FEB                     	;# 
   644     0FED                     	;# 
   645     0FEE                     	;# 
   646     0FEF                     	;# 
   647     0000                     	;# 
   648     0001                     	;# 
   649     0002                     	;# 
   650     0003                     	;# 
   651     0004                     	;# 
   652     0005                     	;# 
   653     0006                     	;# 
   654     0007                     	;# 
   655     0008                     	;# 
   656     0009                     	;# 
   657     000A                     	;# 
   658     000B                     	;# 
   659     000C                     	;# 
   660     000E                     	;# 
   661     0011                     	;# 
   662     0012                     	;# 
   663     0013                     	;# 
   664     0015                     	;# 
   665     0016                     	;# 
   666     0016                     	;# 
   667     0017                     	;# 
   668     0018                     	;# 
   669     0019                     	;# 
   670     001A                     	;# 
   671     001B                     	;# 
   672     001C                     	;# 
   673     008C                     	;# 
   674     008E                     	;# 
   675     0091                     	;# 
   676     0092                     	;# 
   677     0093                     	;# 
   678     0095                     	;# 
   679     0096                     	;# 
   680     0097                     	;# 
   681     0099                     	;# 
   682     009A                     	;# 
   683     009B                     	;# 
   684     009B                     	;# 
   685     009C                     	;# 
   686     009D                     	;# 
   687     009E                     	;# 
   688     009F                     	;# 
   689     010C                     	;# 
   690     010E                     	;# 
   691     0111                     	;# 
   692     0112                     	;# 
   693     0113                     	;# 
   694     0114                     	;# 
   695     0115                     	;# 
   696     0116                     	;# 
   697     0117                     	;# 
   698     0118                     	;# 
   699     0119                     	;# 
   700     011D                     	;# 
   701     018C                     	;# 
   702     018E                     	;# 
   703     0191                     	;# 
   704     0191                     	;# 
   705     0192                     	;# 
   706     0193                     	;# 
   707     0193                     	;# 
   708     0194                     	;# 
   709     0195                     	;# 
   710     0196                     	;# 
   711     0197                     	;# 
   712     020C                     	;# 
   713     0211                     	;# 
   714     0211                     	;# 
   715     0212                     	;# 
   716     0212                     	;# 
   717     0213                     	;# 
   718     0213                     	;# 
   719     0214                     	;# 
   720     0214                     	;# 
   721     0215                     	;# 
   722     0215                     	;# 
   723     0215                     	;# 
   724     0216                     	;# 
   725     0216                     	;# 
   726     0217                     	;# 
   727     0217                     	;# 
   728     0391                     	;# 
   729     0392                     	;# 
   730     0393                     	;# 
   731     0498                     	;# 
   732     0498                     	;# 
   733     0499                     	;# 
   734     049A                     	;# 
   735     049B                     	;# 
   736     049B                     	;# 
   737     049C                     	;# 
   738     049D                     	;# 
   739     049E                     	;# 
   740     049F                     	;# 
   741     0611                     	;# 
   742     0612                     	;# 
   743     0613                     	;# 
   744     0613                     	;# 
   745     0614                     	;# 
   746     0615                     	;# 
   747     0616                     	;# 
   748     0616                     	;# 
   749     0617                     	;# 
   750     0618                     	;# 
   751     0619                     	;# 
   752     0619                     	;# 
   753     061A                     	;# 
   754     061B                     	;# 
   755     061C                     	;# 
   756     061C                     	;# 
   757     0691                     	;# 
   758     0692                     	;# 
   759     0693                     	;# 
   760     0694                     	;# 
   761     0695                     	;# 
   762     0F0F                     	;# 
   763     0F10                     	;# 
   764     0F11                     	;# 
   765     0F12                     	;# 
   766     0F13                     	;# 
   767     0F14                     	;# 
   768     0F15                     	;# 
   769     0F16                     	;# 
   770     0F17                     	;# 
   771     0F18                     	;# 
   772     0F19                     	;# 
   773     0F1A                     	;# 
   774     0F1B                     	;# 
   775     0F1C                     	;# 
   776     0F1D                     	;# 
   777     0F1E                     	;# 
   778     0F1F                     	;# 
   779     0FE3                     	;# 
   780     0FE4                     	;# 
   781     0FE5                     	;# 
   782     0FE6                     	;# 
   783     0FE7                     	;# 
   784     0FE8                     	;# 
   785     0FE9                     	;# 
   786     0FEA                     	;# 
   787     0FEB                     	;# 
   788     0FED                     	;# 
   789     0FEE                     	;# 
   790     0FEF                     	;# 
   791     0000                     	;# 
   792     0001                     	;# 
   793     0002                     	;# 
   794     0003                     	;# 
   795     0004                     	;# 
   796     0005                     	;# 
   797     0006                     	;# 
   798     0007                     	;# 
   799     0008                     	;# 
   800     0009                     	;# 
   801     000A                     	;# 
   802     000B                     	;# 
   803     000C                     	;# 
   804     000E                     	;# 
   805     0011                     	;# 
   806     0012                     	;# 
   807     0013                     	;# 
   808     0015                     	;# 
   809     0016                     	;# 
   810     0016                     	;# 
   811     0017                     	;# 
   812     0018                     	;# 
   813     0019                     	;# 
   814     001A                     	;# 
   815     001B                     	;# 
   816     001C                     	;# 
   817     008C                     	;# 
   818     008E                     	;# 
   819     0091                     	;# 
   820     0092                     	;# 
   821     0093                     	;# 
   822     0095                     	;# 
   823     0096                     	;# 
   824     0097                     	;# 
   825     0099                     	;# 
   826     009A                     	;# 
   827     009B                     	;# 
   828     009B                     	;# 
   829     009C                     	;# 
   830     009D                     	;# 
   831     009E                     	;# 
   832     009F                     	;# 
   833     010C                     	;# 
   834     010E                     	;# 
   835     0111                     	;# 
   836     0112                     	;# 
   837     0113                     	;# 
   838     0114                     	;# 
   839     0115                     	;# 
   840     0116                     	;# 
   841     0117                     	;# 
   842     0118                     	;# 
   843     0119                     	;# 
   844     011D                     	;# 
   845     018C                     	;# 
   846     018E                     	;# 
   847     0191                     	;# 
   848     0191                     	;# 
   849     0192                     	;# 
   850     0193                     	;# 
   851     0193                     	;# 
   852     0194                     	;# 
   853     0195                     	;# 
   854     0196                     	;# 
   855     0197                     	;# 
   856     020C                     	;# 
   857     0211                     	;# 
   858     0211                     	;# 
   859     0212                     	;# 
   860     0212                     	;# 
   861     0213                     	;# 
   862     0213                     	;# 
   863     0214                     	;# 
   864     0214                     	;# 
   865     0215                     	;# 
   866     0215                     	;# 
   867     0215                     	;# 
   868     0216                     	;# 
   869     0216                     	;# 
   870     0217                     	;# 
   871     0217                     	;# 
   872     0391                     	;# 
   873     0392                     	;# 
   874     0393                     	;# 
   875     0498                     	;# 
   876     0498                     	;# 
   877     0499                     	;# 
   878     049A                     	;# 
   879     049B                     	;# 
   880     049B                     	;# 
   881     049C                     	;# 
   882     049D                     	;# 
   883     049E                     	;# 
   884     049F                     	;# 
   885     0611                     	;# 
   886     0612                     	;# 
   887     0613                     	;# 
   888     0613                     	;# 
   889     0614                     	;# 
   890     0615                     	;# 
   891     0616                     	;# 
   892     0616                     	;# 
   893     0617                     	;# 
   894     0618                     	;# 
   895     0619                     	;# 
   896     0619                     	;# 
   897     061A                     	;# 
   898     061B                     	;# 
   899     061C                     	;# 
   900     061C                     	;# 
   901     0691                     	;# 
   902     0692                     	;# 
   903     0693                     	;# 
   904     0694                     	;# 
   905     0695                     	;# 
   906     0F0F                     	;# 
   907     0F10                     	;# 
   908     0F11                     	;# 
   909     0F12                     	;# 
   910     0F13                     	;# 
   911     0F14                     	;# 
   912     0F15                     	;# 
   913     0F16                     	;# 
   914     0F17                     	;# 
   915     0F18                     	;# 
   916     0F19                     	;# 
   917     0F1A                     	;# 
   918     0F1B                     	;# 
   919     0F1C                     	;# 
   920     0F1D                     	;# 
   921     0F1E                     	;# 
   922     0F1F                     	;# 
   923     0FE3                     	;# 
   924     0FE4                     	;# 
   925     0FE5                     	;# 
   926     0FE6                     	;# 
   927     0FE7                     	;# 
   928     0FE8                     	;# 
   929     0FE9                     	;# 
   930     0FEA                     	;# 
   931     0FEB                     	;# 
   932     0FED                     	;# 
   933     0FEE                     	;# 
   934     0FEF                     	;# 
   935     0000                     	;# 
   936     0001                     	;# 
   937     0002                     	;# 
   938     0003                     	;# 
   939     0004                     	;# 
   940     0005                     	;# 
   941     0006                     	;# 
   942     0007                     	;# 
   943     0008                     	;# 
   944     0009                     	;# 
   945     000A                     	;# 
   946     000B                     	;# 
   947     000C                     	;# 
   948     000E                     	;# 
   949     0011                     	;# 
   950     0012                     	;# 
   951     0013                     	;# 
   952     0015                     	;# 
   953     0016                     	;# 
   954     0016                     	;# 
   955     0017                     	;# 
   956     0018                     	;# 
   957     0019                     	;# 
   958     001A                     	;# 
   959     001B                     	;# 
   960     001C                     	;# 
   961     008C                     	;# 
   962     008E                     	;# 
   963     0091                     	;# 
   964     0092                     	;# 
   965     0093                     	;# 
   966     0095                     	;# 
   967     0096                     	;# 
   968     0097                     	;# 
   969     0099                     	;# 
   970     009A                     	;# 
   971     009B                     	;# 
   972     009B                     	;# 
   973     009C                     	;# 
   974     009D                     	;# 
   975     009E                     	;# 
   976     009F                     	;# 
   977     010C                     	;# 
   978     010E                     	;# 
   979     0111                     	;# 
   980     0112                     	;# 
   981     0113                     	;# 
   982     0114                     	;# 
   983     0115                     	;# 
   984     0116                     	;# 
   985     0117                     	;# 
   986     0118                     	;# 
   987     0119                     	;# 
   988     011D                     	;# 
   989     018C                     	;# 
   990     018E                     	;# 
   991     0191                     	;# 
   992     0191                     	;# 
   993     0192                     	;# 
   994     0193                     	;# 
   995     0193                     	;# 
   996     0194                     	;# 
   997     0195                     	;# 
   998     0196                     	;# 
   999     0197                     	;# 
  1000     020C                     	;# 
  1001     0211                     	;# 
  1002     0211                     	;# 
  1003     0212                     	;# 
  1004     0212                     	;# 
  1005     0213                     	;# 
  1006     0213                     	;# 
  1007     0214                     	;# 
  1008     0214                     	;# 
  1009     0215                     	;# 
  1010     0215                     	;# 
  1011     0215                     	;# 
  1012     0216                     	;# 
  1013     0216                     	;# 
  1014     0217                     	;# 
  1015     0217                     	;# 
  1016     0391                     	;# 
  1017     0392                     	;# 
  1018     0393                     	;# 
  1019     0498                     	;# 
  1020     0498                     	;# 
  1021     0499                     	;# 
  1022     049A                     	;# 
  1023     049B                     	;# 
  1024     049B                     	;# 
  1025     049C                     	;# 
  1026     049D                     	;# 
  1027     049E                     	;# 
  1028     049F                     	;# 
  1029     0611                     	;# 
  1030     0612                     	;# 
  1031     0613                     	;# 
  1032     0613                     	;# 
  1033     0614                     	;# 
  1034     0615                     	;# 
  1035     0616                     	;# 
  1036     0616                     	;# 
  1037     0617                     	;# 
  1038     0618                     	;# 
  1039     0619                     	;# 
  1040     0619                     	;# 
  1041     061A                     	;# 
  1042     061B                     	;# 
  1043     061C                     	;# 
  1044     061C                     	;# 
  1045     0691                     	;# 
  1046     0692                     	;# 
  1047     0693                     	;# 
  1048     0694                     	;# 
  1049     0695                     	;# 
  1050     0F0F                     	;# 
  1051     0F10                     	;# 
  1052     0F11                     	;# 
  1053     0F12                     	;# 
  1054     0F13                     	;# 
  1055     0F14                     	;# 
  1056     0F15                     	;# 
  1057     0F16                     	;# 
  1058     0F17                     	;# 
  1059     0F18                     	;# 
  1060     0F19                     	;# 
  1061     0F1A                     	;# 
  1062     0F1B                     	;# 
  1063     0F1C                     	;# 
  1064     0F1D                     	;# 
  1065     0F1E                     	;# 
  1066     0F1F                     	;# 
  1067     0FE3                     	;# 
  1068     0FE4                     	;# 
  1069     0FE5                     	;# 
  1070     0FE6                     	;# 
  1071     0FE7                     	;# 
  1072     0FE8                     	;# 
  1073     0FE9                     	;# 
  1074     0FEA                     	;# 
  1075     0FEB                     	;# 
  1076     0FED                     	;# 
  1077     0FEE                     	;# 
  1078     0FEF                     	;# 
  1079                           
  1080                           	psect	idataBANK0
  1081     03F2                     __pidataBANK0:
  1082                           
  1083                           ;initializer for _BOTON2_MIN
  1084     03F2  341E               	retlw	30
  1085     03F3  3402               	retlw	2
  1086                           
  1087                           ;initializer for _BOTON1_MIN
  1088     03F4  341E               	retlw	30
  1089     03F5  3402               	retlw	2
  1090                           
  1091                           ;initializer for _BOTON2_MAX
  1092     03F6  3490               	retlw	144
  1093     03F7  3402               	retlw	2
  1094                           
  1095                           ;initializer for _BOTON1_MAX
  1096     03F8  3490               	retlw	144
  1097     03F9  3402               	retlw	2
  1098                           
  1099                           	psect	idataBANK1
  1100     0490                     __pidataBANK1:
  1101                           
  1102                           ;initializer for save_to_nonvolatile@F57
  1103     0490  34FF               	retlw	255
  1104     0491  3400               	retlw	0
  1105     0492  34FF               	retlw	255
  1106     0493  3400               	retlw	0
  1107     0494  34FF               	retlw	255
  1108     0495  3400               	retlw	0
  1109     0496  34FF               	retlw	255
  1110     0497  3400               	retlw	0
  1111     0498  34FF               	retlw	255
  1112     0499  3400               	retlw	0
  1113     049A  34FF               	retlw	255
  1114     049B  3400               	retlw	0
  1115     049C  34FF               	retlw	255
  1116     049D  3400               	retlw	0
  1117     049E  34FF               	retlw	255
  1118     049F  3400               	retlw	0
  1119     04A0  34FF               	retlw	255
  1120     04A1  3400               	retlw	0
  1121     04A2  34FF               	retlw	255
  1122     04A3  3400               	retlw	0
  1123     04A4  34FF               	retlw	255
  1124     04A5  3400               	retlw	0
  1125     04A6  34FF               	retlw	255
  1126     04A7  3400               	retlw	0
  1127     04A8  34FF               	retlw	255
  1128     04A9  3400               	retlw	0
  1129     04AA  34FF               	retlw	255
  1130     04AB  3400               	retlw	0
  1131     04AC  34FF               	retlw	255
  1132     04AD  3400               	retlw	0
  1133     04AE  34FF               	retlw	255
  1134     04AF  3400               	retlw	0
  1135                           
  1136                           	psect	stringtext1
  1137     03D0                     __pstringtext1:
  1138     03D0                     _DCmaxCCW:
  1139     03D0  34F4               	retlw	244
  1140     03D1  3401               	retlw	1
  1141     03D2                     __end_of_DCmaxCCW:
  1142                           
  1143                           	psect	stringtext2
  1144     03CE                     __pstringtext2:
  1145     03CE                     _DCmaxCW:
  1146     03CE  34FA               	retlw	250
  1147     03CF  3400               	retlw	0
  1148     03D0                     __end_of_DCmaxCW:
  1149                           
  1150                           	psect	stringtext3
  1151     03CC                     __pstringtext3:
  1152     03CC                     _DCmin:
  1153     03CC  3476               	retlw	118
  1154     03CD  3401               	retlw	1
  1155     03CE                     __end_of_DCmin:
  1156     000B                     _INTCONbits	set	11
  1157     001C                     _T2CONbits	set	28
  1158     001C                     _T2CON	set	28
  1159     0011                     _PIR1bits	set	17
  1160     001A                     _TMR2	set	26
  1161     001B                     _PR2	set	27
  1162     0095                     _OPTION_REGbits	set	149
  1163     008E                     _TRISC	set	142
  1164     008C                     _TRISA	set	140
  1165     0097                     _WDTCON	set	151
  1166     0099                     _OSCCON	set	153
  1167     009D                     _ADCON0bits	set	157
  1168     009D                     _ADCON0	set	157
  1169     009C                     _ADRESH	set	156
  1170     009B                     _ADRESL	set	155
  1171     009F                     _ADCON2	set	159
  1172     009E                     _ADCON1	set	158
  1173     011D                     _APFCON	set	285
  1174     010E                     _LATC	set	270
  1175     010C                     _LATA	set	268
  1176     0116                     _BORCON	set	278
  1177     018C                     _ANSELA	set	396
  1178     018E                     _ANSELC	set	398
  1179     0196                     _PMCON2	set	406
  1180     0193                     _PMDATL	set	403
  1181     0194                     _PMDATH	set	404
  1182     0195                     _PMCON1bits	set	405
  1183     0192                     _PMADRH	set	402
  1184     0191                     _PMADRL	set	401
  1185     020C                     _WPUA	set	524
  1186     0611                     _PWM1DCL	set	1553
  1187     0612                     _PWM1DCH	set	1554
  1188     0613                     _PWM1CON	set	1555
  1189                           
  1190                           	psect	cinit
  1191     07E4                     start_initialization:	
  1192                           ; #config settings
  1193                           
  1194     07E4                     __initialization:
  1195                           
  1196                           ; Initialize objects allocated to BANK0
  1197     07E4  30F2               	movlw	low __pidataBANK0
  1198     07E5  0084               	movwf	4
  1199     07E6  3083               	movlw	(high __pidataBANK0)| (0+128)
  1200     07E7  0085               	movwf	5
  1201     07E8  3050               	movlw	low __pdataBANK0
  1202     07E9  0086               	movwf	6
  1203     07EA  3000               	movlw	high __pdataBANK0
  1204     07EB  0087               	movwf	7
  1205     07EC  3008               	movlw	8
  1206     07ED  3183  23DC  3187   	fcall	init_ram
  1207                           
  1208                           ; Initialize objects allocated to BANK1
  1209     07F0  3090               	movlw	low __pidataBANK1
  1210     07F1  0084               	movwf	4
  1211     07F2  3084               	movlw	(high __pidataBANK1)| (0+128)
  1212     07F3  0085               	movwf	5
  1213     07F4  30A0               	movlw	low __pdataBANK1
  1214     07F5  0086               	movwf	6
  1215     07F6  3000               	movlw	high __pdataBANK1
  1216     07F7  0087               	movwf	7
  1217     07F8  3020               	movlw	32
  1218     07F9  3183  23DC  3187   	fcall	init_ram
  1219                           
  1220                           ; Clear objects allocated to BANK0
  1221     07FC  01D8               	clrf	__pbssBANK0& (0+127)
  1222     07FD  01D9               	clrf	(__pbssBANK0+1)& (0+127)
  1223     07FE                     end_of_initialization:	
  1224                           ;End of C runtime variable initialization code
  1225                           
  1226     07FE                     __end_of__initialization:
  1227     07FE  0020               	movlb	0
  1228     07FF  2DB5               	ljmp	_main	;jump to C main() function
  1229                           
  1230                           	psect	bssBANK0
  1231     0058                     __pbssBANK0:
  1232     0058                     _ADC_InterruptHandler:
  1233     0058                     	ds	2
  1234                           
  1235                           	psect	dataBANK0
  1236     0050                     __pdataBANK0:
  1237     0050                     _BOTON2_MIN:
  1238     0050                     	ds	2
  1239     0052                     _BOTON1_MIN:
  1240     0052                     	ds	2
  1241     0054                     _BOTON2_MAX:
  1242     0054                     	ds	2
  1243     0056                     _BOTON1_MAX:
  1244     0056                     	ds	2
  1245                           
  1246                           	psect	dataBANK1
  1247     00A0                     __pdataBANK1:
  1248     00A0                     save_to_nonvolatile@F57:
  1249     00A0                     	ds	32
  1250                           
  1251                           	psect	inittext
  1252     03DC                     init_ram:
  1253     03DC  00FE               	movwf	btemp
  1254     03DD                     initloop:
  1255     03DD  0012               	moviw fsr0++
  1256     03DE  001E               	movwi fsr1++
  1257     03DF  0BFE               	decfsz	btemp,f
  1258     03E0  2BDD               	goto	initloop
  1259     03E1  3400               	retlw	0
  1260                           
  1261                           	psect	cstackCOMMON
  1262     0070                     __pcstackCOMMON:
  1263     0070                     ?_FLASH_EraseBlock:
  1264     0070                     ?_PIN_MANAGER_Initialize:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ??_PIN_MANAGER_Initialize:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ?_OSCILLATOR_Initialize:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ??_OSCILLATOR_Initialize:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ?_WDT_Initialize:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ??_WDT_Initialize:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ?_PWM1_Initialize:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ??_PWM1_Initialize:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ?_read_from_nonvolatile:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ?_save_to_nonvolatile:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ?_ADC_Initialize:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ??_ADC_Initialize:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0070                     ?_TMR2_Initialize:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303     0070                     ??_TMR2_Initialize:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306     0070                     ?_SYSTEM_Initialize:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309     0070                     ??_SYSTEM_Initialize:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     ?_PWM1_LoadDutyValue:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ?_ADC_GetConversion:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     ?_FLASH_ReadWord:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321     0070                     ?_main:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324     0070                     ?___lwdiv:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327     0070                     FLASH_ReadWord@flashAddr:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330     0070                     FLASH_EraseBlock@startAddr:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333     0070                     PWM1_LoadDutyValue@dutyValue:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336     0070                     ___lwdiv@divisor:	
  1337                           ; 2 bytes @ 0x0
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x0
  1341     0070                     	ds	2
  1342     0072                     ??_FLASH_EraseBlock:
  1343     0072                     ??_ADC_GetConversion:	
  1344                           ; 1 bytes @ 0x2
  1345                           
  1346     0072                     ??_FLASH_ReadWord:	
  1347                           ; 1 bytes @ 0x2
  1348                           
  1349     0072                     ??_PWM1_LoadDutyValue:	
  1350                           ; 1 bytes @ 0x2
  1351                           
  1352     0072                     FLASH_ReadWord@GIEBitValue:	
  1353                           ; 1 bytes @ 0x2
  1354                           
  1355     0072                     FLASH_EraseBlock@GIEBitValue:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358     0072                     ___lwdiv@dividend:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x2
  1363     0072                     	ds	1
  1364     0073                     ?_FLASH_WriteBlock:
  1365     0073                     ??_read_from_nonvolatile:	
  1366                           ; 1 bytes @ 0x3
  1367                           
  1368     0073                     ADC_GetConversion@channel:	
  1369                           ; 1 bytes @ 0x3
  1370                           
  1371     0073                     FLASH_WriteBlock@writeAddr:	
  1372                           ; 1 bytes @ 0x3
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x3
  1376     0073                     	ds	1
  1377     0074                     ??___lwdiv:
  1378                           
  1379                           ; 1 bytes @ 0x4
  1380     0074                     	ds	1
  1381     0075                     FLASH_WriteBlock@flashWordArray:
  1382     0075                     ___lwdiv@quotient:	
  1383                           ; 1 bytes @ 0x5
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x5
  1387     0075                     	ds	1
  1388     0076                     ??_FLASH_WriteBlock:
  1389                           
  1390                           ; 1 bytes @ 0x6
  1391     0076                     	ds	1
  1392     0077                     ___lwdiv@counter:
  1393                           
  1394                           ; 1 bytes @ 0x7
  1395     0077                     	ds	2
  1396     0079                     FLASH_WriteBlock@blockStartAddr:
  1397                           
  1398                           ; 2 bytes @ 0x9
  1399     0079                     	ds	2
  1400     007B                     FLASH_WriteBlock@GIEBitValue:
  1401                           
  1402                           ; 1 bytes @ 0xB
  1403     007B                     	ds	1
  1404     007C                     FLASH_WriteBlock@i:
  1405                           
  1406                           ; 1 bytes @ 0xC
  1407     007C                     	ds	1
  1408     007D                     ??_save_to_nonvolatile:
  1409                           
  1410                           ; 1 bytes @ 0xD
  1411     007D                     	ds	1
  1412                           
  1413                           	psect	cstackBANK0
  1414     0020                     __pcstackBANK0:
  1415     0020                     save_to_nonvolatile@bloque:
  1416                           
  1417                           ; 32 bytes @ 0x0
  1418     0020                     	ds	32
  1419     0040                     ??_main:
  1420                           
  1421                           ; 1 bytes @ 0x20
  1422     0040                     	ds	2
  1423     0042                     main@i:
  1424                           
  1425                           ; 2 bytes @ 0x22
  1426     0042                     	ds	2
  1427     0044                     main@i_387:
  1428                           
  1429                           ; 2 bytes @ 0x24
  1430     0044                     	ds	2
  1431     0046                     main@C1p:
  1432                           
  1433                           ; 2 bytes @ 0x26
  1434     0046                     	ds	2
  1435     0048                     main@C2p:
  1436                           
  1437                           ; 2 bytes @ 0x28
  1438     0048                     	ds	2
  1439     004A                     main@C1:
  1440                           
  1441                           ; 2 bytes @ 0x2A
  1442     004A                     	ds	2
  1443     004C                     main@C2:
  1444                           
  1445                           ; 2 bytes @ 0x2C
  1446     004C                     	ds	2
  1447     004E                     main@dc:
  1448                           
  1449                           ; 2 bytes @ 0x2E
  1450     004E                     	ds	2
  1451                           
  1452                           	psect	maintext
  1453     05B5                     __pmaintext:	
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 53 in file "main.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  i               2   36[BANK0 ] int 
  1464 ;;  i               2   34[BANK0 ] int 
  1465 ;;  C2p             2   40[BANK0 ] unsigned short 
  1466 ;;  C1p             2   38[BANK0 ] unsigned short 
  1467 ;;  dc              2   46[BANK0 ] unsigned short 
  1468 ;;  C2              2   44[BANK0 ] unsigned short 
  1469 ;;  C1              2   42[BANK0 ] unsigned short 
  1470 ;;  C2s             2    0        unsigned short 
  1471 ;;  C1s             2    0        unsigned short 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2  203[None  ] int 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : B1F/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1
  1481 ;;      Params:         0       0       0
  1482 ;;      Locals:         0      14       0
  1483 ;;      Temps:          0       2       0
  1484 ;;      Totals:         0      16       0
  1485 ;;Total ram usage:       16 bytes
  1486 ;; Hardware stack levels required when called: 3
  1487 ;; This function calls:
  1488 ;;		_ADC_GetConversion
  1489 ;;		_PWM1_LoadDutyValue
  1490 ;;		_SYSTEM_Initialize
  1491 ;;		___lwdiv
  1492 ;;		_read_from_nonvolatile
  1493 ;;		_save_to_nonvolatile
  1494 ;; This function is called by:
  1495 ;;		Startup code after reset
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     05B5                     _main:	
  1500                           ;psect for function _main
  1501                           
  1502     05B5                     l1360:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1505                           
  1506                           
  1507                           ;main.c: 55:  SYSTEM_Initialize();
  1508     05B5  3184  2403  3185   	fcall	_SYSTEM_Initialize
  1509                           
  1510                           ;main.c: 56:       read_from_nonvolatile();
  1511     05B8  3185  2517  3185   	fcall	_read_from_nonvolatile
  1512     05BB                     l1362:
  1513                           
  1514                           ;main.c: 57:  _delay((unsigned long)((200)*(16000000/4000.0)));
  1515     05BB  3005               	movlw	5
  1516     05BC  0020               	movlb	0	; select bank0
  1517     05BD  00C1               	movwf	??_main+1
  1518     05BE  300F               	movlw	15
  1519     05BF  00C0               	movwf	??_main
  1520     05C0  30F1               	movlw	241
  1521     05C1                     u567:
  1522     05C1  0B89               	decfsz	9,f
  1523     05C2  2DC1               	goto	u567
  1524     05C3  0BC0               	decfsz	??_main,f
  1525     05C4  2DC1               	goto	u567
  1526     05C5  0BC1               	decfsz	??_main+1,f
  1527     05C6  2DC1               	goto	u567
  1528     05C7                     l1364:
  1529     05C7                     l1366:
  1530     05C7                     l1368:
  1531                           
  1532                           ;main.c: 64:    C1 = ADC_GetConversion(hallC1);
  1533     05C7  3005               	movlw	5
  1534     05C8  3184  2459  3185   	fcall	_ADC_GetConversion
  1535     05CB  0871               	movf	?_ADC_GetConversion+1,w
  1536     05CC  0020               	movlb	0	; select bank0
  1537     05CD  00CB               	movwf	main@C1+1
  1538     05CE  0870               	movf	?_ADC_GetConversion,w
  1539     05CF  00CA               	movwf	main@C1
  1540     05D0                     l1370:
  1541                           
  1542                           ;main.c: 65:    C2 = ADC_GetConversion(hallC2);
  1543     05D0  3006               	movlw	6
  1544     05D1  3184  2459  3185   	fcall	_ADC_GetConversion
  1545     05D4  0871               	movf	?_ADC_GetConversion+1,w
  1546     05D5  0020               	movlb	0	; select bank0
  1547     05D6  00CD               	movwf	main@C2+1
  1548     05D7  0870               	movf	?_ADC_GetConversion,w
  1549     05D8  00CC               	movwf	main@C2
  1550     05D9                     l1372:
  1551                           
  1552                           ;main.c: 67:    if (C1 > 575 && C2 > 575) {
  1553     05D9  3002               	movlw	2
  1554     05DA  024B               	subwf	main@C1+1,w
  1555     05DB  3040               	movlw	64
  1556     05DC  1903               	skipnz
  1557     05DD  024A               	subwf	main@C1,w
  1558     05DE  1C03               	skipc
  1559     05DF  2DE1               	goto	u421
  1560     05E0  2DE2               	goto	u420
  1561     05E1                     u421:
  1562     05E1  2F0F               	goto	l1430
  1563     05E2                     u420:
  1564     05E2                     l1374:
  1565     05E2  3002               	movlw	2
  1566     05E3  024D               	subwf	main@C2+1,w
  1567     05E4  3040               	movlw	64
  1568     05E5  1903               	skipnz
  1569     05E6  024C               	subwf	main@C2,w
  1570     05E7  1C03               	skipc
  1571     05E8  2DEA               	goto	u431
  1572     05E9  2DEB               	goto	u430
  1573     05EA                     u431:
  1574     05EA  2F0F               	goto	l1430
  1575     05EB                     u430:
  1576     05EB                     l1376:
  1577                           
  1578                           ;main.c: 68:       uint16_t C1p = 0;
  1579     05EB  01C6               	clrf	main@C1p
  1580     05EC  01C7               	clrf	main@C1p+1
  1581                           
  1582                           ;main.c: 69:       uint16_t C2p = 0;
  1583     05ED  01C8               	clrf	main@C2p
  1584     05EE  01C9               	clrf	main@C2p+1
  1585                           
  1586                           ;main.c: 70:       for (int i=0;i<5;i++){
  1587     05EF  01C2               	clrf	main@i
  1588     05F0  01C3               	clrf	main@i+1
  1589     05F1                     l1382:
  1590                           
  1591                           ;main.c: 71:          C1p += ADC_GetConversion(hallC1);
  1592     05F1  3005               	movlw	5
  1593     05F2  3184  2459  3185   	fcall	_ADC_GetConversion
  1594     05F5  0870               	movf	?_ADC_GetConversion,w
  1595     05F6  0020               	movlb	0	; select bank0
  1596     05F7  07C6               	addwf	main@C1p,f
  1597     05F8  0871               	movf	?_ADC_GetConversion+1,w
  1598     05F9  3DC7               	addwfc	main@C1p+1,f
  1599                           
  1600                           ;main.c: 72:          C2p += ADC_GetConversion(hallC2);
  1601     05FA  3006               	movlw	6
  1602     05FB  3184  2459  3185   	fcall	_ADC_GetConversion
  1603     05FE  0870               	movf	?_ADC_GetConversion,w
  1604     05FF  0020               	movlb	0	; select bank0
  1605     0600  07C8               	addwf	main@C2p,f
  1606     0601  0871               	movf	?_ADC_GetConversion+1,w
  1607     0602  3DC9               	addwfc	main@C2p+1,f
  1608     0603                     l1384:
  1609                           
  1610                           ;main.c: 73:       }
  1611     0603  3001               	movlw	1
  1612     0604  07C2               	addwf	main@i,f
  1613     0605  3000               	movlw	0
  1614     0606  3DC3               	addwfc	main@i+1,f
  1615     0607                     l1386:
  1616     0607  0843               	movf	main@i+1,w
  1617     0608  3A80               	xorlw	128
  1618     0609  00C0               	movwf	??_main
  1619     060A  3080               	movlw	128
  1620     060B  0240               	subwf	??_main,w
  1621     060C  1D03               	skipz
  1622     060D  2E10               	goto	u445
  1623     060E  3005               	movlw	5
  1624     060F  0242               	subwf	main@i,w
  1625     0610                     u445:
  1626     0610  1C03               	skipc
  1627     0611  2E13               	goto	u441
  1628     0612  2E14               	goto	u440
  1629     0613                     u441:
  1630     0613  2DF1               	goto	l1382
  1631     0614                     u440:
  1632     0614                     l1388:
  1633                           
  1634                           ;main.c: 74:       BOTON1_MAX = C1p/5;
  1635     0614  3005               	movlw	5
  1636     0615  00F0               	movwf	___lwdiv@divisor
  1637     0616  3000               	movlw	0
  1638     0617  00F1               	movwf	___lwdiv@divisor+1
  1639     0618  0020               	movlb	0	; select bank0
  1640     0619  0847               	movf	main@C1p+1,w
  1641     061A  00F3               	movwf	___lwdiv@dividend+1
  1642     061B  0846               	movf	main@C1p,w
  1643     061C  00F2               	movwf	___lwdiv@dividend
  1644     061D  3184  24DB  3185   	fcall	___lwdiv
  1645     0620  0871               	movf	?___lwdiv+1,w
  1646     0621  0020               	movlb	0	; select bank0
  1647     0622  00D7               	movwf	_BOTON1_MAX+1
  1648     0623  0870               	movf	?___lwdiv,w
  1649     0624  00D6               	movwf	_BOTON1_MAX
  1650                           
  1651                           ;main.c: 75:       BOTON2_MAX = C2p/5;
  1652     0625  3005               	movlw	5
  1653     0626  00F0               	movwf	___lwdiv@divisor
  1654     0627  3000               	movlw	0
  1655     0628  00F1               	movwf	___lwdiv@divisor+1
  1656     0629  0849               	movf	main@C2p+1,w
  1657     062A  00F3               	movwf	___lwdiv@dividend+1
  1658     062B  0848               	movf	main@C2p,w
  1659     062C  00F2               	movwf	___lwdiv@dividend
  1660     062D  3184  24DB  3185   	fcall	___lwdiv
  1661     0630  0871               	movf	?___lwdiv+1,w
  1662     0631  0020               	movlb	0	; select bank0
  1663     0632  00D5               	movwf	_BOTON2_MAX+1
  1664     0633  0870               	movf	?___lwdiv,w
  1665     0634  00D4               	movwf	_BOTON2_MAX
  1666                           
  1667                           ;main.c: 77:       PWM1_LoadDutyValue(DCmaxCW);
  1668     0635  30FA               	movlw	250
  1669     0636  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1670     0637  3000               	movlw	0
  1671     0638  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1672     0639  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1673     063C                     l1390:
  1674                           
  1675                           ;main.c: 78:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1676     063C  3029               	movlw	41
  1677     063D  0020               	movlb	0	; select bank0
  1678     063E  00C1               	movwf	??_main+1
  1679     063F  3096               	movlw	150
  1680     0640  00C0               	movwf	??_main
  1681     0641  307F               	movlw	127
  1682     0642                     u577:
  1683     0642  0B89               	decfsz	9,f
  1684     0643  2E42               	goto	u577
  1685     0644  0BC0               	decfsz	??_main,f
  1686     0645  2E42               	goto	u577
  1687     0646  0BC1               	decfsz	??_main+1,f
  1688     0647  2E42               	goto	u577
  1689     0648                     l1392:
  1690                           
  1691                           ;main.c: 79:       PWM1_LoadDutyValue(DCmaxCCW);
  1692     0648  30F4               	movlw	244
  1693     0649  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1694     064A  3001               	movlw	1
  1695     064B  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1696     064C  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1697                           
  1698                           ;main.c: 80:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1699     064F  3029               	movlw	41
  1700     0650  0020               	movlb	0	; select bank0
  1701     0651  00C1               	movwf	??_main+1
  1702     0652  3096               	movlw	150
  1703     0653  00C0               	movwf	??_main
  1704     0654  307F               	movlw	127
  1705     0655                     u587:
  1706     0655  0B89               	decfsz	9,f
  1707     0656  2E55               	goto	u587
  1708     0657  0BC0               	decfsz	??_main,f
  1709     0658  2E55               	goto	u587
  1710     0659  0BC1               	decfsz	??_main+1,f
  1711     065A  2E55               	goto	u587
  1712     065B                     l1394:
  1713                           
  1714                           ;main.c: 81:       PWM1_LoadDutyValue(DCmin);
  1715     065B  3076               	movlw	118
  1716     065C  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1717     065D  3001               	movlw	1
  1718     065E  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1719     065F  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1720     0662                     l1396:
  1721                           
  1722                           ;main.c: 83:       C1p = 0;
  1723     0662  0020               	movlb	0	; select bank0
  1724     0663  01C6               	clrf	main@C1p
  1725     0664  01C7               	clrf	main@C1p+1
  1726     0665                     l1398:
  1727                           
  1728                           ;main.c: 84:       C2p = 0;
  1729     0665  01C8               	clrf	main@C2p
  1730     0666  01C9               	clrf	main@C2p+1
  1731                           
  1732                           ;main.c: 86:       while (C1 > 550 || C2 > 550) {
  1733     0667  2E7A               	goto	l1402
  1734     0668                     l1400:
  1735                           
  1736                           ;main.c: 87:          C1 = ADC_GetConversion(hallC1);
  1737     0668  3005               	movlw	5
  1738     0669  3184  2459  3185   	fcall	_ADC_GetConversion
  1739     066C  0871               	movf	?_ADC_GetConversion+1,w
  1740     066D  0020               	movlb	0	; select bank0
  1741     066E  00CB               	movwf	main@C1+1
  1742     066F  0870               	movf	?_ADC_GetConversion,w
  1743     0670  00CA               	movwf	main@C1
  1744                           
  1745                           ;main.c: 88:          C2 = ADC_GetConversion(hallC2);
  1746     0671  3006               	movlw	6
  1747     0672  3184  2459  3185   	fcall	_ADC_GetConversion
  1748     0675  0871               	movf	?_ADC_GetConversion+1,w
  1749     0676  0020               	movlb	0	; select bank0
  1750     0677  00CD               	movwf	main@C2+1
  1751     0678  0870               	movf	?_ADC_GetConversion,w
  1752     0679  00CC               	movwf	main@C2
  1753     067A                     l1402:
  1754                           
  1755                           ;main.c: 86:       while (C1 > 550 || C2 > 550) {
  1756     067A  3002               	movlw	2
  1757     067B  024B               	subwf	main@C1+1,w
  1758     067C  3027               	movlw	39
  1759     067D  1903               	skipnz
  1760     067E  024A               	subwf	main@C1,w
  1761     067F  1803               	skipnc
  1762     0680  2E82               	goto	u451
  1763     0681  2E83               	goto	u450
  1764     0682                     u451:
  1765     0682  2E68               	goto	l1400
  1766     0683                     u450:
  1767     0683                     l1404:
  1768     0683  3002               	movlw	2
  1769     0684  024D               	subwf	main@C2+1,w
  1770     0685  3027               	movlw	39
  1771     0686  1903               	skipnz
  1772     0687  024C               	subwf	main@C2,w
  1773     0688  1803               	skipnc
  1774     0689  2E8B               	goto	u461
  1775     068A  2E8C               	goto	u460
  1776     068B                     u461:
  1777     068B  2E68               	goto	l1400
  1778     068C                     u460:
  1779     068C                     l1406:
  1780                           
  1781                           ;main.c: 90:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1782     068C  3029               	movlw	41
  1783     068D  0020               	movlb	0	; select bank0
  1784     068E  00C1               	movwf	??_main+1
  1785     068F  3096               	movlw	150
  1786     0690  00C0               	movwf	??_main
  1787     0691  307F               	movlw	127
  1788     0692                     u597:
  1789     0692  0B89               	decfsz	9,f
  1790     0693  2E92               	goto	u597
  1791     0694  0BC0               	decfsz	??_main,f
  1792     0695  2E92               	goto	u597
  1793     0696  0BC1               	decfsz	??_main+1,f
  1794     0697  2E92               	goto	u597
  1795     0698                     l1408:
  1796                           
  1797                           ;main.c: 92:       for (int i=0;i<5;i++){
  1798     0698  0020               	movlb	0	; select bank0
  1799     0699  01C4               	clrf	main@i_387
  1800     069A  01C5               	clrf	main@i_387+1
  1801     069B                     l1414:
  1802                           
  1803                           ;main.c: 93:          C1p += ADC_GetConversion(hallC1);
  1804     069B  3005               	movlw	5
  1805     069C  3184  2459  3185   	fcall	_ADC_GetConversion
  1806     069F  0870               	movf	?_ADC_GetConversion,w
  1807     06A0  0020               	movlb	0	; select bank0
  1808     06A1  07C6               	addwf	main@C1p,f
  1809     06A2  0871               	movf	?_ADC_GetConversion+1,w
  1810     06A3  3DC7               	addwfc	main@C1p+1,f
  1811                           
  1812                           ;main.c: 94:          C2p += ADC_GetConversion(hallC2);
  1813     06A4  3006               	movlw	6
  1814     06A5  3184  2459  3185   	fcall	_ADC_GetConversion
  1815     06A8  0870               	movf	?_ADC_GetConversion,w
  1816     06A9  0020               	movlb	0	; select bank0
  1817     06AA  07C8               	addwf	main@C2p,f
  1818     06AB  0871               	movf	?_ADC_GetConversion+1,w
  1819     06AC  3DC9               	addwfc	main@C2p+1,f
  1820     06AD                     l1416:
  1821                           
  1822                           ;main.c: 95:       }
  1823     06AD  3001               	movlw	1
  1824     06AE  07C4               	addwf	main@i_387,f
  1825     06AF  3000               	movlw	0
  1826     06B0  3DC5               	addwfc	main@i_387+1,f
  1827     06B1                     l1418:
  1828     06B1  0845               	movf	main@i_387+1,w
  1829     06B2  3A80               	xorlw	128
  1830     06B3  00C0               	movwf	??_main
  1831     06B4  3080               	movlw	128
  1832     06B5  0240               	subwf	??_main,w
  1833     06B6  1D03               	skipz
  1834     06B7  2EBA               	goto	u475
  1835     06B8  3005               	movlw	5
  1836     06B9  0244               	subwf	main@i_387,w
  1837     06BA                     u475:
  1838     06BA  1C03               	skipc
  1839     06BB  2EBD               	goto	u471
  1840     06BC  2EBE               	goto	u470
  1841     06BD                     u471:
  1842     06BD  2E9B               	goto	l1414
  1843     06BE                     u470:
  1844     06BE                     l1420:
  1845                           
  1846                           ;main.c: 96:       BOTON1_MIN = C1p/5;
  1847     06BE  3005               	movlw	5
  1848     06BF  00F0               	movwf	___lwdiv@divisor
  1849     06C0  3000               	movlw	0
  1850     06C1  00F1               	movwf	___lwdiv@divisor+1
  1851     06C2  0020               	movlb	0	; select bank0
  1852     06C3  0847               	movf	main@C1p+1,w
  1853     06C4  00F3               	movwf	___lwdiv@dividend+1
  1854     06C5  0846               	movf	main@C1p,w
  1855     06C6  00F2               	movwf	___lwdiv@dividend
  1856     06C7  3184  24DB  3185   	fcall	___lwdiv
  1857     06CA  0871               	movf	?___lwdiv+1,w
  1858     06CB  0020               	movlb	0	; select bank0
  1859     06CC  00D3               	movwf	_BOTON1_MIN+1
  1860     06CD  0870               	movf	?___lwdiv,w
  1861     06CE  00D2               	movwf	_BOTON1_MIN
  1862                           
  1863                           ;main.c: 97:       BOTON2_MIN = C2p/5;
  1864     06CF  3005               	movlw	5
  1865     06D0  00F0               	movwf	___lwdiv@divisor
  1866     06D1  3000               	movlw	0
  1867     06D2  00F1               	movwf	___lwdiv@divisor+1
  1868     06D3  0849               	movf	main@C2p+1,w
  1869     06D4  00F3               	movwf	___lwdiv@dividend+1
  1870     06D5  0848               	movf	main@C2p,w
  1871     06D6  00F2               	movwf	___lwdiv@dividend
  1872     06D7  3184  24DB  3185   	fcall	___lwdiv
  1873     06DA  0871               	movf	?___lwdiv+1,w
  1874     06DB  0020               	movlb	0	; select bank0
  1875     06DC  00D1               	movwf	_BOTON2_MIN+1
  1876     06DD  0870               	movf	?___lwdiv,w
  1877     06DE  00D0               	movwf	_BOTON2_MIN
  1878                           
  1879                           ;main.c: 99:       PWM1_LoadDutyValue(DCmaxCW);
  1880     06DF  30FA               	movlw	250
  1881     06E0  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1882     06E1  3000               	movlw	0
  1883     06E2  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1884     06E3  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1885     06E6                     l1422:
  1886                           
  1887                           ;main.c: 100:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1888     06E6  3029               	movlw	41
  1889     06E7  0020               	movlb	0	; select bank0
  1890     06E8  00C1               	movwf	??_main+1
  1891     06E9  3096               	movlw	150
  1892     06EA  00C0               	movwf	??_main
  1893     06EB  307F               	movlw	127
  1894     06EC                     u607:
  1895     06EC  0B89               	decfsz	9,f
  1896     06ED  2EEC               	goto	u607
  1897     06EE  0BC0               	decfsz	??_main,f
  1898     06EF  2EEC               	goto	u607
  1899     06F0  0BC1               	decfsz	??_main+1,f
  1900     06F1  2EEC               	goto	u607
  1901     06F2                     l1424:
  1902                           
  1903                           ;main.c: 101:       PWM1_LoadDutyValue(DCmaxCCW);
  1904     06F2  30F4               	movlw	244
  1905     06F3  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1906     06F4  3001               	movlw	1
  1907     06F5  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1908     06F6  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1909                           
  1910                           ;main.c: 102:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1911     06F9  3029               	movlw	41
  1912     06FA  0020               	movlb	0	; select bank0
  1913     06FB  00C1               	movwf	??_main+1
  1914     06FC  3096               	movlw	150
  1915     06FD  00C0               	movwf	??_main
  1916     06FE  307F               	movlw	127
  1917     06FF                     u617:
  1918     06FF  0B89               	decfsz	9,f
  1919     0700  2EFF               	goto	u617
  1920     0701  0BC0               	decfsz	??_main,f
  1921     0702  2EFF               	goto	u617
  1922     0703  0BC1               	decfsz	??_main+1,f
  1923     0704  2EFF               	goto	u617
  1924     0705                     l1426:
  1925                           
  1926                           ;main.c: 103:       PWM1_LoadDutyValue(DCmin);
  1927     0705  3076               	movlw	118
  1928     0706  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1929     0707  3001               	movlw	1
  1930     0708  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1931     0709  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  1932     070C                     l1428:
  1933                           
  1934                           ;main.c: 105:       save_to_nonvolatile();
  1935     070C  3184  24B0  3185   	fcall	_save_to_nonvolatile
  1936     070F                     l1430:
  1937     070F                     l1432:
  1938     070F                     l1434:
  1939                           
  1940                           ;main.c: 112:    _delay((unsigned long)((200)*(16000000/4000.0)));
  1941     070F  3005               	movlw	5
  1942     0710  0020               	movlb	0	; select bank0
  1943     0711  00C1               	movwf	??_main+1
  1944     0712  300F               	movlw	15
  1945     0713  00C0               	movwf	??_main
  1946     0714  30F1               	movlw	241
  1947     0715                     u627:
  1948     0715  0B89               	decfsz	9,f
  1949     0716  2F15               	goto	u627
  1950     0717  0BC0               	decfsz	??_main,f
  1951     0718  2F15               	goto	u627
  1952     0719  0BC1               	decfsz	??_main+1,f
  1953     071A  2F15               	goto	u627
  1954     071B                     l1436:
  1955                           
  1956                           ;main.c: 115:       C1 = ADC_GetConversion(hallC1);
  1957     071B  3005               	movlw	5
  1958     071C  3184  2459  3185   	fcall	_ADC_GetConversion
  1959     071F  0871               	movf	?_ADC_GetConversion+1,w
  1960     0720  0020               	movlb	0	; select bank0
  1961     0721  00CB               	movwf	main@C1+1
  1962     0722  0870               	movf	?_ADC_GetConversion,w
  1963     0723  00CA               	movwf	main@C1
  1964     0724                     l1438:
  1965                           
  1966                           ;main.c: 116:       C2 = ADC_GetConversion(hallC2);
  1967     0724  3006               	movlw	6
  1968     0725  3184  2459  3185   	fcall	_ADC_GetConversion
  1969     0728  0871               	movf	?_ADC_GetConversion+1,w
  1970     0729  0020               	movlb	0	; select bank0
  1971     072A  00CD               	movwf	main@C2+1
  1972     072B  0870               	movf	?_ADC_GetConversion,w
  1973     072C  00CC               	movwf	main@C2
  1974     072D                     l1440:
  1975                           
  1976                           ;main.c: 118:       if(C1 > (BOTON1_MIN + 10)) {
  1977     072D  0852               	movf	_BOTON1_MIN,w
  1978     072E  3E0A               	addlw	10
  1979     072F  00C0               	movwf	??_main
  1980     0730  3000               	movlw	0
  1981     0731  3D53               	addwfc	_BOTON1_MIN+1,w
  1982     0732  00C1               	movwf	??_main+1
  1983     0733  084B               	movf	main@C1+1,w
  1984     0734  0241               	subwf	??_main+1,w
  1985     0735  1D03               	skipz
  1986     0736  2F39               	goto	u485
  1987     0737  084A               	movf	main@C1,w
  1988     0738  0240               	subwf	??_main,w
  1989     0739                     u485:
  1990     0739  1803               	skipnc
  1991     073A  2F3C               	goto	u481
  1992     073B  2F3D               	goto	u480
  1993     073C                     u481:
  1994     073C  2F84               	goto	l1458
  1995     073D                     u480:
  1996     073D  2F72               	goto	l1456
  1997     073E                     l1444:
  1998                           
  1999                           ;main.c: 120:             C1 = ADC_GetConversion(hallC1);
  2000     073E  3005               	movlw	5
  2001     073F  3184  2459  3185   	fcall	_ADC_GetConversion
  2002     0742  0871               	movf	?_ADC_GetConversion+1,w
  2003     0743  0020               	movlb	0	; select bank0
  2004     0744  00CB               	movwf	main@C1+1
  2005     0745  0870               	movf	?_ADC_GetConversion,w
  2006     0746  00CA               	movwf	main@C1
  2007     0747                     l1446:
  2008                           
  2009                           ;main.c: 121:             dc = 895 - C1;
  2010     0747  307F               	movlw	127
  2011     0748  00C0               	movwf	??_main
  2012     0749  3003               	movlw	3
  2013     074A  00C1               	movwf	??_main+1
  2014     074B  084A               	movf	main@C1,w
  2015     074C  0240               	subwf	??_main,w
  2016     074D  00CE               	movwf	main@dc
  2017     074E  084B               	movf	main@C1+1,w
  2018     074F  3B41               	subwfb	??_main+1,w
  2019     0750  00CF               	movwf	main@dc+1
  2020     0751                     l1448:
  2021                           
  2022                           ;main.c: 122:             if (dc<DCmaxCW){dc=DCmaxCW;}
  2023     0751  3000               	movlw	0
  2024     0752  024F               	subwf	main@dc+1,w
  2025     0753  30FA               	movlw	250
  2026     0754  1903               	skipnz
  2027     0755  024E               	subwf	main@dc,w
  2028     0756  1803               	skipnc
  2029     0757  2F59               	goto	u491
  2030     0758  2F5A               	goto	u490
  2031     0759                     u491:
  2032     0759  2F5E               	goto	l216
  2033     075A                     u490:
  2034     075A                     l1450:
  2035     075A  30FA               	movlw	250
  2036     075B  00CE               	movwf	main@dc
  2037     075C  3000               	movlw	0
  2038     075D  00CF               	movwf	main@dc+1
  2039     075E                     l216:
  2040                           
  2041                           ;main.c: 123:             if (dc>DCmin){dc=DCmin;}
  2042     075E  3001               	movlw	1
  2043     075F  024F               	subwf	main@dc+1,w
  2044     0760  3077               	movlw	119
  2045     0761  1903               	skipnz
  2046     0762  024E               	subwf	main@dc,w
  2047     0763  1C03               	skipc
  2048     0764  2F66               	goto	u501
  2049     0765  2F67               	goto	u500
  2050     0766                     u501:
  2051     0766  2F6B               	goto	l1454
  2052     0767                     u500:
  2053     0767                     l1452:
  2054     0767  3076               	movlw	118
  2055     0768  00CE               	movwf	main@dc
  2056     0769  3001               	movlw	1
  2057     076A  00CF               	movwf	main@dc+1
  2058     076B                     l1454:
  2059                           
  2060                           ;main.c: 124:             PWM1_LoadDutyValue(dc);
  2061     076B  084F               	movf	main@dc+1,w
  2062     076C  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2063     076D  084E               	movf	main@dc,w
  2064     076E  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2065     076F  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  2066     0772                     l1456:
  2067                           
  2068                           ;main.c: 119:          while(C1 > (BOTON1_MIN + 10)) {
  2069     0772  0020               	movlb	0	; select bank0
  2070     0773  0852               	movf	_BOTON1_MIN,w
  2071     0774  3E0A               	addlw	10
  2072     0775  00C0               	movwf	??_main
  2073     0776  3000               	movlw	0
  2074     0777  3D53               	addwfc	_BOTON1_MIN+1,w
  2075     0778  00C1               	movwf	??_main+1
  2076     0779  084B               	movf	main@C1+1,w
  2077     077A  0241               	subwf	??_main+1,w
  2078     077B  1D03               	skipz
  2079     077C  2F7F               	goto	u515
  2080     077D  084A               	movf	main@C1,w
  2081     077E  0240               	subwf	??_main,w
  2082     077F                     u515:
  2083     077F  1C03               	skipc
  2084     0780  2F82               	goto	u511
  2085     0781  2F83               	goto	u510
  2086     0782                     u511:
  2087     0782  2F3E               	goto	l1444
  2088     0783                     u510:
  2089     0783  2FDB               	goto	l1478
  2090     0784                     l1458:
  2091     0784  0850               	movf	_BOTON2_MIN,w
  2092     0785  3E0A               	addlw	10
  2093     0786  00C0               	movwf	??_main
  2094     0787  3000               	movlw	0
  2095     0788  3D51               	addwfc	_BOTON2_MIN+1,w
  2096     0789  00C1               	movwf	??_main+1
  2097     078A  084D               	movf	main@C2+1,w
  2098     078B  0241               	subwf	??_main+1,w
  2099     078C  1D03               	skipz
  2100     078D  2F90               	goto	u525
  2101     078E  084C               	movf	main@C2,w
  2102     078F  0240               	subwf	??_main,w
  2103     0790                     u525:
  2104     0790  1803               	skipnc
  2105     0791  2F93               	goto	u521
  2106     0792  2F94               	goto	u520
  2107     0793                     u521:
  2108     0793  2FD7               	goto	l1476
  2109     0794                     u520:
  2110     0794  2FC5               	goto	l1474
  2111     0795                     l1462:
  2112                           
  2113                           ;main.c: 130:             C2 = ADC_GetConversion(hallC2);
  2114     0795  3006               	movlw	6
  2115     0796  3184  2459  3185   	fcall	_ADC_GetConversion
  2116     0799  0871               	movf	?_ADC_GetConversion+1,w
  2117     079A  0020               	movlb	0	; select bank0
  2118     079B  00CD               	movwf	main@C2+1
  2119     079C  0870               	movf	?_ADC_GetConversion,w
  2120     079D  00CC               	movwf	main@C2
  2121     079E                     l1464:
  2122                           
  2123                           ;main.c: 131:             dc = C2 - 145;
  2124     079E  084C               	movf	main@C2,w
  2125     079F  3E6F               	addlw	111
  2126     07A0  00CE               	movwf	main@dc
  2127     07A1  30FF               	movlw	255
  2128     07A2  3D4D               	addwfc	main@C2+1,w
  2129     07A3  00CF               	movwf	main@dc+1
  2130     07A4                     l1466:
  2131                           
  2132                           ;main.c: 132:             if (dc<DCmin) {dc=DCmin;}
  2133     07A4  3001               	movlw	1
  2134     07A5  024F               	subwf	main@dc+1,w
  2135     07A6  3076               	movlw	118
  2136     07A7  1903               	skipnz
  2137     07A8  024E               	subwf	main@dc,w
  2138     07A9  1803               	skipnc
  2139     07AA  2FAC               	goto	u531
  2140     07AB  2FAD               	goto	u530
  2141     07AC                     u531:
  2142     07AC  2FB1               	goto	l223
  2143     07AD                     u530:
  2144     07AD                     l1468:
  2145     07AD  3076               	movlw	118
  2146     07AE  00CE               	movwf	main@dc
  2147     07AF  3001               	movlw	1
  2148     07B0  00CF               	movwf	main@dc+1
  2149     07B1                     l223:
  2150                           
  2151                           ;main.c: 133:             if (dc>DCmaxCCW) {dc=DCmaxCCW;}
  2152     07B1  3001               	movlw	1
  2153     07B2  024F               	subwf	main@dc+1,w
  2154     07B3  30F5               	movlw	245
  2155     07B4  1903               	skipnz
  2156     07B5  024E               	subwf	main@dc,w
  2157     07B6  1C03               	skipc
  2158     07B7  2FB9               	goto	u541
  2159     07B8  2FBA               	goto	u540
  2160     07B9                     u541:
  2161     07B9  2FBE               	goto	l1472
  2162     07BA                     u540:
  2163     07BA                     l1470:
  2164     07BA  30F4               	movlw	244
  2165     07BB  00CE               	movwf	main@dc
  2166     07BC  3001               	movlw	1
  2167     07BD  00CF               	movwf	main@dc+1
  2168     07BE                     l1472:
  2169                           
  2170                           ;main.c: 134:             PWM1_LoadDutyValue(dc);
  2171     07BE  084F               	movf	main@dc+1,w
  2172     07BF  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2173     07C0  084E               	movf	main@dc,w
  2174     07C1  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2175     07C2  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  2176     07C5                     l1474:
  2177                           
  2178                           ;main.c: 129:          while(C2 > (BOTON2_MIN + 10)) {
  2179     07C5  0020               	movlb	0	; select bank0
  2180     07C6  0850               	movf	_BOTON2_MIN,w
  2181     07C7  3E0A               	addlw	10
  2182     07C8  00C0               	movwf	??_main
  2183     07C9  3000               	movlw	0
  2184     07CA  3D51               	addwfc	_BOTON2_MIN+1,w
  2185     07CB  00C1               	movwf	??_main+1
  2186     07CC  084D               	movf	main@C2+1,w
  2187     07CD  0241               	subwf	??_main+1,w
  2188     07CE  1D03               	skipz
  2189     07CF  2FD2               	goto	u555
  2190     07D0  084C               	movf	main@C2,w
  2191     07D1  0240               	subwf	??_main,w
  2192     07D2                     u555:
  2193     07D2  1C03               	skipc
  2194     07D3  2FD5               	goto	u551
  2195     07D4  2FD6               	goto	u550
  2196     07D5                     u551:
  2197     07D5  2F95               	goto	l1462
  2198     07D6                     u550:
  2199     07D6  2FDB               	goto	l1478
  2200     07D7                     l1476:
  2201                           
  2202                           ;main.c: 138:          dc = 375;
  2203     07D7  3077               	movlw	119
  2204     07D8  00CE               	movwf	main@dc
  2205     07D9  3001               	movlw	1
  2206     07DA  00CF               	movwf	main@dc+1
  2207     07DB                     l1478:
  2208                           
  2209                           ;main.c: 140:       PWM1_LoadDutyValue(dc);
  2210     07DB  084F               	movf	main@dc+1,w
  2211     07DC  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2212     07DD  084E               	movf	main@dc,w
  2213     07DE  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2214     07DF  3184  242A  3185   	fcall	_PWM1_LoadDutyValue
  2215     07E2  2F1B               	goto	l1436
  2216     07E3  2801               	ljmp	start
  2217     07E4                     __end_of_main:
  2218                           
  2219                           	psect	text1
  2220     04B0                     __ptext1:	
  2221 ;; *************** function _save_to_nonvolatile *****************
  2222 ;; Defined at:
  2223 ;;		line 5 in file "nonvolatile.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  bloque         32    0[BANK0 ] unsigned short [16]
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1
  2237 ;;      Params:         0       0       0
  2238 ;;      Locals:         0      32       0
  2239 ;;      Temps:          1       0       0
  2240 ;;      Totals:         1      32       0
  2241 ;;Total ram usage:       33 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 2
  2244 ;; This function calls:
  2245 ;;		_FLASH_WriteBlock
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     04B0                     _save_to_nonvolatile:	
  2252                           ;psect for function _save_to_nonvolatile
  2253                           
  2254     04B0                     l1304:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _save_to_nonvolatile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2257                           
  2258                           
  2259                           ;nonvolatile.c: 6:  uint16_t bloque[16] = {[0 ... 15] = 0xFF};
  2260     04B0  30A0               	movlw	low save_to_nonvolatile@F57
  2261     04B1  0086               	movwf	6
  2262     04B2  3000               	movlw	high save_to_nonvolatile@F57
  2263     04B3  0087               	movwf	7
  2264     04B4  3020               	movlw	low save_to_nonvolatile@bloque
  2265     04B5  0084               	movwf	4
  2266     04B6  3000               	movlw	high save_to_nonvolatile@bloque
  2267     04B7  0085               	movwf	5
  2268     04B8  3020               	movlw	32
  2269     04B9  00FD               	movwf	??_save_to_nonvolatile
  2270     04BA                     u330:
  2271     04BA  0016               	moviw fsr1++
  2272     04BB  001A               	movwi fsr0++
  2273     04BC  0BFD               	decfsz	??_save_to_nonvolatile,f
  2274     04BD  2CBA               	goto	u330
  2275     04BE                     l1306:
  2276                           
  2277                           ;nonvolatile.c: 8:  bloque[0] = DATOS_VALIDOS;
  2278     04BE  0020               	movlb	0	; select bank0
  2279     04BF  01A0               	clrf	save_to_nonvolatile@bloque
  2280     04C0  01A1               	clrf	save_to_nonvolatile@bloque+1
  2281     04C1                     l1308:
  2282                           
  2283                           ;nonvolatile.c: 9:  bloque[1] = BOTON1_MAX;
  2284     04C1  0857               	movf	_BOTON1_MAX+1,w
  2285     04C2  00A3               	movwf	save_to_nonvolatile@bloque+3
  2286     04C3  0856               	movf	_BOTON1_MAX,w
  2287     04C4  00A2               	movwf	save_to_nonvolatile@bloque+2
  2288     04C5                     l1310:
  2289                           
  2290                           ;nonvolatile.c: 10:  bloque[2] = BOTON1_MIN;
  2291     04C5  0853               	movf	_BOTON1_MIN+1,w
  2292     04C6  00A5               	movwf	save_to_nonvolatile@bloque+5
  2293     04C7  0852               	movf	_BOTON1_MIN,w
  2294     04C8  00A4               	movwf	save_to_nonvolatile@bloque+4
  2295     04C9                     l1312:
  2296                           
  2297                           ;nonvolatile.c: 11:  bloque[3] = BOTON2_MAX;
  2298     04C9  0855               	movf	_BOTON2_MAX+1,w
  2299     04CA  00A7               	movwf	save_to_nonvolatile@bloque+7
  2300     04CB  0854               	movf	_BOTON2_MAX,w
  2301     04CC  00A6               	movwf	save_to_nonvolatile@bloque+6
  2302     04CD                     l1314:
  2303                           
  2304                           ;nonvolatile.c: 12:  bloque[4] = BOTON2_MIN;
  2305     04CD  0851               	movf	_BOTON2_MIN+1,w
  2306     04CE  00A9               	movwf	save_to_nonvolatile@bloque+9
  2307     04CF  0850               	movf	_BOTON2_MIN,w
  2308     04D0  00A8               	movwf	save_to_nonvolatile@bloque+8
  2309     04D1                     l1316:
  2310                           
  2311                           ;nonvolatile.c: 14:  FLASH_WriteBlock(0x100, bloque);
  2312     04D1  3000               	movlw	0
  2313     04D2  00F3               	movwf	FLASH_WriteBlock@writeAddr
  2314     04D3  3001               	movlw	1
  2315     04D4  00F4               	movwf	FLASH_WriteBlock@writeAddr+1
  2316     04D5  3020               	movlw	(low (save_to_nonvolatile@bloque| 0))& (0+255)
  2317     04D6  00F5               	movwf	FLASH_WriteBlock@flashWordArray
  2318     04D7  3185  2556  3184   	fcall	_FLASH_WriteBlock
  2319     04DA                     l254:
  2320     04DA  0008               	return
  2321     04DB                     __end_of_save_to_nonvolatile:
  2322                           
  2323                           	psect	text2
  2324     0556                     __ptext2:	
  2325 ;; *************** function _FLASH_WriteBlock *****************
  2326 ;; Defined at:
  2327 ;;		line 94 in file "mcc_generated_files/memory.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  writeAddr       2    3[COMMON] unsigned short 
  2330 ;;  flashWordArr    1    5[COMMON] PTR unsigned short 
  2331 ;;		 -> save_to_nonvolatile@bloque(32), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  blockStartAd    2    9[COMMON] unsigned short 
  2334 ;;  i               1   12[COMMON] unsigned char 
  2335 ;;  GIEBitValue     1   11[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      char 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1
  2345 ;;      Params:         3       0       0
  2346 ;;      Locals:         4       0       0
  2347 ;;      Temps:          3       0       0
  2348 ;;      Totals:        10       0       0
  2349 ;;Total ram usage:       10 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		_FLASH_EraseBlock
  2354 ;; This function is called by:
  2355 ;;		_save_to_nonvolatile
  2356 ;;		_FLASH_WriteWord
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     0556                     _FLASH_WriteBlock:	
  2361                           ;psect for function _FLASH_WriteBlock
  2362                           
  2363     0556                     l1210:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (16 -1)));
  2369     0556  30F0               	movlw	240
  2370     0557  0573               	andwf	FLASH_WriteBlock@writeAddr,w
  2371     0558  00F9               	movwf	FLASH_WriteBlock@blockStartAddr
  2372     0559  3007               	movlw	7
  2373     055A  0574               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2374     055B  00FA               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2375     055C                     l1212:
  2376                           
  2377                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2378     055C  3000               	movlw	0
  2379     055D  1B8B               	btfsc	11,7	;volatile
  2380     055E  3001               	movlw	1
  2381     055F  00FB               	movwf	FLASH_WriteBlock@GIEBitValue
  2382     0560                     l1214:
  2383                           
  2384                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 101:    
      +                           if( writeAddr != blockStartAddr )
  2385     0560  087A               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2386     0561  0674               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2387     0562  1D03               	skipz
  2388     0563  2D66               	goto	u275
  2389     0564  0879               	movf	FLASH_WriteBlock@blockStartAddr,w
  2390     0565  0673               	xorwf	FLASH_WriteBlock@writeAddr,w
  2391     0566                     u275:
  2392     0566  1903               	skipnz
  2393     0567  2D69               	goto	u271
  2394     0568  2D6A               	goto	u270
  2395     0569                     u271:
  2396     0569  2D6B               	goto	l103
  2397     056A                     u270:
  2398     056A  2DB4               	goto	l104
  2399     056B                     l103:	
  2400                           ;mcc_generated_files/memory.c: 104:     }
  2401                           
  2402                           
  2403                           ;mcc_generated_files/memory.c: 106:     INTCONbits.GIE = 0;
  2404     056B  138B               	bcf	11,7	;volatile
  2405     056C                     l1218:
  2406                           
  2407                           ;mcc_generated_files/memory.c: 109:     FLASH_EraseBlock(writeAddr);
  2408     056C  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2409     056D  00F1               	movwf	FLASH_EraseBlock@startAddr+1
  2410     056E  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2411     056F  00F0               	movwf	FLASH_EraseBlock@startAddr
  2412     0570  3184  2474  3185   	fcall	_FLASH_EraseBlock
  2413     0573                     l1220:
  2414                           
  2415                           ;mcc_generated_files/memory.c: 112:     PMCON1bits.CFGS = 0;
  2416     0573  0023               	movlb	3	; select bank3
  2417     0574  1315               	bcf	21,6	;volatile
  2418     0575                     l1222:
  2419                           
  2420                           ;mcc_generated_files/memory.c: 113:     PMCON1bits.WREN = 1;
  2421     0575  1515               	bsf	21,2	;volatile
  2422     0576                     l1224:
  2423                           
  2424                           ;mcc_generated_files/memory.c: 114:     PMCON1bits.LWLO = 1;
  2425     0576  1695               	bsf	21,5	;volatile
  2426     0577                     l1226:
  2427                           
  2428                           ;mcc_generated_files/memory.c: 116:     for (i=0; i<16; i++)
  2429     0577  01FC               	clrf	FLASH_WriteBlock@i
  2430     0578                     l1232:
  2431                           
  2432                           ;mcc_generated_files/memory.c: 117:     {;mcc_generated_files/memory.c: 119:         PMA
      +                          DRL = (writeAddr & 0xFF);
  2433     0578  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2434     0579  0023               	movlb	3	; select bank3
  2435     057A  0091               	movwf	17	;volatile
  2436     057B                     l1234:
  2437                           
  2438                           ;mcc_generated_files/memory.c: 121:         PMADRH = ((writeAddr & 0xFF00) >> 8);
  2439     057B  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2440     057C  0092               	movwf	18	;volatile
  2441     057D                     l1236:
  2442                           
  2443                           ;mcc_generated_files/memory.c: 124:         PMDATL = flashWordArray[i];
  2444     057D  357C               	lslf	FLASH_WriteBlock@i,w
  2445     057E  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2446     057F  00F6               	movwf	??_FLASH_WriteBlock
  2447     0580  0876               	movf	??_FLASH_WriteBlock,w
  2448     0581  0086               	movwf	6
  2449     0582  0187               	clrf	7
  2450     0583  0801               	movf	1,w
  2451     0584  0093               	movwf	19	;volatile
  2452     0585                     l1238:
  2453                           
  2454                           ;mcc_generated_files/memory.c: 125:         PMDATH = ((flashWordArray[i] & 0xFF00) >> 8)
      +                          ;
  2455     0585  357C               	lslf	FLASH_WriteBlock@i,w
  2456     0586  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2457     0587  00F6               	movwf	??_FLASH_WriteBlock
  2458     0588  0876               	movf	??_FLASH_WriteBlock,w
  2459     0589  0086               	movwf	6
  2460     058A  0187               	clrf	7
  2461     058B  3F40               	moviw [0]fsr1
  2462     058C  00F7               	movwf	??_FLASH_WriteBlock+1
  2463     058D  3F41               	moviw [1]fsr1
  2464     058E  00F8               	movwf	??_FLASH_WriteBlock+2
  2465     058F  0878               	movf	??_FLASH_WriteBlock+2,w
  2466     0590  0094               	movwf	20	;volatile
  2467     0591                     l1240:
  2468                           
  2469                           ;mcc_generated_files/memory.c: 127:         if(i == (16 -1))
  2470     0591  300F               	movlw	15
  2471     0592  067C               	xorwf	FLASH_WriteBlock@i,w
  2472     0593  1D03               	btfss	3,2
  2473     0594  2D96               	goto	u281
  2474     0595  2D97               	goto	u280
  2475     0596                     u281:
  2476     0596  2D98               	goto	l1244
  2477     0597                     u280:
  2478     0597                     l1242:
  2479                           
  2480                           ;mcc_generated_files/memory.c: 128:         {;mcc_generated_files/memory.c: 130:        
      +                               PMCON1bits.LWLO = 0;
  2481     0597  1295               	bcf	21,5	;volatile
  2482     0598                     l1244:
  2483                           
  2484                           ;mcc_generated_files/memory.c: 133:         PMCON2 = 0x55;
  2485     0598  3055               	movlw	85
  2486     0599  0096               	movwf	22	;volsfr
  2487                           
  2488                           ;mcc_generated_files/memory.c: 134:         PMCON2 = 0xAA;
  2489     059A  30AA               	movlw	170
  2490     059B  0096               	movwf	22	;volsfr
  2491     059C                     l1246:
  2492                           
  2493                           ;mcc_generated_files/memory.c: 135:         PMCON1bits.WR = 1;
  2494     059C  1495               	bsf	21,1	;volatile
  2495     059D                     l1248:
  2496                           
  2497                           ;mcc_generated_files/memory.c: 136:         __nop();
  2498     059D  0000               	nop
  2499     059E                     l1250:
  2500                           
  2501                           ;mcc_generated_files/memory.c: 137:         __nop();
  2502     059E  0000               	nop
  2503                           
  2504                           ;mcc_generated_files/memory.c: 139:      writeAddr++;
  2505     059F  3001               	movlw	1
  2506     05A0  07F3               	addwf	FLASH_WriteBlock@writeAddr,f
  2507     05A1  3000               	movlw	0
  2508     05A2  3DF4               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2509     05A3                     l1252:
  2510                           
  2511                           ;mcc_generated_files/memory.c: 140:     }
  2512     05A3  3001               	movlw	1
  2513     05A4  00F6               	movwf	??_FLASH_WriteBlock
  2514     05A5  0876               	movf	??_FLASH_WriteBlock,w
  2515     05A6  07FC               	addwf	FLASH_WriteBlock@i,f
  2516     05A7                     l1254:
  2517     05A7  3010               	movlw	16
  2518     05A8  027C               	subwf	FLASH_WriteBlock@i,w
  2519     05A9  1C03               	skipc
  2520     05AA  2DAC               	goto	u291
  2521     05AB  2DAD               	goto	u290
  2522     05AC                     u291:
  2523     05AC  2D78               	goto	l1232
  2524     05AD                     u290:
  2525     05AD                     l106:
  2526                           
  2527                           ;mcc_generated_files/memory.c: 142:     PMCON1bits.WREN = 0;
  2528     05AD  0023               	movlb	3	; select bank3
  2529     05AE  1115               	bcf	21,2	;volatile
  2530     05AF                     l1256:
  2531                           
  2532                           ;mcc_generated_files/memory.c: 143:     INTCONbits.GIE = GIEBitValue;
  2533     05AF  0C7B               	rrf	FLASH_WriteBlock@GIEBitValue,w
  2534     05B0  1C03               	skipc
  2535     05B1  138B               	bcf	11,7	;volatile
  2536     05B2  1803               	skipnc
  2537     05B3  178B               	bsf	11,7	;volatile
  2538     05B4                     l104:
  2539     05B4  0008               	return
  2540     05B5                     __end_of_FLASH_WriteBlock:
  2541                           
  2542                           	psect	text3
  2543     0474                     __ptext3:	
  2544 ;; *************** function _FLASH_EraseBlock *****************
  2545 ;; Defined at:
  2546 ;;		line 148 in file "mcc_generated_files/memory.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  startAddr       2    0[COMMON] unsigned short 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1
  2560 ;;      Params:         2       0       0
  2561 ;;      Locals:         1       0       0
  2562 ;;      Temps:          0       0       0
  2563 ;;      Totals:         3       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_FLASH_WriteBlock
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573     0474                     _FLASH_EraseBlock:	
  2574                           ;psect for function _FLASH_EraseBlock
  2575                           
  2576     0474                     l1146:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  2579                           
  2580                           
  2581                           ;mcc_generated_files/memory.c: 148: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 149: {;mcc_generated_files/memory.c: 150:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  2582     0474  3000               	movlw	0
  2583     0475  1B8B               	btfsc	11,7	;volatile
  2584     0476  3001               	movlw	1
  2585     0477  00F2               	movwf	FLASH_EraseBlock@GIEBitValue
  2586     0478                     l1148:
  2587                           
  2588                           ;mcc_generated_files/memory.c: 153:     INTCONbits.GIE = 0;
  2589     0478  138B               	bcf	11,7	;volatile
  2590     0479                     l1150:
  2591                           
  2592                           ;mcc_generated_files/memory.c: 155:     PMADRL = (startAddr & 0xFF);
  2593     0479  0870               	movf	FLASH_EraseBlock@startAddr,w
  2594     047A  0023               	movlb	3	; select bank3
  2595     047B  0091               	movwf	17	;volatile
  2596     047C                     l1152:
  2597                           
  2598                           ;mcc_generated_files/memory.c: 157:     PMADRH = ((startAddr & 0xFF00) >> 8);
  2599     047C  0871               	movf	FLASH_EraseBlock@startAddr+1,w
  2600     047D  0092               	movwf	18	;volatile
  2601     047E                     l1154:
  2602                           
  2603                           ;mcc_generated_files/memory.c: 160:     PMCON1bits.CFGS = 0;
  2604     047E  1315               	bcf	21,6	;volatile
  2605     047F                     l1156:
  2606                           
  2607                           ;mcc_generated_files/memory.c: 161:     PMCON1bits.FREE = 1;
  2608     047F  1615               	bsf	21,4	;volatile
  2609     0480                     l1158:
  2610                           
  2611                           ;mcc_generated_files/memory.c: 162:     PMCON1bits.WREN = 1;
  2612     0480  1515               	bsf	21,2	;volatile
  2613                           
  2614                           ;mcc_generated_files/memory.c: 165:     PMCON2 = 0x55;
  2615     0481  3055               	movlw	85
  2616     0482  0096               	movwf	22	;volsfr
  2617                           
  2618                           ;mcc_generated_files/memory.c: 166:     PMCON2 = 0xAA;
  2619     0483  30AA               	movlw	170
  2620     0484  0096               	movwf	22	;volsfr
  2621     0485                     l1160:
  2622                           
  2623                           ;mcc_generated_files/memory.c: 167:     PMCON1bits.WR = 1;
  2624     0485  1495               	bsf	21,1	;volatile
  2625     0486                     l1162:
  2626                           
  2627                           ;mcc_generated_files/memory.c: 168:     __nop();
  2628     0486  0000               	nop
  2629     0487                     l1164:
  2630                           
  2631                           ;mcc_generated_files/memory.c: 169:     __nop();
  2632     0487  0000               	nop
  2633     0488                     l1166:
  2634                           
  2635                           ;mcc_generated_files/memory.c: 171:     PMCON1bits.WREN = 0;
  2636     0488  0023               	movlb	3	; select bank3
  2637     0489  1115               	bcf	21,2	;volatile
  2638     048A                     l1168:
  2639                           
  2640                           ;mcc_generated_files/memory.c: 172:     INTCONbits.GIE = GIEBitValue;
  2641     048A  0C72               	rrf	FLASH_EraseBlock@GIEBitValue,w
  2642     048B  1C03               	skipc
  2643     048C  138B               	bcf	11,7	;volatile
  2644     048D  1803               	skipnc
  2645     048E  178B               	bsf	11,7	;volatile
  2646     048F                     l110:
  2647     048F  0008               	return
  2648     0490                     __end_of_FLASH_EraseBlock:
  2649                           
  2650                           	psect	text4
  2651     0517                     __ptext4:	
  2652 ;; *************** function _read_from_nonvolatile *****************
  2653 ;; Defined at:
  2654 ;;		line 17 in file "nonvolatile.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      char 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1
  2668 ;;      Params:         0       0       0
  2669 ;;      Locals:         0       0       0
  2670 ;;      Temps:          0       0       0
  2671 ;;      Totals:         0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 1
  2675 ;; This function calls:
  2676 ;;		_FLASH_ReadWord
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682     0517                     _read_from_nonvolatile:	
  2683                           ;psect for function _read_from_nonvolatile
  2684                           
  2685     0517                     l1296:	
  2686                           ;incstack = 0
  2687                           ; Regs used in _read_from_nonvolatile: [wreg+status,2+status,0+pclath+cstack]
  2688                           
  2689                           
  2690                           ;nonvolatile.c: 18:  if (FLASH_ReadWord(0x100)==DATOS_DEFAULT) {
  2691     0517  3000               	movlw	0
  2692     0518  00F0               	movwf	FLASH_ReadWord@flashAddr
  2693     0519  3001               	movlw	1
  2694     051A  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2695     051B  3184  2440  3185   	fcall	_FLASH_ReadWord
  2696     051E  0370               	decf	?_FLASH_ReadWord,w
  2697     051F  0471               	iorwf	?_FLASH_ReadWord+1,w
  2698     0520  1D03               	btfss	3,2
  2699     0521  2D23               	goto	u321
  2700     0522  2D24               	goto	u320
  2701     0523                     u321:
  2702     0523  2D25               	goto	l1300
  2703     0524                     u320:
  2704     0524  2D55               	goto	l258
  2705     0525                     l1300:
  2706                           
  2707                           ;nonvolatile.c: 22:  BOTON1_MAX = FLASH_ReadWord(0x100 +1);
  2708     0525  3001               	movlw	1
  2709     0526  00F0               	movwf	FLASH_ReadWord@flashAddr
  2710     0527  3001               	movlw	1
  2711     0528  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2712     0529  3184  2440  3185   	fcall	_FLASH_ReadWord
  2713     052C  0871               	movf	?_FLASH_ReadWord+1,w
  2714     052D  0020               	movlb	0	; select bank0
  2715     052E  00D7               	movwf	_BOTON1_MAX+1
  2716     052F  0870               	movf	?_FLASH_ReadWord,w
  2717     0530  00D6               	movwf	_BOTON1_MAX
  2718                           
  2719                           ;nonvolatile.c: 23:  BOTON1_MIN = FLASH_ReadWord(0x100 +2);
  2720     0531  3002               	movlw	2
  2721     0532  00F0               	movwf	FLASH_ReadWord@flashAddr
  2722     0533  3001               	movlw	1
  2723     0534  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2724     0535  3184  2440  3185   	fcall	_FLASH_ReadWord
  2725     0538  0871               	movf	?_FLASH_ReadWord+1,w
  2726     0539  0020               	movlb	0	; select bank0
  2727     053A  00D3               	movwf	_BOTON1_MIN+1
  2728     053B  0870               	movf	?_FLASH_ReadWord,w
  2729     053C  00D2               	movwf	_BOTON1_MIN
  2730                           
  2731                           ;nonvolatile.c: 24:  BOTON2_MAX = FLASH_ReadWord(0x100 +3);
  2732     053D  3003               	movlw	3
  2733     053E  00F0               	movwf	FLASH_ReadWord@flashAddr
  2734     053F  3001               	movlw	1
  2735     0540  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2736     0541  3184  2440  3185   	fcall	_FLASH_ReadWord
  2737     0544  0871               	movf	?_FLASH_ReadWord+1,w
  2738     0545  0020               	movlb	0	; select bank0
  2739     0546  00D5               	movwf	_BOTON2_MAX+1
  2740     0547  0870               	movf	?_FLASH_ReadWord,w
  2741     0548  00D4               	movwf	_BOTON2_MAX
  2742                           
  2743                           ;nonvolatile.c: 25:  BOTON2_MIN = FLASH_ReadWord(0x100 +4);
  2744     0549  3004               	movlw	4
  2745     054A  00F0               	movwf	FLASH_ReadWord@flashAddr
  2746     054B  3001               	movlw	1
  2747     054C  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2748     054D  3184  2440  3185   	fcall	_FLASH_ReadWord
  2749     0550  0871               	movf	?_FLASH_ReadWord+1,w
  2750     0551  0020               	movlb	0	; select bank0
  2751     0552  00D1               	movwf	_BOTON2_MIN+1
  2752     0553  0870               	movf	?_FLASH_ReadWord,w
  2753     0554  00D0               	movwf	_BOTON2_MIN
  2754     0555                     l258:
  2755     0555  0008               	return
  2756     0556                     __end_of_read_from_nonvolatile:
  2757                           
  2758                           	psect	text5
  2759     0440                     __ptext5:	
  2760 ;; *************** function _FLASH_ReadWord *****************
  2761 ;; Defined at:
  2762 ;;		line 58 in file "mcc_generated_files/memory.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  flashAddr       2    0[COMMON] unsigned short 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2    0[COMMON] unsigned short 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1
  2776 ;;      Params:         2       0       0
  2777 ;;      Locals:         1       0       0
  2778 ;;      Temps:          0       0       0
  2779 ;;      Totals:         3       0       0
  2780 ;;Total ram usage:        3 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_read_from_nonvolatile
  2786 ;;		_FLASH_WriteWord
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790     0440                     _FLASH_ReadWord:	
  2791                           ;psect for function _FLASH_ReadWord
  2792                           
  2793     0440                     l1188:	
  2794                           ;incstack = 0
  2795                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  2796                           
  2797                           
  2798                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  2799     0440  3000               	movlw	0
  2800     0441  1B8B               	btfsc	11,7	;volatile
  2801     0442  3001               	movlw	1
  2802     0443  00F2               	movwf	FLASH_ReadWord@GIEBitValue
  2803     0444                     l1190:
  2804                           
  2805                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  2806     0444  138B               	bcf	11,7	;volatile
  2807     0445                     l1192:
  2808                           
  2809                           ;mcc_generated_files/memory.c: 63:     PMADRL = (flashAddr & 0x00FF);
  2810     0445  0870               	movf	FLASH_ReadWord@flashAddr,w
  2811     0446  0023               	movlb	3	; select bank3
  2812     0447  0091               	movwf	17	;volatile
  2813     0448                     l1194:
  2814                           
  2815                           ;mcc_generated_files/memory.c: 64:     PMADRH = ((flashAddr & 0xFF00) >> 8);
  2816     0448  0871               	movf	FLASH_ReadWord@flashAddr+1,w
  2817     0449  0092               	movwf	18	;volatile
  2818     044A                     l1196:
  2819                           
  2820                           ;mcc_generated_files/memory.c: 66:     PMCON1bits.CFGS = 0;
  2821     044A  1315               	bcf	21,6	;volatile
  2822     044B                     l1198:
  2823                           
  2824                           ;mcc_generated_files/memory.c: 67:     PMCON1bits.RD = 1;
  2825     044B  1415               	bsf	21,0	;volatile
  2826     044C                     l1200:
  2827                           
  2828                           ;mcc_generated_files/memory.c: 68:     __nop();
  2829     044C  0000               	nop
  2830     044D                     l1202:
  2831                           
  2832                           ;mcc_generated_files/memory.c: 69:     __nop();
  2833     044D  0000               	nop
  2834     044E                     l1204:
  2835                           
  2836                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  2837     044E  0C72               	rrf	FLASH_ReadWord@GIEBitValue,w
  2838     044F  1C03               	skipc
  2839     0450  138B               	bcf	11,7	;volatile
  2840     0451  1803               	skipnc
  2841     0452  178B               	bsf	11,7	;volatile
  2842     0453                     l1206:
  2843                           
  2844                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((PMDATH << 8) | PMDATL));
  2845     0453  0023               	movlb	3	; select bank3
  2846     0454  0814               	movf	20,w	;volatile
  2847     0455  00F1               	movwf	?_FLASH_ReadWord+1
  2848     0456  0813               	movf	19,w	;volatile
  2849     0457  00F0               	movwf	?_FLASH_ReadWord
  2850     0458                     l95:
  2851     0458  0008               	return
  2852     0459                     __end_of_FLASH_ReadWord:
  2853                           
  2854                           	psect	text6
  2855     04DB                     __ptext6:	
  2856 ;; *************** function ___lwdiv *****************
  2857 ;; Defined at:
  2858 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/lwdiv.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  divisor         2    0[COMMON] unsigned int 
  2861 ;;  dividend        2    2[COMMON] unsigned int 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  quotient        2    5[COMMON] unsigned int 
  2864 ;;  counter         1    7[COMMON] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2    0[COMMON] unsigned int 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1
  2874 ;;      Params:         4       0       0
  2875 ;;      Locals:         3       0       0
  2876 ;;      Temps:          1       0       0
  2877 ;;      Totals:         8       0       0
  2878 ;;Total ram usage:        8 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887     04DB                     ___lwdiv:	
  2888                           ;psect for function ___lwdiv
  2889                           
  2890     04DB                     l1318:	
  2891                           ;incstack = 0
  2892                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2893                           
  2894     04DB  01F5               	clrf	___lwdiv@quotient
  2895     04DC  01F6               	clrf	___lwdiv@quotient+1
  2896     04DD                     l1320:
  2897     04DD  0870               	movf	___lwdiv@divisor,w
  2898     04DE  0471               	iorwf	___lwdiv@divisor+1,w
  2899     04DF  1903               	btfsc	3,2
  2900     04E0  2CE2               	goto	u341
  2901     04E1  2CE3               	goto	u340
  2902     04E2                     u341:
  2903     04E2  2D12               	goto	l1340
  2904     04E3                     u340:
  2905     04E3                     l1322:
  2906     04E3  01F7               	clrf	___lwdiv@counter
  2907     04E4  0AF7               	incf	___lwdiv@counter,f
  2908     04E5  2CEF               	goto	l1328
  2909     04E6                     l1324:
  2910     04E6  3001               	movlw	1
  2911     04E7                     u355:
  2912     04E7  35F0               	lslf	___lwdiv@divisor,f
  2913     04E8  0DF1               	rlf	___lwdiv@divisor+1,f
  2914     04E9  0B89               	decfsz	9,f
  2915     04EA  2CE7               	goto	u355
  2916     04EB                     l1326:
  2917     04EB  3001               	movlw	1
  2918     04EC  00F4               	movwf	??___lwdiv
  2919     04ED  0874               	movf	??___lwdiv,w
  2920     04EE  07F7               	addwf	___lwdiv@counter,f
  2921     04EF                     l1328:
  2922     04EF  1FF1               	btfss	___lwdiv@divisor+1,7
  2923     04F0  2CF2               	goto	u361
  2924     04F1  2CF3               	goto	u360
  2925     04F2                     u361:
  2926     04F2  2CE6               	goto	l1324
  2927     04F3                     u360:
  2928     04F3                     l1330:
  2929     04F3  3001               	movlw	1
  2930     04F4                     u375:
  2931     04F4  35F5               	lslf	___lwdiv@quotient,f
  2932     04F5  0DF6               	rlf	___lwdiv@quotient+1,f
  2933     04F6  0B89               	decfsz	9,f
  2934     04F7  2CF4               	goto	u375
  2935     04F8  0871               	movf	___lwdiv@divisor+1,w
  2936     04F9  0273               	subwf	___lwdiv@dividend+1,w
  2937     04FA  1D03               	skipz
  2938     04FB  2CFE               	goto	u385
  2939     04FC  0870               	movf	___lwdiv@divisor,w
  2940     04FD  0272               	subwf	___lwdiv@dividend,w
  2941     04FE                     u385:
  2942     04FE  1C03               	skipc
  2943     04FF  2D01               	goto	u381
  2944     0500  2D02               	goto	u380
  2945     0501                     u381:
  2946     0501  2D07               	goto	l1336
  2947     0502                     u380:
  2948     0502                     l1332:
  2949     0502  0870               	movf	___lwdiv@divisor,w
  2950     0503  02F2               	subwf	___lwdiv@dividend,f
  2951     0504  0871               	movf	___lwdiv@divisor+1,w
  2952     0505  3BF3               	subwfb	___lwdiv@dividend+1,f
  2953     0506                     l1334:
  2954     0506  1475               	bsf	___lwdiv@quotient,0
  2955     0507                     l1336:
  2956     0507  3001               	movlw	1
  2957     0508                     u395:
  2958     0508  36F1               	lsrf	___lwdiv@divisor+1,f
  2959     0509  0CF0               	rrf	___lwdiv@divisor,f
  2960     050A  0B89               	decfsz	9,f
  2961     050B  2D08               	goto	u395
  2962     050C                     l1338:
  2963     050C  3001               	movlw	1
  2964     050D  02F7               	subwf	___lwdiv@counter,f
  2965     050E  1D03               	btfss	3,2
  2966     050F  2D11               	goto	u401
  2967     0510  2D12               	goto	u400
  2968     0511                     u401:
  2969     0511  2CF3               	goto	l1330
  2970     0512                     u400:
  2971     0512                     l1340:
  2972     0512  0876               	movf	___lwdiv@quotient+1,w
  2973     0513  00F1               	movwf	?___lwdiv+1
  2974     0514  0875               	movf	___lwdiv@quotient,w
  2975     0515  00F0               	movwf	?___lwdiv
  2976     0516                     l606:
  2977     0516  0008               	return
  2978     0517                     __end_of___lwdiv:
  2979                           
  2980                           	psect	text7
  2981     0403                     __ptext7:	
  2982 ;; *************** function _SYSTEM_Initialize *****************
  2983 ;; Defined at:
  2984 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, pclath, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1
  2998 ;;      Params:         0       0       0
  2999 ;;      Locals:         0       0       0
  3000 ;;      Temps:          0       0       0
  3001 ;;      Totals:         0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 1
  3005 ;; This function calls:
  3006 ;;		_ADC_Initialize
  3007 ;;		_OSCILLATOR_Initialize
  3008 ;;		_PIN_MANAGER_Initialize
  3009 ;;		_PWM1_Initialize
  3010 ;;		_TMR2_Initialize
  3011 ;;		_WDT_Initialize
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017     0403                     _SYSTEM_Initialize:	
  3018                           ;psect for function _SYSTEM_Initialize
  3019                           
  3020     0403                     l1292:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3023                           
  3024                           
  3025                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3026     0403  3184  2416  3184   	fcall	_PIN_MANAGER_Initialize
  3027                           
  3028                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3029     0406  3183  23D6  3184   	fcall	_OSCILLATOR_Initialize
  3030                           
  3031                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3032     0409  3183  23D2  3184   	fcall	_WDT_Initialize
  3033                           
  3034                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  3035     040C  3183  23E2  3184   	fcall	_PWM1_Initialize
  3036                           
  3037                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  3038     040F  3183  23EA  3184   	fcall	_TMR2_Initialize
  3039                           
  3040                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3041     0412  3183  23FA  3184   	fcall	_ADC_Initialize
  3042     0415                     l131:
  3043     0415  0008               	return
  3044     0416                     __end_of_SYSTEM_Initialize:
  3045                           
  3046                           	psect	text8
  3047     03D2                     __ptext8:	
  3048 ;; *************** function _WDT_Initialize *****************
  3049 ;; Defined at:
  3050 ;;		line 69 in file "mcc_generated_files/mcc.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1
  3064 ;;      Params:         0       0       0
  3065 ;;      Locals:         0       0       0
  3066 ;;      Temps:          0       0       0
  3067 ;;      Totals:         0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_SYSTEM_Initialize
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077     03D2                     _WDT_Initialize:	
  3078                           ;psect for function _WDT_Initialize
  3079                           
  3080     03D2                     l1276:	
  3081                           ;incstack = 0
  3082                           ; Regs used in _WDT_Initialize: [wreg]
  3083                           
  3084                           
  3085                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  3086     03D2  3016               	movlw	22
  3087     03D3  0021               	movlb	1	; select bank1
  3088     03D4  0097               	movwf	23	;volatile
  3089     03D5                     l137:
  3090     03D5  0008               	return
  3091     03D6                     __end_of_WDT_Initialize:
  3092                           
  3093                           	psect	text9
  3094     03EA                     __ptext9:	
  3095 ;; *************** function _TMR2_Initialize *****************
  3096 ;; Defined at:
  3097 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1
  3111 ;;      Params:         0       0       0
  3112 ;;      Locals:         0       0       0
  3113 ;;      Temps:          0       0       0
  3114 ;;      Totals:         0       0       0
  3115 ;;Total ram usage:        0 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_SYSTEM_Initialize
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124     03EA                     _TMR2_Initialize:	
  3125                           ;psect for function _TMR2_Initialize
  3126                           
  3127     03EA                     l1180:	
  3128                           ;incstack = 0
  3129                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3130                           
  3131                           
  3132                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x7D;
  3133     03EA  307D               	movlw	125
  3134     03EB  0020               	movlb	0	; select bank0
  3135     03EC  009B               	movwf	27	;volatile
  3136     03ED                     l1182:
  3137                           
  3138                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3139     03ED  019A               	clrf	26	;volatile
  3140     03EE                     l1184:
  3141                           
  3142                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3143     03EE  1091               	bcf	17,1	;volatile
  3144     03EF                     l1186:
  3145                           
  3146                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  3147     03EF  3007               	movlw	7
  3148     03F0  009C               	movwf	28	;volatile
  3149     03F1                     l53:
  3150     03F1  0008               	return
  3151     03F2                     __end_of_TMR2_Initialize:
  3152                           
  3153                           	psect	text10
  3154     03E2                     __ptext10:	
  3155 ;; *************** function _PWM1_Initialize *****************
  3156 ;; Defined at:
  3157 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1
  3171 ;;      Params:         0       0       0
  3172 ;;      Locals:         0       0       0
  3173 ;;      Temps:          0       0       0
  3174 ;;      Totals:         0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_SYSTEM_Initialize
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184     03E2                     _PWM1_Initialize:	
  3185                           ;psect for function _PWM1_Initialize
  3186                           
  3187     03E2                     l1278:	
  3188                           ;incstack = 0
  3189                           ; Regs used in _PWM1_Initialize: [wreg]
  3190                           
  3191                           
  3192                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3193     03E2  30C0               	movlw	192
  3194     03E3  002C               	movlb	12	; select bank12
  3195     03E4  0093               	movwf	19	;volatile
  3196                           
  3197                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x5D;
  3198     03E5  305D               	movlw	93
  3199     03E6  0092               	movwf	18	;volatile
  3200                           
  3201                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0x80;
  3202     03E7  3080               	movlw	128
  3203     03E8  0091               	movwf	17	;volatile
  3204     03E9                     l170:
  3205     03E9  0008               	return
  3206     03EA                     __end_of_PWM1_Initialize:
  3207                           
  3208                           	psect	text11
  3209     0416                     __ptext11:	
  3210 ;; *************** function _PIN_MANAGER_Initialize *****************
  3211 ;; Defined at:
  3212 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1
  3226 ;;      Params:         0       0       0
  3227 ;;      Locals:         0       0       0
  3228 ;;      Temps:          0       0       0
  3229 ;;      Totals:         0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_SYSTEM_Initialize
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     0416                     _PIN_MANAGER_Initialize:	
  3240                           ;psect for function _PIN_MANAGER_Initialize
  3241                           
  3242     0416                     l1260:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3245                           
  3246                           
  3247                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3248     0416  0022               	movlb	2	; select bank2
  3249     0417  018C               	clrf	12	;volatile
  3250                           
  3251                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3252     0418  018E               	clrf	14	;volatile
  3253     0419                     l1262:
  3254                           
  3255                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3F;
  3256     0419  303F               	movlw	63
  3257     041A  0021               	movlb	1	; select bank1
  3258     041B  008C               	movwf	12	;volatile
  3259     041C                     l1264:
  3260                           
  3261                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x1F;
  3262     041C  301F               	movlw	31
  3263     041D  008E               	movwf	14	;volatile
  3264     041E                     l1266:
  3265                           
  3266                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0F;
  3267     041E  300F               	movlw	15
  3268     041F  0023               	movlb	3	; select bank3
  3269     0420  008E               	movwf	14	;volatile
  3270     0421                     l1268:
  3271                           
  3272                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
  3273     0421  3017               	movlw	23
  3274     0422  008C               	movwf	12	;volatile
  3275                           
  3276                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3277     0423  0024               	movlb	4	; select bank4
  3278     0424  018C               	clrf	12	;volatile
  3279     0425                     l1270:
  3280                           
  3281                           ;mcc_generated_files/pin_manager.c: 79:     OPTION_REGbits.nWPUEN = 1;
  3282     0425  0021               	movlb	1	; select bank1
  3283     0426  1795               	bsf	21,7	;volatile
  3284                           
  3285                           ;mcc_generated_files/pin_manager.c: 85:     APFCON = 0x00;
  3286     0427  0022               	movlb	2	; select bank2
  3287     0428  019D               	clrf	29	;volatile
  3288     0429                     l158:
  3289     0429  0008               	return
  3290     042A                     __end_of_PIN_MANAGER_Initialize:
  3291                           
  3292                           	psect	text12
  3293     03D6                     __ptext12:	
  3294 ;; *************** function _OSCILLATOR_Initialize *****************
  3295 ;; Defined at:
  3296 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1
  3310 ;;      Params:         0       0       0
  3311 ;;      Locals:         0       0       0
  3312 ;;      Temps:          0       0       0
  3313 ;;      Totals:         0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_SYSTEM_Initialize
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     03D6                     _OSCILLATOR_Initialize:	
  3324                           ;psect for function _OSCILLATOR_Initialize
  3325                           
  3326     03D6                     l1272:	
  3327                           ;incstack = 0
  3328                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3329                           
  3330                           
  3331                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3332     03D6  3078               	movlw	120
  3333     03D7  0021               	movlb	1	; select bank1
  3334     03D8  0099               	movwf	25	;volatile
  3335     03D9                     l1274:
  3336                           
  3337                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  3338     03D9  0022               	movlb	2	; select bank2
  3339     03DA  0196               	clrf	22	;volatile
  3340     03DB                     l134:
  3341     03DB  0008               	return
  3342     03DC                     __end_of_OSCILLATOR_Initialize:
  3343                           
  3344                           	psect	text13
  3345     03FA                     __ptext13:	
  3346 ;; *************** function _ADC_Initialize *****************
  3347 ;; Defined at:
  3348 ;;		line 67 in file "mcc_generated_files/adc.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;		None
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1
  3362 ;;      Params:         0       0       0
  3363 ;;      Locals:         0       0       0
  3364 ;;      Temps:          0       0       0
  3365 ;;      Totals:         0       0       0
  3366 ;;Total ram usage:        0 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_SYSTEM_Initialize
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375     03FA                     _ADC_Initialize:	
  3376                           ;psect for function _ADC_Initialize
  3377                           
  3378     03FA                     l1170:	
  3379                           ;incstack = 0
  3380                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3381                           
  3382                           
  3383                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
  3384     03FA  3080               	movlw	128
  3385     03FB  0021               	movlb	1	; select bank1
  3386     03FC  009E               	movwf	30	;volatile
  3387     03FD                     l1172:
  3388                           
  3389                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  3390     03FD  019F               	clrf	31	;volatile
  3391     03FE                     l1174:
  3392                           
  3393                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  3394     03FE  019B               	clrf	27	;volatile
  3395     03FF                     l1176:
  3396                           
  3397                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  3398     03FF  019C               	clrf	28	;volatile
  3399     0400                     l1178:
  3400                           
  3401                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  3402     0400  3001               	movlw	1
  3403     0401  009D               	movwf	29	;volatile
  3404     0402                     l19:
  3405     0402  0008               	return
  3406     0403                     __end_of_ADC_Initialize:
  3407                           
  3408                           	psect	text14
  3409     042A                     __ptext14:	
  3410 ;; *************** function _PWM1_LoadDutyValue *****************
  3411 ;; Defined at:
  3412 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  dutyValue       2    0[COMMON] unsigned short 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1
  3426 ;;      Params:         2       0       0
  3427 ;;      Locals:         0       0       0
  3428 ;;      Temps:          2       0       0
  3429 ;;      Totals:         4       0       0
  3430 ;;Total ram usage:        4 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439     042A                     _PWM1_LoadDutyValue:	
  3440                           ;psect for function _PWM1_LoadDutyValue
  3441                           
  3442     042A                     l1294:	
  3443                           ;incstack = 0
  3444                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  3445                           
  3446                           
  3447                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3448     042A  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  3449     042B  00F3               	movwf	??_PWM1_LoadDutyValue+1
  3450     042C  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  3451     042D  00F2               	movwf	??_PWM1_LoadDutyValue
  3452     042E  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  3453     042F  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  3454     0430  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  3455     0431  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  3456     0432  0872               	movf	??_PWM1_LoadDutyValue,w
  3457     0433  002C               	movlb	12	; select bank12
  3458     0434  0092               	movwf	18	;volatile
  3459                           
  3460                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  3461     0435  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  3462     0436  3903               	andlw	3
  3463     0437  00F2               	movwf	??_PWM1_LoadDutyValue
  3464     0438  3005               	movlw	5
  3465     0439                     u315:
  3466     0439  35F2               	lslf	??_PWM1_LoadDutyValue,f
  3467     043A  3EFF               	addlw	-1
  3468     043B  1D03               	skipz
  3469     043C  2C39               	goto	u315
  3470     043D  3572               	lslf	??_PWM1_LoadDutyValue,w
  3471     043E  0091               	movwf	17	;volatile
  3472     043F                     l173:
  3473     043F  0008               	return
  3474     0440                     __end_of_PWM1_LoadDutyValue:
  3475                           
  3476                           	psect	text15
  3477     0459                     __ptext15:	
  3478 ;; *************** function _ADC_GetConversion *****************
  3479 ;; Defined at:
  3480 ;;		line 115 in file "mcc_generated_files/adc.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  channel         1    wreg     enum E2576
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  channel         1    3[COMMON] enum E2576
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  2    0[COMMON] unsigned short 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1
  3494 ;;      Params:         2       0       0
  3495 ;;      Locals:         1       0       0
  3496 ;;      Temps:          1       0       0
  3497 ;;      Totals:         4       0       0
  3498 ;;Total ram usage:        4 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507     0459                     _ADC_GetConversion:	
  3508                           ;psect for function _ADC_GetConversion
  3509                           
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3513                           ;ADC_GetConversion@channel stored from wreg
  3514     0459  00F3               	movwf	ADC_GetConversion@channel
  3515     045A                     l1280:
  3516                           
  3517                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3518     045A  0873               	movf	ADC_GetConversion@channel,w
  3519     045B  00F2               	movwf	??_ADC_GetConversion
  3520     045C  0DF2               	rlf	??_ADC_GetConversion,f
  3521     045D  0DF2               	rlf	??_ADC_GetConversion,f
  3522     045E  0021               	movlb	1	; select bank1
  3523     045F  081D               	movf	29,w	;volatile
  3524     0460  0672               	xorwf	??_ADC_GetConversion,w
  3525     0461  3983               	andlw	-125
  3526     0462  0672               	xorwf	??_ADC_GetConversion,w
  3527     0463  009D               	movwf	29	;volatile
  3528     0464                     l1282:
  3529                           
  3530                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3531     0464  141D               	bsf	29,0	;volatile
  3532     0465                     l1284:
  3533                           
  3534                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3535     0465  3006               	movlw	6
  3536     0466                     u637:
  3537     0466  0B89               	decfsz	9,f
  3538     0467  2C66               	goto	u637
  3539     0468  3200               	nop2
  3540     0469                     l1286:
  3541                           
  3542                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3543     0469  0021               	movlb	1	; select bank1
  3544     046A  149D               	bsf	29,1	;volatile
  3545     046B                     l34:	
  3546                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3547                           
  3548                           
  3549                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3550     046B  189D               	btfsc	29,1	;volatile
  3551     046C  2C6E               	goto	u301
  3552     046D  2C6F               	goto	u300
  3553     046E                     u301:
  3554     046E  2C6B               	goto	l34
  3555     046F                     u300:
  3556     046F                     l1288:
  3557                           
  3558                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3559     046F  081C               	movf	28,w	;volatile
  3560     0470  00F1               	movwf	?_ADC_GetConversion+1
  3561     0471  081B               	movf	27,w	;volatile
  3562     0472  00F0               	movwf	?_ADC_GetConversion
  3563     0473                     l37:
  3564     0473  0008               	return
  3565     0474                     __end_of_ADC_GetConversion:
  3566     007E                     btemp	set	126	;btemp
  3567     007E                     wtemp0	set	126
  3568                           
  3569                           	psect	idloc
  3570                           
  3571                           ;Config register IDLOC0 @ 0x8000
  3572                           ;	unspecified, using default values
  3573     8000                     	org	32768
  3574     8000  3FFF               	dw	16383
  3575                           
  3576                           ;Config register IDLOC1 @ 0x8001
  3577                           ;	unspecified, using default values
  3578     8001                     	org	32769
  3579     8001  3FFF               	dw	16383
  3580                           
  3581                           ;Config register IDLOC2 @ 0x8002
  3582                           ;	unspecified, using default values
  3583     8002                     	org	32770
  3584     8002  3FFF               	dw	16383
  3585                           
  3586                           ;Config register IDLOC3 @ 0x8003
  3587                           ;	unspecified, using default values
  3588     8003                     	org	32771
  3589     8003  3FFF               	dw	16383
  3590                           
  3591                           	psect	config
  3592                           
  3593                           ;Config register CONFIG1 @ 0x8007
  3594                           ;	Oscillator Selection Bits
  3595                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3596                           ;	Watchdog Timer Enable
  3597                           ;	WDTE = OFF, WDT disabled
  3598                           ;	Power-up Timer Enable
  3599                           ;	PWRTE = OFF, PWRT disabled
  3600                           ;	MCLR Pin Function Select
  3601                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3602                           ;	Flash Program Memory Code Protection
  3603                           ;	CP = OFF, Program memory code protection is disabled
  3604                           ;	Brown-out Reset Enable
  3605                           ;	BOREN = ON, Brown-out Reset enabled
  3606                           ;	Clock Out Enable
  3607                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3608     8007                     	org	32775
  3609     8007  3FE4               	dw	16356
  3610                           
  3611                           ;Config register CONFIG2 @ 0x8008
  3612                           ;	Flash Memory Self-Write Protection
  3613                           ;	WRT = OFF, Write protection off
  3614                           ;	Stack Overflow/Underflow Reset Enable
  3615                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3616                           ;	Brown-out Reset Voltage Selection
  3617                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3618                           ;	Low-Power Brown Out Reset
  3619                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3620                           ;	Low-Voltage Programming Enable
  3621                           ;	LVP = ON, Low-voltage programming enabled
  3622     8008                     	org	32776
  3623     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    6
    Data        40
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      58
    BANK1            32      0      32

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 32
		 -> save_to_nonvolatile@bloque(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_save_to_nonvolatile
    _save_to_nonvolatile->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _read_from_nonvolatile->_FLASH_ReadWord

Critical Paths under _main in BANK0

    _main->_save_to_nonvolatile

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3506
                                             32 BANK0     16    16      0
                  _ADC_GetConversion
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            ___lwdiv
              _read_from_nonvolatile
                _save_to_nonvolatile
 ---------------------------------------------------------------------------------
 (1) _save_to_nonvolatile                                 33    33      0     882
                                             13 COMMON     1     1      0
                                              0 BANK0     32    32      0
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     760
                                              3 COMMON    10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     143
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_from_nonvolatile                                0     0      0     523
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     523
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     728
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   ___lwdiv
   _read_from_nonvolatile
     _FLASH_ReadWord
   _save_to_nonvolatile
     _FLASH_WriteBlock
       _FLASH_EraseBlock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     30      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      68       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb  4 22:47:09 2023

                            l34 046B                              l19 0402                              l37 0473  
                            l53 03F1                              l95 0458                             l110 048F  
                           l103 056B                             l104 05B4                             l106 05AD  
                           l131 0415                             l134 03DB                             l223 07B1  
                           l216 075E                             l137 03D5                             l170 03E9  
                           l173 043F                             l158 0429                             l254 04DA  
                           l258 0555                             l606 0516                             u300 046F  
                           u301 046E                             u400 0512                             u320 0524  
                           u401 0511                             u321 0523                             u330 04BA  
                           u315 0439                             u340 04E3                             u500 0767  
                           u420 05E2                             u341 04E2                             u501 0766  
                           u421 05E1                             u270 056A                             u510 0783  
                           u430 05EB                             _PR2 001B                             u271 0569  
                           u511 0782                             u431 05EA                             u360 04F3  
                           u280 0597                             u520 0794                             u440 0614  
                           u361 04F2                             u281 0596                             u521 0793  
                           u441 0613                             u290 05AD                             u530 07AD  
                           u450 0683                             u355 04E7                             u291 05AC  
                           u275 0566                             u531 07AC                             u515 077F  
                           u451 0682                             u380 0502                             u540 07BA  
                           u460 068C                             u381 0501                             u541 07B9  
                           u525 0790                             u461 068B                             u445 0610  
                           u550 07D6                             u470 06BE                             u375 04F4  
                           u551 07D5                             u607 06EC                             u471 06BD  
                           u480 073D                             u385 04FE                             u481 073C  
                           u617 06FF                             u490 075A                             u395 0508  
                           u555 07D2                             u491 0759                             u627 0715  
                           u475 06BA                             u637 0466                             u485 0739  
                           u567 05C1                             u577 0642                             u587 0655  
                           u597 0692                 _TMR2_Initialize 03EA                             wreg 0009  
FLASH_WriteBlock@flashWordArray 0075                            l1200 044C                            l1202 044D  
                          l1210 0556                            l1204 044E                            l1300 0525  
                          l1220 0573                            l1212 055C                            l1206 0453  
                          l1150 0479                            l1222 0575                            l1214 0560  
                          l1310 04C5                            l1320 04DD                            l1160 0485  
                          l1152 047C                            l1240 0591                            l1232 0578  
                          l1224 0576                            l1312 04C9                            l1304 04B0  
                          l1400 0668                            l1170 03FA                            l1330 04F3  
                          l1322 04E3                            l1162 0486                            l1154 047E  
                          l1146 0474                            l1250 059E                            l1242 0597  
                          l1234 057B                            l1226 0577                            l1218 056C  
                          l1314 04CD                            l1306 04BE                            l1402 067A  
                          l1172 03FD                            l1260 0416                            l1180 03EA  
                          l1332 0502                            l1324 04E6                            l1340 0512  
                          l1164 0487                            l1156 047F                            l1148 0478  
                          l1252 05A3                            l1244 0598                            l1236 057D  
                          l1316 04D1                            l1308 04C1                            l1420 06BE  
                          l1404 0683                            l1174 03FE                            l1270 0425  
                          l1262 0419                            l1182 03ED                            l1334 0506  
                          l1326 04EB                            l1318 04DB                            l1190 0444  
                          l1166 0488                            l1158 0480                            l1254 05A7  
                          l1246 059C                            l1238 0585                            l1422 06E6  
                          l1414 069B                            l1406 068C                            l1430 070F  
                          l1280 045A                            l1176 03FF                            l1272 03D6  
                          l1264 041C                            l1184 03EE                            l1336 0507  
                          l1328 04EF                            l1192 0445                            l1168 048A  
                          l1256 05AF                            l1248 059D                            l1440 072D  
                          l1432 070F                            l1424 06F2                            l1416 06AD  
                          l1408 0698                            l1360 05B5                            l1282 0464  
                          l1178 0400                            l1274 03D9                            l1266 041E  
                          l1186 03EF                            l1338 050C                            l1194 0448  
                          l1450 075A                            l1434 070F                            l1426 0705  
                          l1418 06B1                            l1370 05D0                            l1362 05BB  
                          l1284 0465                            l1268 0421                            l1276 03D2  
                          l1292 0403                            l1196 044A                            l1188 0440  
                          l1452 0767                            l1444 073E                            l1436 071B  
                          l1428 070C                            l1372 05D9                            l1364 05C7  
                          l1286 0469                            l1294 042A                            l1278 03E2  
                          l1198 044B                            l1470 07BA                            l1462 0795  
                          l1454 076B                            l1446 0747                            l1438 0724  
                          l1390 063C                            l1382 05F1                            l1374 05E2  
                          l1366 05C7                            l1288 046F                            l1296 0517  
                          l1472 07BE                            l1464 079E                            l1448 0751  
                          l1456 0772                            l1392 0648                            l1384 0603  
                          l1376 05EB                            l1368 05C7                            l1466 07A4  
                          l1474 07C5                            l1458 0784                            l1394 065B  
                          l1386 0607                            l1468 07AD                            l1476 07D7  
                          l1396 0662                            l1388 0614                            l1478 07DB  
                          l1398 0665                 __end_of_DCmaxCW 03D0         __end_of_PWM1_Initialize 03EA  
                          _LATA 010C                            _LATC 010E                            _TMR2 001A  
                          _WPUA 020C                            _main 05B5                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E               ?_FLASH_WriteBlock 0073  
                          start 0001              ??_FLASH_WriteBlock 0076   __end_of_OSCILLATOR_Initialize 03DC  
              __end_of_DCmaxCCW 03D2                           ?_main 0070                           _T2CON 001C  
               __end_of___lwdiv 0517                           _DCmin 03CC                           _TRISA 008C  
                         _TRISC 008E                  _WDT_Initialize 03D2                           main@i 0042  
                         status 0003                           wtemp0 007E                 __initialization 07E4  
                  __end_of_main 07E4         __end_of_TMR2_Initialize 03F2                          ??_main 0040  
        __end_of_WDT_Initialize 03D6                          _ADCON0 009D                          _ADCON1 009E  
                        _ADCON2 009F       FLASH_WriteBlock@writeAddr 0073                          _ADRESH 009C  
                        _ADRESL 009B                          _APFCON 011D                          _ANSELA 018C  
                        _ANSELC 018E                          _BORCON 0116                ?_PWM1_Initialize 0070  
                        _PMADRH 0192                          _PMADRL 0191                          _PMDATH 0194  
                        _PMDATL 0193                          _PMCON2 0196                          _OSCCON 0099  
                        _WDTCON 0097                       ??___lwdiv 0074                          main@C1 004A  
                        main@C2 004C                          main@dc 004E         FLASH_ReadWord@flashAddr 0070  
               ?_WDT_Initialize 0070        ADC_GetConversion@channel 0073               _SYSTEM_Initialize 0403  
       __end_of__initialization 07FE              ?_SYSTEM_Initialize 0070                   __end_of_DCmin 03CE  
   PWM1_LoadDutyValue@dutyValue 0070                  __pcstackCOMMON 0070                    __pidataBANK0 03F2  
                  __pidataBANK1 0490             ??_SYSTEM_Initialize 0070              _PWM1_LoadDutyValue 042A  
              ?_TMR2_Initialize 0070           _read_from_nonvolatile 0517                  _OPTION_REGbits 0095  
           ?_PWM1_LoadDutyValue 0070     FLASH_WriteBlock@GIEBitValue 007B       __end_of_SYSTEM_Initialize 0416  
                    __pbssBANK0 0058            ??_PWM1_LoadDutyValue 0072                      __pmaintext 05B5  
           _save_to_nonvolatile 04B0                  _FLASH_ReadWord 0440                         _DCmaxCW 03CE  
                       _PWM1DCH 0612                         _PWM1DCL 0611                         _PWM1CON 0613  
          ?_save_to_nonvolatile 0070                _FLASH_EraseBlock 0474            _ADC_InterruptHandler 0058  
                       ___lwdiv 04DB          ?_read_from_nonvolatile 0070          __end_of_FLASH_ReadWord 0459  
                       __ptext1 04B0                         __ptext2 0556                         __ptext3 0474  
                       __ptext4 0517                         __ptext5 0440                         __ptext6 04DB  
                       __ptext7 0403                         __ptext8 03D2                         __ptext9 03EA  
         _OSCILLATOR_Initialize 03D6                       _T2CONbits 001C        ??_PIN_MANAGER_Initialize 0070  
                       main@C1p 0046                         main@C2p 0048           ??_save_to_nonvolatile 007D  
          end_of_initialization 07FE                         init_ram 03DC                         initloop 03DD  
     FLASH_ReadWord@GIEBitValue 0072                 ?_FLASH_ReadWord 0070                ??_WDT_Initialize 0070  
             FLASH_WriteBlock@i 007C                  _ADC_Initialize 03FA                _FLASH_WriteBlock 0556  
        ?_OSCILLATOR_Initialize 0070             start_initialization 07E4       save_to_nonvolatile@bloque 0020  
        __end_of_ADC_Initialize 0403                     __pdataBANK0 0050                     __pdataBANK1 00A0  
   FLASH_EraseBlock@GIEBitValue 0072        __end_of_FLASH_EraseBlock 0490                       ___latbits 0000  
                 __pcstackBANK0 0020                ___lwdiv@dividend 0072          _PIN_MANAGER_Initialize 0416  
       ??_read_from_nonvolatile 0073                        ?___lwdiv 0070                 ?_ADC_Initialize 0070  
             ??_PWM1_Initialize 0070                ___lwdiv@quotient 0075  FLASH_WriteBlock@blockStartAddr 0079  
                      _DCmaxCCW 03D0                        _PIR1bits 0011       FLASH_EraseBlock@startAddr 0070  
              ??_FLASH_ReadWord 0072          save_to_nonvolatile@F57 00A0                      _ADCON0bits 009D  
                     main@i_387 0044     __end_of_save_to_nonvolatile 04DB               ??_TMR2_Initialize 0070  
      __end_of_FLASH_WriteBlock 05B5               _ADC_GetConversion 0459         ??_OSCILLATOR_Initialize 0070  
            ?_ADC_GetConversion 0070             ??_ADC_GetConversion 0072                 ___lwdiv@divisor 0070  
               ___lwdiv@counter 0077                        __ptext10 03E2                        __ptext11 0416  
                      __ptext12 03D6                        __ptext13 03FA                        __ptext14 042A  
                      __ptext15 0459                      _BOTON1_MAX 0056                      _BOTON1_MIN 0052  
                    _BOTON2_MAX 0054                      _BOTON2_MIN 0050       __end_of_ADC_GetConversion 0474  
             ?_FLASH_EraseBlock 0070              ??_FLASH_EraseBlock 0072                      _INTCONbits 000B  
                    _PMCON1bits 0195         ?_PIN_MANAGER_Initialize 0070                 _PWM1_Initialize 03E2  
              ??_ADC_Initialize 0070   __end_of_read_from_nonvolatile 0556                   __pstringtext1 03D0  
                 __pstringtext2 03CE                   __pstringtext3 03CC  __end_of_PIN_MANAGER_Initialize 042A  
    __end_of_PWM1_LoadDutyValue 0440  
