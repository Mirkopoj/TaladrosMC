

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb  4 23:46:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1503
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1503 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000E                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     008C                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0095                     	;# 
   103     0096                     	;# 
   104     0097                     	;# 
   105     0099                     	;# 
   106     009A                     	;# 
   107     009B                     	;# 
   108     009B                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010E                     	;# 
   115     0111                     	;# 
   116     0112                     	;# 
   117     0113                     	;# 
   118     0114                     	;# 
   119     0115                     	;# 
   120     0116                     	;# 
   121     0117                     	;# 
   122     0118                     	;# 
   123     0119                     	;# 
   124     011D                     	;# 
   125     018C                     	;# 
   126     018E                     	;# 
   127     0191                     	;# 
   128     0191                     	;# 
   129     0192                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0194                     	;# 
   133     0195                     	;# 
   134     0196                     	;# 
   135     0197                     	;# 
   136     020C                     	;# 
   137     0211                     	;# 
   138     0211                     	;# 
   139     0212                     	;# 
   140     0212                     	;# 
   141     0213                     	;# 
   142     0213                     	;# 
   143     0214                     	;# 
   144     0214                     	;# 
   145     0215                     	;# 
   146     0215                     	;# 
   147     0215                     	;# 
   148     0216                     	;# 
   149     0216                     	;# 
   150     0217                     	;# 
   151     0217                     	;# 
   152     0391                     	;# 
   153     0392                     	;# 
   154     0393                     	;# 
   155     0498                     	;# 
   156     0498                     	;# 
   157     0499                     	;# 
   158     049A                     	;# 
   159     049B                     	;# 
   160     049B                     	;# 
   161     049C                     	;# 
   162     049D                     	;# 
   163     049E                     	;# 
   164     049F                     	;# 
   165     0611                     	;# 
   166     0612                     	;# 
   167     0613                     	;# 
   168     0613                     	;# 
   169     0614                     	;# 
   170     0615                     	;# 
   171     0616                     	;# 
   172     0616                     	;# 
   173     0617                     	;# 
   174     0618                     	;# 
   175     0619                     	;# 
   176     0619                     	;# 
   177     061A                     	;# 
   178     061B                     	;# 
   179     061C                     	;# 
   180     061C                     	;# 
   181     0691                     	;# 
   182     0692                     	;# 
   183     0693                     	;# 
   184     0694                     	;# 
   185     0695                     	;# 
   186     0F0F                     	;# 
   187     0F10                     	;# 
   188     0F11                     	;# 
   189     0F12                     	;# 
   190     0F13                     	;# 
   191     0F14                     	;# 
   192     0F15                     	;# 
   193     0F16                     	;# 
   194     0F17                     	;# 
   195     0F18                     	;# 
   196     0F19                     	;# 
   197     0F1A                     	;# 
   198     0F1B                     	;# 
   199     0F1C                     	;# 
   200     0F1D                     	;# 
   201     0F1E                     	;# 
   202     0F1F                     	;# 
   203     0FE3                     	;# 
   204     0FE4                     	;# 
   205     0FE5                     	;# 
   206     0FE6                     	;# 
   207     0FE7                     	;# 
   208     0FE8                     	;# 
   209     0FE9                     	;# 
   210     0FEA                     	;# 
   211     0FEB                     	;# 
   212     0FED                     	;# 
   213     0FEE                     	;# 
   214     0FEF                     	;# 
   215     0000                     	;# 
   216     0001                     	;# 
   217     0002                     	;# 
   218     0003                     	;# 
   219     0004                     	;# 
   220     0005                     	;# 
   221     0006                     	;# 
   222     0007                     	;# 
   223     0008                     	;# 
   224     0009                     	;# 
   225     000A                     	;# 
   226     000B                     	;# 
   227     000C                     	;# 
   228     000E                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     008C                     	;# 
   242     008E                     	;# 
   243     0091                     	;# 
   244     0092                     	;# 
   245     0093                     	;# 
   246     0095                     	;# 
   247     0096                     	;# 
   248     0097                     	;# 
   249     0099                     	;# 
   250     009A                     	;# 
   251     009B                     	;# 
   252     009B                     	;# 
   253     009C                     	;# 
   254     009D                     	;# 
   255     009E                     	;# 
   256     009F                     	;# 
   257     010C                     	;# 
   258     010E                     	;# 
   259     0111                     	;# 
   260     0112                     	;# 
   261     0113                     	;# 
   262     0114                     	;# 
   263     0115                     	;# 
   264     0116                     	;# 
   265     0117                     	;# 
   266     0118                     	;# 
   267     0119                     	;# 
   268     011D                     	;# 
   269     018C                     	;# 
   270     018E                     	;# 
   271     0191                     	;# 
   272     0191                     	;# 
   273     0192                     	;# 
   274     0193                     	;# 
   275     0193                     	;# 
   276     0194                     	;# 
   277     0195                     	;# 
   278     0196                     	;# 
   279     0197                     	;# 
   280     020C                     	;# 
   281     0211                     	;# 
   282     0211                     	;# 
   283     0212                     	;# 
   284     0212                     	;# 
   285     0213                     	;# 
   286     0213                     	;# 
   287     0214                     	;# 
   288     0214                     	;# 
   289     0215                     	;# 
   290     0215                     	;# 
   291     0215                     	;# 
   292     0216                     	;# 
   293     0216                     	;# 
   294     0217                     	;# 
   295     0217                     	;# 
   296     0391                     	;# 
   297     0392                     	;# 
   298     0393                     	;# 
   299     0498                     	;# 
   300     0498                     	;# 
   301     0499                     	;# 
   302     049A                     	;# 
   303     049B                     	;# 
   304     049B                     	;# 
   305     049C                     	;# 
   306     049D                     	;# 
   307     049E                     	;# 
   308     049F                     	;# 
   309     0611                     	;# 
   310     0612                     	;# 
   311     0613                     	;# 
   312     0613                     	;# 
   313     0614                     	;# 
   314     0615                     	;# 
   315     0616                     	;# 
   316     0616                     	;# 
   317     0617                     	;# 
   318     0618                     	;# 
   319     0619                     	;# 
   320     0619                     	;# 
   321     061A                     	;# 
   322     061B                     	;# 
   323     061C                     	;# 
   324     061C                     	;# 
   325     0691                     	;# 
   326     0692                     	;# 
   327     0693                     	;# 
   328     0694                     	;# 
   329     0695                     	;# 
   330     0F0F                     	;# 
   331     0F10                     	;# 
   332     0F11                     	;# 
   333     0F12                     	;# 
   334     0F13                     	;# 
   335     0F14                     	;# 
   336     0F15                     	;# 
   337     0F16                     	;# 
   338     0F17                     	;# 
   339     0F18                     	;# 
   340     0F19                     	;# 
   341     0F1A                     	;# 
   342     0F1B                     	;# 
   343     0F1C                     	;# 
   344     0F1D                     	;# 
   345     0F1E                     	;# 
   346     0F1F                     	;# 
   347     0FE3                     	;# 
   348     0FE4                     	;# 
   349     0FE5                     	;# 
   350     0FE6                     	;# 
   351     0FE7                     	;# 
   352     0FE8                     	;# 
   353     0FE9                     	;# 
   354     0FEA                     	;# 
   355     0FEB                     	;# 
   356     0FED                     	;# 
   357     0FEE                     	;# 
   358     0FEF                     	;# 
   359     0000                     	;# 
   360     0001                     	;# 
   361     0002                     	;# 
   362     0003                     	;# 
   363     0004                     	;# 
   364     0005                     	;# 
   365     0006                     	;# 
   366     0007                     	;# 
   367     0008                     	;# 
   368     0009                     	;# 
   369     000A                     	;# 
   370     000B                     	;# 
   371     000C                     	;# 
   372     000E                     	;# 
   373     0011                     	;# 
   374     0012                     	;# 
   375     0013                     	;# 
   376     0015                     	;# 
   377     0016                     	;# 
   378     0016                     	;# 
   379     0017                     	;# 
   380     0018                     	;# 
   381     0019                     	;# 
   382     001A                     	;# 
   383     001B                     	;# 
   384     001C                     	;# 
   385     008C                     	;# 
   386     008E                     	;# 
   387     0091                     	;# 
   388     0092                     	;# 
   389     0093                     	;# 
   390     0095                     	;# 
   391     0096                     	;# 
   392     0097                     	;# 
   393     0099                     	;# 
   394     009A                     	;# 
   395     009B                     	;# 
   396     009B                     	;# 
   397     009C                     	;# 
   398     009D                     	;# 
   399     009E                     	;# 
   400     009F                     	;# 
   401     010C                     	;# 
   402     010E                     	;# 
   403     0111                     	;# 
   404     0112                     	;# 
   405     0113                     	;# 
   406     0114                     	;# 
   407     0115                     	;# 
   408     0116                     	;# 
   409     0117                     	;# 
   410     0118                     	;# 
   411     0119                     	;# 
   412     011D                     	;# 
   413     018C                     	;# 
   414     018E                     	;# 
   415     0191                     	;# 
   416     0191                     	;# 
   417     0192                     	;# 
   418     0193                     	;# 
   419     0193                     	;# 
   420     0194                     	;# 
   421     0195                     	;# 
   422     0196                     	;# 
   423     0197                     	;# 
   424     020C                     	;# 
   425     0211                     	;# 
   426     0211                     	;# 
   427     0212                     	;# 
   428     0212                     	;# 
   429     0213                     	;# 
   430     0213                     	;# 
   431     0214                     	;# 
   432     0214                     	;# 
   433     0215                     	;# 
   434     0215                     	;# 
   435     0215                     	;# 
   436     0216                     	;# 
   437     0216                     	;# 
   438     0217                     	;# 
   439     0217                     	;# 
   440     0391                     	;# 
   441     0392                     	;# 
   442     0393                     	;# 
   443     0498                     	;# 
   444     0498                     	;# 
   445     0499                     	;# 
   446     049A                     	;# 
   447     049B                     	;# 
   448     049B                     	;# 
   449     049C                     	;# 
   450     049D                     	;# 
   451     049E                     	;# 
   452     049F                     	;# 
   453     0611                     	;# 
   454     0612                     	;# 
   455     0613                     	;# 
   456     0613                     	;# 
   457     0614                     	;# 
   458     0615                     	;# 
   459     0616                     	;# 
   460     0616                     	;# 
   461     0617                     	;# 
   462     0618                     	;# 
   463     0619                     	;# 
   464     0619                     	;# 
   465     061A                     	;# 
   466     061B                     	;# 
   467     061C                     	;# 
   468     061C                     	;# 
   469     0691                     	;# 
   470     0692                     	;# 
   471     0693                     	;# 
   472     0694                     	;# 
   473     0695                     	;# 
   474     0F0F                     	;# 
   475     0F10                     	;# 
   476     0F11                     	;# 
   477     0F12                     	;# 
   478     0F13                     	;# 
   479     0F14                     	;# 
   480     0F15                     	;# 
   481     0F16                     	;# 
   482     0F17                     	;# 
   483     0F18                     	;# 
   484     0F19                     	;# 
   485     0F1A                     	;# 
   486     0F1B                     	;# 
   487     0F1C                     	;# 
   488     0F1D                     	;# 
   489     0F1E                     	;# 
   490     0F1F                     	;# 
   491     0FE3                     	;# 
   492     0FE4                     	;# 
   493     0FE5                     	;# 
   494     0FE6                     	;# 
   495     0FE7                     	;# 
   496     0FE8                     	;# 
   497     0FE9                     	;# 
   498     0FEA                     	;# 
   499     0FEB                     	;# 
   500     0FED                     	;# 
   501     0FEE                     	;# 
   502     0FEF                     	;# 
   503     0000                     	;# 
   504     0001                     	;# 
   505     0002                     	;# 
   506     0003                     	;# 
   507     0004                     	;# 
   508     0005                     	;# 
   509     0006                     	;# 
   510     0007                     	;# 
   511     0008                     	;# 
   512     0009                     	;# 
   513     000A                     	;# 
   514     000B                     	;# 
   515     000C                     	;# 
   516     000E                     	;# 
   517     0011                     	;# 
   518     0012                     	;# 
   519     0013                     	;# 
   520     0015                     	;# 
   521     0016                     	;# 
   522     0016                     	;# 
   523     0017                     	;# 
   524     0018                     	;# 
   525     0019                     	;# 
   526     001A                     	;# 
   527     001B                     	;# 
   528     001C                     	;# 
   529     008C                     	;# 
   530     008E                     	;# 
   531     0091                     	;# 
   532     0092                     	;# 
   533     0093                     	;# 
   534     0095                     	;# 
   535     0096                     	;# 
   536     0097                     	;# 
   537     0099                     	;# 
   538     009A                     	;# 
   539     009B                     	;# 
   540     009B                     	;# 
   541     009C                     	;# 
   542     009D                     	;# 
   543     009E                     	;# 
   544     009F                     	;# 
   545     010C                     	;# 
   546     010E                     	;# 
   547     0111                     	;# 
   548     0112                     	;# 
   549     0113                     	;# 
   550     0114                     	;# 
   551     0115                     	;# 
   552     0116                     	;# 
   553     0117                     	;# 
   554     0118                     	;# 
   555     0119                     	;# 
   556     011D                     	;# 
   557     018C                     	;# 
   558     018E                     	;# 
   559     0191                     	;# 
   560     0191                     	;# 
   561     0192                     	;# 
   562     0193                     	;# 
   563     0193                     	;# 
   564     0194                     	;# 
   565     0195                     	;# 
   566     0196                     	;# 
   567     0197                     	;# 
   568     020C                     	;# 
   569     0211                     	;# 
   570     0211                     	;# 
   571     0212                     	;# 
   572     0212                     	;# 
   573     0213                     	;# 
   574     0213                     	;# 
   575     0214                     	;# 
   576     0214                     	;# 
   577     0215                     	;# 
   578     0215                     	;# 
   579     0215                     	;# 
   580     0216                     	;# 
   581     0216                     	;# 
   582     0217                     	;# 
   583     0217                     	;# 
   584     0391                     	;# 
   585     0392                     	;# 
   586     0393                     	;# 
   587     0498                     	;# 
   588     0498                     	;# 
   589     0499                     	;# 
   590     049A                     	;# 
   591     049B                     	;# 
   592     049B                     	;# 
   593     049C                     	;# 
   594     049D                     	;# 
   595     049E                     	;# 
   596     049F                     	;# 
   597     0611                     	;# 
   598     0612                     	;# 
   599     0613                     	;# 
   600     0613                     	;# 
   601     0614                     	;# 
   602     0615                     	;# 
   603     0616                     	;# 
   604     0616                     	;# 
   605     0617                     	;# 
   606     0618                     	;# 
   607     0619                     	;# 
   608     0619                     	;# 
   609     061A                     	;# 
   610     061B                     	;# 
   611     061C                     	;# 
   612     061C                     	;# 
   613     0691                     	;# 
   614     0692                     	;# 
   615     0693                     	;# 
   616     0694                     	;# 
   617     0695                     	;# 
   618     0F0F                     	;# 
   619     0F10                     	;# 
   620     0F11                     	;# 
   621     0F12                     	;# 
   622     0F13                     	;# 
   623     0F14                     	;# 
   624     0F15                     	;# 
   625     0F16                     	;# 
   626     0F17                     	;# 
   627     0F18                     	;# 
   628     0F19                     	;# 
   629     0F1A                     	;# 
   630     0F1B                     	;# 
   631     0F1C                     	;# 
   632     0F1D                     	;# 
   633     0F1E                     	;# 
   634     0F1F                     	;# 
   635     0FE3                     	;# 
   636     0FE4                     	;# 
   637     0FE5                     	;# 
   638     0FE6                     	;# 
   639     0FE7                     	;# 
   640     0FE8                     	;# 
   641     0FE9                     	;# 
   642     0FEA                     	;# 
   643     0FEB                     	;# 
   644     0FED                     	;# 
   645     0FEE                     	;# 
   646     0FEF                     	;# 
   647     0000                     	;# 
   648     0001                     	;# 
   649     0002                     	;# 
   650     0003                     	;# 
   651     0004                     	;# 
   652     0005                     	;# 
   653     0006                     	;# 
   654     0007                     	;# 
   655     0008                     	;# 
   656     0009                     	;# 
   657     000A                     	;# 
   658     000B                     	;# 
   659     000C                     	;# 
   660     000E                     	;# 
   661     0011                     	;# 
   662     0012                     	;# 
   663     0013                     	;# 
   664     0015                     	;# 
   665     0016                     	;# 
   666     0016                     	;# 
   667     0017                     	;# 
   668     0018                     	;# 
   669     0019                     	;# 
   670     001A                     	;# 
   671     001B                     	;# 
   672     001C                     	;# 
   673     008C                     	;# 
   674     008E                     	;# 
   675     0091                     	;# 
   676     0092                     	;# 
   677     0093                     	;# 
   678     0095                     	;# 
   679     0096                     	;# 
   680     0097                     	;# 
   681     0099                     	;# 
   682     009A                     	;# 
   683     009B                     	;# 
   684     009B                     	;# 
   685     009C                     	;# 
   686     009D                     	;# 
   687     009E                     	;# 
   688     009F                     	;# 
   689     010C                     	;# 
   690     010E                     	;# 
   691     0111                     	;# 
   692     0112                     	;# 
   693     0113                     	;# 
   694     0114                     	;# 
   695     0115                     	;# 
   696     0116                     	;# 
   697     0117                     	;# 
   698     0118                     	;# 
   699     0119                     	;# 
   700     011D                     	;# 
   701     018C                     	;# 
   702     018E                     	;# 
   703     0191                     	;# 
   704     0191                     	;# 
   705     0192                     	;# 
   706     0193                     	;# 
   707     0193                     	;# 
   708     0194                     	;# 
   709     0195                     	;# 
   710     0196                     	;# 
   711     0197                     	;# 
   712     020C                     	;# 
   713     0211                     	;# 
   714     0211                     	;# 
   715     0212                     	;# 
   716     0212                     	;# 
   717     0213                     	;# 
   718     0213                     	;# 
   719     0214                     	;# 
   720     0214                     	;# 
   721     0215                     	;# 
   722     0215                     	;# 
   723     0215                     	;# 
   724     0216                     	;# 
   725     0216                     	;# 
   726     0217                     	;# 
   727     0217                     	;# 
   728     0391                     	;# 
   729     0392                     	;# 
   730     0393                     	;# 
   731     0498                     	;# 
   732     0498                     	;# 
   733     0499                     	;# 
   734     049A                     	;# 
   735     049B                     	;# 
   736     049B                     	;# 
   737     049C                     	;# 
   738     049D                     	;# 
   739     049E                     	;# 
   740     049F                     	;# 
   741     0611                     	;# 
   742     0612                     	;# 
   743     0613                     	;# 
   744     0613                     	;# 
   745     0614                     	;# 
   746     0615                     	;# 
   747     0616                     	;# 
   748     0616                     	;# 
   749     0617                     	;# 
   750     0618                     	;# 
   751     0619                     	;# 
   752     0619                     	;# 
   753     061A                     	;# 
   754     061B                     	;# 
   755     061C                     	;# 
   756     061C                     	;# 
   757     0691                     	;# 
   758     0692                     	;# 
   759     0693                     	;# 
   760     0694                     	;# 
   761     0695                     	;# 
   762     0F0F                     	;# 
   763     0F10                     	;# 
   764     0F11                     	;# 
   765     0F12                     	;# 
   766     0F13                     	;# 
   767     0F14                     	;# 
   768     0F15                     	;# 
   769     0F16                     	;# 
   770     0F17                     	;# 
   771     0F18                     	;# 
   772     0F19                     	;# 
   773     0F1A                     	;# 
   774     0F1B                     	;# 
   775     0F1C                     	;# 
   776     0F1D                     	;# 
   777     0F1E                     	;# 
   778     0F1F                     	;# 
   779     0FE3                     	;# 
   780     0FE4                     	;# 
   781     0FE5                     	;# 
   782     0FE6                     	;# 
   783     0FE7                     	;# 
   784     0FE8                     	;# 
   785     0FE9                     	;# 
   786     0FEA                     	;# 
   787     0FEB                     	;# 
   788     0FED                     	;# 
   789     0FEE                     	;# 
   790     0FEF                     	;# 
   791     0000                     	;# 
   792     0001                     	;# 
   793     0002                     	;# 
   794     0003                     	;# 
   795     0004                     	;# 
   796     0005                     	;# 
   797     0006                     	;# 
   798     0007                     	;# 
   799     0008                     	;# 
   800     0009                     	;# 
   801     000A                     	;# 
   802     000B                     	;# 
   803     000C                     	;# 
   804     000E                     	;# 
   805     0011                     	;# 
   806     0012                     	;# 
   807     0013                     	;# 
   808     0015                     	;# 
   809     0016                     	;# 
   810     0016                     	;# 
   811     0017                     	;# 
   812     0018                     	;# 
   813     0019                     	;# 
   814     001A                     	;# 
   815     001B                     	;# 
   816     001C                     	;# 
   817     008C                     	;# 
   818     008E                     	;# 
   819     0091                     	;# 
   820     0092                     	;# 
   821     0093                     	;# 
   822     0095                     	;# 
   823     0096                     	;# 
   824     0097                     	;# 
   825     0099                     	;# 
   826     009A                     	;# 
   827     009B                     	;# 
   828     009B                     	;# 
   829     009C                     	;# 
   830     009D                     	;# 
   831     009E                     	;# 
   832     009F                     	;# 
   833     010C                     	;# 
   834     010E                     	;# 
   835     0111                     	;# 
   836     0112                     	;# 
   837     0113                     	;# 
   838     0114                     	;# 
   839     0115                     	;# 
   840     0116                     	;# 
   841     0117                     	;# 
   842     0118                     	;# 
   843     0119                     	;# 
   844     011D                     	;# 
   845     018C                     	;# 
   846     018E                     	;# 
   847     0191                     	;# 
   848     0191                     	;# 
   849     0192                     	;# 
   850     0193                     	;# 
   851     0193                     	;# 
   852     0194                     	;# 
   853     0195                     	;# 
   854     0196                     	;# 
   855     0197                     	;# 
   856     020C                     	;# 
   857     0211                     	;# 
   858     0211                     	;# 
   859     0212                     	;# 
   860     0212                     	;# 
   861     0213                     	;# 
   862     0213                     	;# 
   863     0214                     	;# 
   864     0214                     	;# 
   865     0215                     	;# 
   866     0215                     	;# 
   867     0215                     	;# 
   868     0216                     	;# 
   869     0216                     	;# 
   870     0217                     	;# 
   871     0217                     	;# 
   872     0391                     	;# 
   873     0392                     	;# 
   874     0393                     	;# 
   875     0498                     	;# 
   876     0498                     	;# 
   877     0499                     	;# 
   878     049A                     	;# 
   879     049B                     	;# 
   880     049B                     	;# 
   881     049C                     	;# 
   882     049D                     	;# 
   883     049E                     	;# 
   884     049F                     	;# 
   885     0611                     	;# 
   886     0612                     	;# 
   887     0613                     	;# 
   888     0613                     	;# 
   889     0614                     	;# 
   890     0615                     	;# 
   891     0616                     	;# 
   892     0616                     	;# 
   893     0617                     	;# 
   894     0618                     	;# 
   895     0619                     	;# 
   896     0619                     	;# 
   897     061A                     	;# 
   898     061B                     	;# 
   899     061C                     	;# 
   900     061C                     	;# 
   901     0691                     	;# 
   902     0692                     	;# 
   903     0693                     	;# 
   904     0694                     	;# 
   905     0695                     	;# 
   906     0F0F                     	;# 
   907     0F10                     	;# 
   908     0F11                     	;# 
   909     0F12                     	;# 
   910     0F13                     	;# 
   911     0F14                     	;# 
   912     0F15                     	;# 
   913     0F16                     	;# 
   914     0F17                     	;# 
   915     0F18                     	;# 
   916     0F19                     	;# 
   917     0F1A                     	;# 
   918     0F1B                     	;# 
   919     0F1C                     	;# 
   920     0F1D                     	;# 
   921     0F1E                     	;# 
   922     0F1F                     	;# 
   923     0FE3                     	;# 
   924     0FE4                     	;# 
   925     0FE5                     	;# 
   926     0FE6                     	;# 
   927     0FE7                     	;# 
   928     0FE8                     	;# 
   929     0FE9                     	;# 
   930     0FEA                     	;# 
   931     0FEB                     	;# 
   932     0FED                     	;# 
   933     0FEE                     	;# 
   934     0FEF                     	;# 
   935     0000                     	;# 
   936     0001                     	;# 
   937     0002                     	;# 
   938     0003                     	;# 
   939     0004                     	;# 
   940     0005                     	;# 
   941     0006                     	;# 
   942     0007                     	;# 
   943     0008                     	;# 
   944     0009                     	;# 
   945     000A                     	;# 
   946     000B                     	;# 
   947     000C                     	;# 
   948     000E                     	;# 
   949     0011                     	;# 
   950     0012                     	;# 
   951     0013                     	;# 
   952     0015                     	;# 
   953     0016                     	;# 
   954     0016                     	;# 
   955     0017                     	;# 
   956     0018                     	;# 
   957     0019                     	;# 
   958     001A                     	;# 
   959     001B                     	;# 
   960     001C                     	;# 
   961     008C                     	;# 
   962     008E                     	;# 
   963     0091                     	;# 
   964     0092                     	;# 
   965     0093                     	;# 
   966     0095                     	;# 
   967     0096                     	;# 
   968     0097                     	;# 
   969     0099                     	;# 
   970     009A                     	;# 
   971     009B                     	;# 
   972     009B                     	;# 
   973     009C                     	;# 
   974     009D                     	;# 
   975     009E                     	;# 
   976     009F                     	;# 
   977     010C                     	;# 
   978     010E                     	;# 
   979     0111                     	;# 
   980     0112                     	;# 
   981     0113                     	;# 
   982     0114                     	;# 
   983     0115                     	;# 
   984     0116                     	;# 
   985     0117                     	;# 
   986     0118                     	;# 
   987     0119                     	;# 
   988     011D                     	;# 
   989     018C                     	;# 
   990     018E                     	;# 
   991     0191                     	;# 
   992     0191                     	;# 
   993     0192                     	;# 
   994     0193                     	;# 
   995     0193                     	;# 
   996     0194                     	;# 
   997     0195                     	;# 
   998     0196                     	;# 
   999     0197                     	;# 
  1000     020C                     	;# 
  1001     0211                     	;# 
  1002     0211                     	;# 
  1003     0212                     	;# 
  1004     0212                     	;# 
  1005     0213                     	;# 
  1006     0213                     	;# 
  1007     0214                     	;# 
  1008     0214                     	;# 
  1009     0215                     	;# 
  1010     0215                     	;# 
  1011     0215                     	;# 
  1012     0216                     	;# 
  1013     0216                     	;# 
  1014     0217                     	;# 
  1015     0217                     	;# 
  1016     0391                     	;# 
  1017     0392                     	;# 
  1018     0393                     	;# 
  1019     0498                     	;# 
  1020     0498                     	;# 
  1021     0499                     	;# 
  1022     049A                     	;# 
  1023     049B                     	;# 
  1024     049B                     	;# 
  1025     049C                     	;# 
  1026     049D                     	;# 
  1027     049E                     	;# 
  1028     049F                     	;# 
  1029     0611                     	;# 
  1030     0612                     	;# 
  1031     0613                     	;# 
  1032     0613                     	;# 
  1033     0614                     	;# 
  1034     0615                     	;# 
  1035     0616                     	;# 
  1036     0616                     	;# 
  1037     0617                     	;# 
  1038     0618                     	;# 
  1039     0619                     	;# 
  1040     0619                     	;# 
  1041     061A                     	;# 
  1042     061B                     	;# 
  1043     061C                     	;# 
  1044     061C                     	;# 
  1045     0691                     	;# 
  1046     0692                     	;# 
  1047     0693                     	;# 
  1048     0694                     	;# 
  1049     0695                     	;# 
  1050     0F0F                     	;# 
  1051     0F10                     	;# 
  1052     0F11                     	;# 
  1053     0F12                     	;# 
  1054     0F13                     	;# 
  1055     0F14                     	;# 
  1056     0F15                     	;# 
  1057     0F16                     	;# 
  1058     0F17                     	;# 
  1059     0F18                     	;# 
  1060     0F19                     	;# 
  1061     0F1A                     	;# 
  1062     0F1B                     	;# 
  1063     0F1C                     	;# 
  1064     0F1D                     	;# 
  1065     0F1E                     	;# 
  1066     0F1F                     	;# 
  1067     0FE3                     	;# 
  1068     0FE4                     	;# 
  1069     0FE5                     	;# 
  1070     0FE6                     	;# 
  1071     0FE7                     	;# 
  1072     0FE8                     	;# 
  1073     0FE9                     	;# 
  1074     0FEA                     	;# 
  1075     0FEB                     	;# 
  1076     0FED                     	;# 
  1077     0FEE                     	;# 
  1078     0FEF                     	;# 
  1079                           
  1080                           	psect	idataBANK0
  1081     0374                     __pidataBANK0:
  1082                           
  1083                           ;initializer for _BOTON2_MIN
  1084     0374  341E               	retlw	30
  1085     0375  3402               	retlw	2
  1086                           
  1087                           ;initializer for _BOTON1_MIN
  1088     0376  341E               	retlw	30
  1089     0377  3402               	retlw	2
  1090                           
  1091                           ;initializer for _BOTON2_MAX
  1092     0378  3490               	retlw	144
  1093     0379  3402               	retlw	2
  1094                           
  1095                           ;initializer for _BOTON1_MAX
  1096     037A  3490               	retlw	144
  1097     037B  3402               	retlw	2
  1098                           
  1099                           	psect	idataBANK1
  1100     0412                     __pidataBANK1:
  1101                           
  1102                           ;initializer for save_to_nonvolatile@F57
  1103     0412  34FF               	retlw	255
  1104     0413  343F               	retlw	63
  1105     0414  34FF               	retlw	255
  1106     0415  343F               	retlw	63
  1107     0416  34FF               	retlw	255
  1108     0417  343F               	retlw	63
  1109     0418  34FF               	retlw	255
  1110     0419  343F               	retlw	63
  1111     041A  34FF               	retlw	255
  1112     041B  343F               	retlw	63
  1113     041C  34FF               	retlw	255
  1114     041D  343F               	retlw	63
  1115     041E  34FF               	retlw	255
  1116     041F  343F               	retlw	63
  1117     0420  34FF               	retlw	255
  1118     0421  343F               	retlw	63
  1119     0422  34FF               	retlw	255
  1120     0423  343F               	retlw	63
  1121     0424  34FF               	retlw	255
  1122     0425  343F               	retlw	63
  1123     0426  34FF               	retlw	255
  1124     0427  343F               	retlw	63
  1125     0428  34FF               	retlw	255
  1126     0429  343F               	retlw	63
  1127     042A  34FF               	retlw	255
  1128     042B  343F               	retlw	63
  1129     042C  34FF               	retlw	255
  1130     042D  343F               	retlw	63
  1131     042E  34FF               	retlw	255
  1132     042F  343F               	retlw	63
  1133     0430  34FF               	retlw	255
  1134     0431  343F               	retlw	63
  1135                           
  1136                           	psect	stringtext1
  1137     0352                     __pstringtext1:
  1138     0352                     _DCmaxCCW:
  1139     0352  34F4               	retlw	244
  1140     0353  3401               	retlw	1
  1141     0354                     __end_of_DCmaxCCW:
  1142                           
  1143                           	psect	stringtext2
  1144     0350                     __pstringtext2:
  1145     0350                     _DCmaxCW:
  1146     0350  34FA               	retlw	250
  1147     0351  3400               	retlw	0
  1148     0352                     __end_of_DCmaxCW:
  1149                           
  1150                           	psect	stringtext3
  1151     034E                     __pstringtext3:
  1152     034E                     _DCmin:
  1153     034E  3476               	retlw	118
  1154     034F  3401               	retlw	1
  1155     0350                     __end_of_DCmin:
  1156     000B                     _INTCONbits	set	11
  1157     001C                     _T2CONbits	set	28
  1158     001C                     _T2CON	set	28
  1159     0011                     _PIR1bits	set	17
  1160     001A                     _TMR2	set	26
  1161     001B                     _PR2	set	27
  1162     0095                     _OPTION_REGbits	set	149
  1163     008E                     _TRISC	set	142
  1164     008C                     _TRISA	set	140
  1165     0097                     _WDTCON	set	151
  1166     0099                     _OSCCON	set	153
  1167     009D                     _ADCON0bits	set	157
  1168     009D                     _ADCON0	set	157
  1169     009C                     _ADRESH	set	156
  1170     009B                     _ADRESL	set	155
  1171     009F                     _ADCON2	set	159
  1172     009E                     _ADCON1	set	158
  1173     011D                     _APFCON	set	285
  1174     010E                     _LATC	set	270
  1175     010C                     _LATA	set	268
  1176     0116                     _BORCON	set	278
  1177     018C                     _ANSELA	set	396
  1178     018E                     _ANSELC	set	398
  1179     0196                     _PMCON2	set	406
  1180     0193                     _PMDATL	set	403
  1181     0194                     _PMDATH	set	404
  1182     0195                     _PMCON1bits	set	405
  1183     0192                     _PMADRH	set	402
  1184     0191                     _PMADRL	set	401
  1185     020C                     _WPUA	set	524
  1186     0611                     _PWM1DCL	set	1553
  1187     0612                     _PWM1DCH	set	1554
  1188     0613                     _PWM1CON	set	1555
  1189                           
  1190                           	psect	cinit
  1191     0764                     start_initialization:	
  1192                           ; #config settings
  1193                           
  1194     0764                     __initialization:
  1195                           
  1196                           ; Initialize objects allocated to BANK0
  1197     0764  3074               	movlw	low __pidataBANK0
  1198     0765  0084               	movwf	4
  1199     0766  3083               	movlw	(high __pidataBANK0)| (0+128)
  1200     0767  0085               	movwf	5
  1201     0768  3050               	movlw	low __pdataBANK0
  1202     0769  0086               	movwf	6
  1203     076A  3000               	movlw	high __pdataBANK0
  1204     076B  0087               	movwf	7
  1205     076C  3008               	movlw	8
  1206     076D  3183  235E  3187   	fcall	init_ram
  1207                           
  1208                           ; Initialize objects allocated to BANK1
  1209     0770  3012               	movlw	low __pidataBANK1
  1210     0771  0084               	movwf	4
  1211     0772  3084               	movlw	(high __pidataBANK1)| (0+128)
  1212     0773  0085               	movwf	5
  1213     0774  30A0               	movlw	low __pdataBANK1
  1214     0775  0086               	movwf	6
  1215     0776  3000               	movlw	high __pdataBANK1
  1216     0777  0087               	movwf	7
  1217     0778  3020               	movlw	32
  1218     0779  3183  235E  3187   	fcall	init_ram
  1219                           
  1220                           ; Clear objects allocated to BANK0
  1221     077C  01D8               	clrf	__pbssBANK0& (0+127)
  1222     077D  01D9               	clrf	(__pbssBANK0+1)& (0+127)
  1223     077E                     end_of_initialization:	
  1224                           ;End of C runtime variable initialization code
  1225                           
  1226     077E                     __end_of__initialization:
  1227     077E  0020               	movlb	0
  1228     077F  2D35               	ljmp	_main	;jump to C main() function
  1229                           
  1230                           	psect	bssBANK0
  1231     0058                     __pbssBANK0:
  1232     0058                     _ADC_InterruptHandler:
  1233     0058                     	ds	2
  1234                           
  1235                           	psect	dataBANK0
  1236     0050                     __pdataBANK0:
  1237     0050                     _BOTON2_MIN:
  1238     0050                     	ds	2
  1239     0052                     _BOTON1_MIN:
  1240     0052                     	ds	2
  1241     0054                     _BOTON2_MAX:
  1242     0054                     	ds	2
  1243     0056                     _BOTON1_MAX:
  1244     0056                     	ds	2
  1245                           
  1246                           	psect	dataBANK1
  1247     00A0                     __pdataBANK1:
  1248     00A0                     save_to_nonvolatile@F57:
  1249     00A0                     	ds	32
  1250                           
  1251                           	psect	inittext
  1252     035E                     init_ram:
  1253     035E  00FE               	movwf	btemp
  1254     035F                     initloop:
  1255     035F  0012               	moviw fsr0++
  1256     0360  001E               	movwi fsr1++
  1257     0361  0BFE               	decfsz	btemp,f
  1258     0362  2B5F               	goto	initloop
  1259     0363  3400               	retlw	0
  1260                           
  1261                           	psect	cstackCOMMON
  1262     0070                     __pcstackCOMMON:
  1263     0070                     ?_FLASH_EraseBlock:
  1264     0070                     ?_PIN_MANAGER_Initialize:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267     0070                     ??_PIN_MANAGER_Initialize:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270     0070                     ?_OSCILLATOR_Initialize:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273     0070                     ??_OSCILLATOR_Initialize:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276     0070                     ?_WDT_Initialize:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279     0070                     ??_WDT_Initialize:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282     0070                     ?_PWM1_Initialize:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285     0070                     ??_PWM1_Initialize:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288     0070                     ?_read_from_nonvolatile:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291     0070                     ?_save_to_nonvolatile:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294     0070                     ?_ADC_Initialize:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297     0070                     ??_ADC_Initialize:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300     0070                     ?_TMR2_Initialize:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303     0070                     ??_TMR2_Initialize:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306     0070                     ?_SYSTEM_Initialize:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309     0070                     ??_SYSTEM_Initialize:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312     0070                     ?_PWM1_LoadDutyValue:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315     0070                     ?_ADC_GetConversion:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318     0070                     ?_FLASH_ReadWord:	
  1319                           ; 2 bytes @ 0x0
  1320                           
  1321     0070                     ?_main:	
  1322                           ; 2 bytes @ 0x0
  1323                           
  1324     0070                     ?___lwdiv:	
  1325                           ; 2 bytes @ 0x0
  1326                           
  1327     0070                     FLASH_ReadWord@flashAddr:	
  1328                           ; 2 bytes @ 0x0
  1329                           
  1330     0070                     FLASH_EraseBlock@startAddr:	
  1331                           ; 2 bytes @ 0x0
  1332                           
  1333     0070                     PWM1_LoadDutyValue@dutyValue:	
  1334                           ; 2 bytes @ 0x0
  1335                           
  1336     0070                     ___lwdiv@divisor:	
  1337                           ; 2 bytes @ 0x0
  1338                           
  1339                           
  1340                           ; 2 bytes @ 0x0
  1341     0070                     	ds	2
  1342     0072                     ??_FLASH_EraseBlock:
  1343     0072                     ??_ADC_GetConversion:	
  1344                           ; 1 bytes @ 0x2
  1345                           
  1346     0072                     ??_FLASH_ReadWord:	
  1347                           ; 1 bytes @ 0x2
  1348                           
  1349     0072                     ??_PWM1_LoadDutyValue:	
  1350                           ; 1 bytes @ 0x2
  1351                           
  1352     0072                     FLASH_ReadWord@GIEBitValue:	
  1353                           ; 1 bytes @ 0x2
  1354                           
  1355     0072                     FLASH_EraseBlock@GIEBitValue:	
  1356                           ; 1 bytes @ 0x2
  1357                           
  1358     0072                     ___lwdiv@dividend:	
  1359                           ; 1 bytes @ 0x2
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x2
  1363     0072                     	ds	1
  1364     0073                     ?_FLASH_WriteBlock:
  1365     0073                     ??_read_from_nonvolatile:	
  1366                           ; 1 bytes @ 0x3
  1367                           
  1368     0073                     ADC_GetConversion@channel:	
  1369                           ; 1 bytes @ 0x3
  1370                           
  1371     0073                     FLASH_WriteBlock@writeAddr:	
  1372                           ; 1 bytes @ 0x3
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x3
  1376     0073                     	ds	1
  1377     0074                     ??___lwdiv:
  1378                           
  1379                           ; 1 bytes @ 0x4
  1380     0074                     	ds	1
  1381     0075                     FLASH_WriteBlock@flashWordArray:
  1382     0075                     ___lwdiv@quotient:	
  1383                           ; 1 bytes @ 0x5
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x5
  1387     0075                     	ds	1
  1388     0076                     ??_FLASH_WriteBlock:
  1389                           
  1390                           ; 1 bytes @ 0x6
  1391     0076                     	ds	1
  1392     0077                     ___lwdiv@counter:
  1393                           
  1394                           ; 1 bytes @ 0x7
  1395     0077                     	ds	2
  1396     0079                     FLASH_WriteBlock@blockStartAddr:
  1397                           
  1398                           ; 2 bytes @ 0x9
  1399     0079                     	ds	2
  1400     007B                     FLASH_WriteBlock@GIEBitValue:
  1401                           
  1402                           ; 1 bytes @ 0xB
  1403     007B                     	ds	1
  1404     007C                     FLASH_WriteBlock@i:
  1405                           
  1406                           ; 1 bytes @ 0xC
  1407     007C                     	ds	1
  1408     007D                     ??_save_to_nonvolatile:
  1409                           
  1410                           ; 1 bytes @ 0xD
  1411     007D                     	ds	1
  1412                           
  1413                           	psect	cstackBANK0
  1414     0020                     __pcstackBANK0:
  1415     0020                     save_to_nonvolatile@bloque:
  1416                           
  1417                           ; 32 bytes @ 0x0
  1418     0020                     	ds	32
  1419     0040                     ??_main:
  1420                           
  1421                           ; 1 bytes @ 0x20
  1422     0040                     	ds	2
  1423     0042                     main@i:
  1424                           
  1425                           ; 2 bytes @ 0x22
  1426     0042                     	ds	2
  1427     0044                     main@i_387:
  1428                           
  1429                           ; 2 bytes @ 0x24
  1430     0044                     	ds	2
  1431     0046                     main@C1p:
  1432                           
  1433                           ; 2 bytes @ 0x26
  1434     0046                     	ds	2
  1435     0048                     main@C2p:
  1436                           
  1437                           ; 2 bytes @ 0x28
  1438     0048                     	ds	2
  1439     004A                     main@C1:
  1440                           
  1441                           ; 2 bytes @ 0x2A
  1442     004A                     	ds	2
  1443     004C                     main@C2:
  1444                           
  1445                           ; 2 bytes @ 0x2C
  1446     004C                     	ds	2
  1447     004E                     main@dc:
  1448                           
  1449                           ; 2 bytes @ 0x2E
  1450     004E                     	ds	2
  1451                           
  1452                           	psect	maintext
  1453     0535                     __pmaintext:	
  1454 ;;
  1455 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1456 ;;
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 53 in file "main.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  i               2   36[BANK0 ] int 
  1464 ;;  i               2   34[BANK0 ] int 
  1465 ;;  C2p             2   40[BANK0 ] unsigned short 
  1466 ;;  C1p             2   38[BANK0 ] unsigned short 
  1467 ;;  dc              2   46[BANK0 ] unsigned short 
  1468 ;;  C2              2   44[BANK0 ] unsigned short 
  1469 ;;  C1              2   42[BANK0 ] unsigned short 
  1470 ;;  C2s             2    0        unsigned short 
  1471 ;;  C1s             2    0        unsigned short 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2  203[None  ] int 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : B1F/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1
  1481 ;;      Params:         0       0       0
  1482 ;;      Locals:         0      14       0
  1483 ;;      Temps:          0       2       0
  1484 ;;      Totals:         0      16       0
  1485 ;;Total ram usage:       16 bytes
  1486 ;; Hardware stack levels required when called: 3
  1487 ;; This function calls:
  1488 ;;		_ADC_GetConversion
  1489 ;;		_PWM1_LoadDutyValue
  1490 ;;		_SYSTEM_Initialize
  1491 ;;		___lwdiv
  1492 ;;		_read_from_nonvolatile
  1493 ;;		_save_to_nonvolatile
  1494 ;; This function is called by:
  1495 ;;		Startup code after reset
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     0535                     _main:	
  1500                           ;psect for function _main
  1501                           
  1502     0535                     l1360:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1505                           
  1506                           
  1507                           ;main.c: 55:  SYSTEM_Initialize();
  1508     0535  3183  2385  3185   	fcall	_SYSTEM_Initialize
  1509                           
  1510                           ;main.c: 56:       read_from_nonvolatile();
  1511     0538  3184  2499  3185   	fcall	_read_from_nonvolatile
  1512     053B                     l1362:
  1513                           
  1514                           ;main.c: 57:  _delay((unsigned long)((200)*(16000000/4000.0)));
  1515     053B  3005               	movlw	5
  1516     053C  0020               	movlb	0	; select bank0
  1517     053D  00C1               	movwf	??_main+1
  1518     053E  300F               	movlw	15
  1519     053F  00C0               	movwf	??_main
  1520     0540  30F1               	movlw	241
  1521     0541                     u567:
  1522     0541  0B89               	decfsz	9,f
  1523     0542  2D41               	goto	u567
  1524     0543  0BC0               	decfsz	??_main,f
  1525     0544  2D41               	goto	u567
  1526     0545  0BC1               	decfsz	??_main+1,f
  1527     0546  2D41               	goto	u567
  1528     0547                     l1364:
  1529     0547                     l1366:
  1530     0547                     l1368:
  1531                           
  1532                           ;main.c: 64:    C1 = ADC_GetConversion(hallC1);
  1533     0547  3005               	movlw	5
  1534     0548  3183  23DB  3185   	fcall	_ADC_GetConversion
  1535     054B  0871               	movf	?_ADC_GetConversion+1,w
  1536     054C  0020               	movlb	0	; select bank0
  1537     054D  00CB               	movwf	main@C1+1
  1538     054E  0870               	movf	?_ADC_GetConversion,w
  1539     054F  00CA               	movwf	main@C1
  1540     0550                     l1370:
  1541                           
  1542                           ;main.c: 65:    C2 = ADC_GetConversion(hallC2);
  1543     0550  3006               	movlw	6
  1544     0551  3183  23DB  3185   	fcall	_ADC_GetConversion
  1545     0554  0871               	movf	?_ADC_GetConversion+1,w
  1546     0555  0020               	movlb	0	; select bank0
  1547     0556  00CD               	movwf	main@C2+1
  1548     0557  0870               	movf	?_ADC_GetConversion,w
  1549     0558  00CC               	movwf	main@C2
  1550     0559                     l1372:
  1551                           
  1552                           ;main.c: 67:    if (C1 > 575 && C2 > 575) {
  1553     0559  3002               	movlw	2
  1554     055A  024B               	subwf	main@C1+1,w
  1555     055B  3040               	movlw	64
  1556     055C  1903               	skipnz
  1557     055D  024A               	subwf	main@C1,w
  1558     055E  1C03               	skipc
  1559     055F  2D61               	goto	u421
  1560     0560  2D62               	goto	u420
  1561     0561                     u421:
  1562     0561  2E8F               	goto	l1430
  1563     0562                     u420:
  1564     0562                     l1374:
  1565     0562  3002               	movlw	2
  1566     0563  024D               	subwf	main@C2+1,w
  1567     0564  3040               	movlw	64
  1568     0565  1903               	skipnz
  1569     0566  024C               	subwf	main@C2,w
  1570     0567  1C03               	skipc
  1571     0568  2D6A               	goto	u431
  1572     0569  2D6B               	goto	u430
  1573     056A                     u431:
  1574     056A  2E8F               	goto	l1430
  1575     056B                     u430:
  1576     056B                     l1376:
  1577                           
  1578                           ;main.c: 68:       uint16_t C1p = 0;
  1579     056B  01C6               	clrf	main@C1p
  1580     056C  01C7               	clrf	main@C1p+1
  1581                           
  1582                           ;main.c: 69:       uint16_t C2p = 0;
  1583     056D  01C8               	clrf	main@C2p
  1584     056E  01C9               	clrf	main@C2p+1
  1585                           
  1586                           ;main.c: 70:       for (int i=0;i<5;i++){
  1587     056F  01C2               	clrf	main@i
  1588     0570  01C3               	clrf	main@i+1
  1589     0571                     l1382:
  1590                           
  1591                           ;main.c: 71:          C1p += ADC_GetConversion(hallC1);
  1592     0571  3005               	movlw	5
  1593     0572  3183  23DB  3185   	fcall	_ADC_GetConversion
  1594     0575  0870               	movf	?_ADC_GetConversion,w
  1595     0576  0020               	movlb	0	; select bank0
  1596     0577  07C6               	addwf	main@C1p,f
  1597     0578  0871               	movf	?_ADC_GetConversion+1,w
  1598     0579  3DC7               	addwfc	main@C1p+1,f
  1599                           
  1600                           ;main.c: 72:          C2p += ADC_GetConversion(hallC2);
  1601     057A  3006               	movlw	6
  1602     057B  3183  23DB  3185   	fcall	_ADC_GetConversion
  1603     057E  0870               	movf	?_ADC_GetConversion,w
  1604     057F  0020               	movlb	0	; select bank0
  1605     0580  07C8               	addwf	main@C2p,f
  1606     0581  0871               	movf	?_ADC_GetConversion+1,w
  1607     0582  3DC9               	addwfc	main@C2p+1,f
  1608     0583                     l1384:
  1609                           
  1610                           ;main.c: 73:       }
  1611     0583  3001               	movlw	1
  1612     0584  07C2               	addwf	main@i,f
  1613     0585  3000               	movlw	0
  1614     0586  3DC3               	addwfc	main@i+1,f
  1615     0587                     l1386:
  1616     0587  0843               	movf	main@i+1,w
  1617     0588  3A80               	xorlw	128
  1618     0589  00C0               	movwf	??_main
  1619     058A  3080               	movlw	128
  1620     058B  0240               	subwf	??_main,w
  1621     058C  1D03               	skipz
  1622     058D  2D90               	goto	u445
  1623     058E  3005               	movlw	5
  1624     058F  0242               	subwf	main@i,w
  1625     0590                     u445:
  1626     0590  1C03               	skipc
  1627     0591  2D93               	goto	u441
  1628     0592  2D94               	goto	u440
  1629     0593                     u441:
  1630     0593  2D71               	goto	l1382
  1631     0594                     u440:
  1632     0594                     l1388:
  1633                           
  1634                           ;main.c: 74:       BOTON1_MAX = C1p/5;
  1635     0594  3005               	movlw	5
  1636     0595  00F0               	movwf	___lwdiv@divisor
  1637     0596  3000               	movlw	0
  1638     0597  00F1               	movwf	___lwdiv@divisor+1
  1639     0598  0020               	movlb	0	; select bank0
  1640     0599  0847               	movf	main@C1p+1,w
  1641     059A  00F3               	movwf	___lwdiv@dividend+1
  1642     059B  0846               	movf	main@C1p,w
  1643     059C  00F2               	movwf	___lwdiv@dividend
  1644     059D  3184  245D  3185   	fcall	___lwdiv
  1645     05A0  0871               	movf	?___lwdiv+1,w
  1646     05A1  0020               	movlb	0	; select bank0
  1647     05A2  00D7               	movwf	_BOTON1_MAX+1
  1648     05A3  0870               	movf	?___lwdiv,w
  1649     05A4  00D6               	movwf	_BOTON1_MAX
  1650                           
  1651                           ;main.c: 75:       BOTON2_MAX = C2p/5;
  1652     05A5  3005               	movlw	5
  1653     05A6  00F0               	movwf	___lwdiv@divisor
  1654     05A7  3000               	movlw	0
  1655     05A8  00F1               	movwf	___lwdiv@divisor+1
  1656     05A9  0849               	movf	main@C2p+1,w
  1657     05AA  00F3               	movwf	___lwdiv@dividend+1
  1658     05AB  0848               	movf	main@C2p,w
  1659     05AC  00F2               	movwf	___lwdiv@dividend
  1660     05AD  3184  245D  3185   	fcall	___lwdiv
  1661     05B0  0871               	movf	?___lwdiv+1,w
  1662     05B1  0020               	movlb	0	; select bank0
  1663     05B2  00D5               	movwf	_BOTON2_MAX+1
  1664     05B3  0870               	movf	?___lwdiv,w
  1665     05B4  00D4               	movwf	_BOTON2_MAX
  1666                           
  1667                           ;main.c: 77:       PWM1_LoadDutyValue(DCmaxCW);
  1668     05B5  30FA               	movlw	250
  1669     05B6  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1670     05B7  3000               	movlw	0
  1671     05B8  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1672     05B9  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1673     05BC                     l1390:
  1674                           
  1675                           ;main.c: 78:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1676     05BC  3029               	movlw	41
  1677     05BD  0020               	movlb	0	; select bank0
  1678     05BE  00C1               	movwf	??_main+1
  1679     05BF  3096               	movlw	150
  1680     05C0  00C0               	movwf	??_main
  1681     05C1  307F               	movlw	127
  1682     05C2                     u577:
  1683     05C2  0B89               	decfsz	9,f
  1684     05C3  2DC2               	goto	u577
  1685     05C4  0BC0               	decfsz	??_main,f
  1686     05C5  2DC2               	goto	u577
  1687     05C6  0BC1               	decfsz	??_main+1,f
  1688     05C7  2DC2               	goto	u577
  1689     05C8                     l1392:
  1690                           
  1691                           ;main.c: 79:       PWM1_LoadDutyValue(DCmaxCCW);
  1692     05C8  30F4               	movlw	244
  1693     05C9  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1694     05CA  3001               	movlw	1
  1695     05CB  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1696     05CC  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1697                           
  1698                           ;main.c: 80:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1699     05CF  3029               	movlw	41
  1700     05D0  0020               	movlb	0	; select bank0
  1701     05D1  00C1               	movwf	??_main+1
  1702     05D2  3096               	movlw	150
  1703     05D3  00C0               	movwf	??_main
  1704     05D4  307F               	movlw	127
  1705     05D5                     u587:
  1706     05D5  0B89               	decfsz	9,f
  1707     05D6  2DD5               	goto	u587
  1708     05D7  0BC0               	decfsz	??_main,f
  1709     05D8  2DD5               	goto	u587
  1710     05D9  0BC1               	decfsz	??_main+1,f
  1711     05DA  2DD5               	goto	u587
  1712     05DB                     l1394:
  1713                           
  1714                           ;main.c: 81:       PWM1_LoadDutyValue(DCmin);
  1715     05DB  3076               	movlw	118
  1716     05DC  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1717     05DD  3001               	movlw	1
  1718     05DE  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1719     05DF  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1720     05E2                     l1396:
  1721                           
  1722                           ;main.c: 83:       C1p = 0;
  1723     05E2  0020               	movlb	0	; select bank0
  1724     05E3  01C6               	clrf	main@C1p
  1725     05E4  01C7               	clrf	main@C1p+1
  1726     05E5                     l1398:
  1727                           
  1728                           ;main.c: 84:       C2p = 0;
  1729     05E5  01C8               	clrf	main@C2p
  1730     05E6  01C9               	clrf	main@C2p+1
  1731                           
  1732                           ;main.c: 86:       while (C1 > 550 || C2 > 550) {
  1733     05E7  2DFA               	goto	l1402
  1734     05E8                     l1400:
  1735                           
  1736                           ;main.c: 87:          C1 = ADC_GetConversion(hallC1);
  1737     05E8  3005               	movlw	5
  1738     05E9  3183  23DB  3185   	fcall	_ADC_GetConversion
  1739     05EC  0871               	movf	?_ADC_GetConversion+1,w
  1740     05ED  0020               	movlb	0	; select bank0
  1741     05EE  00CB               	movwf	main@C1+1
  1742     05EF  0870               	movf	?_ADC_GetConversion,w
  1743     05F0  00CA               	movwf	main@C1
  1744                           
  1745                           ;main.c: 88:          C2 = ADC_GetConversion(hallC2);
  1746     05F1  3006               	movlw	6
  1747     05F2  3183  23DB  3185   	fcall	_ADC_GetConversion
  1748     05F5  0871               	movf	?_ADC_GetConversion+1,w
  1749     05F6  0020               	movlb	0	; select bank0
  1750     05F7  00CD               	movwf	main@C2+1
  1751     05F8  0870               	movf	?_ADC_GetConversion,w
  1752     05F9  00CC               	movwf	main@C2
  1753     05FA                     l1402:
  1754                           
  1755                           ;main.c: 86:       while (C1 > 550 || C2 > 550) {
  1756     05FA  3002               	movlw	2
  1757     05FB  024B               	subwf	main@C1+1,w
  1758     05FC  3027               	movlw	39
  1759     05FD  1903               	skipnz
  1760     05FE  024A               	subwf	main@C1,w
  1761     05FF  1803               	skipnc
  1762     0600  2E02               	goto	u451
  1763     0601  2E03               	goto	u450
  1764     0602                     u451:
  1765     0602  2DE8               	goto	l1400
  1766     0603                     u450:
  1767     0603                     l1404:
  1768     0603  3002               	movlw	2
  1769     0604  024D               	subwf	main@C2+1,w
  1770     0605  3027               	movlw	39
  1771     0606  1903               	skipnz
  1772     0607  024C               	subwf	main@C2,w
  1773     0608  1803               	skipnc
  1774     0609  2E0B               	goto	u461
  1775     060A  2E0C               	goto	u460
  1776     060B                     u461:
  1777     060B  2DE8               	goto	l1400
  1778     060C                     u460:
  1779     060C                     l1406:
  1780                           
  1781                           ;main.c: 90:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1782     060C  3029               	movlw	41
  1783     060D  0020               	movlb	0	; select bank0
  1784     060E  00C1               	movwf	??_main+1
  1785     060F  3096               	movlw	150
  1786     0610  00C0               	movwf	??_main
  1787     0611  307F               	movlw	127
  1788     0612                     u597:
  1789     0612  0B89               	decfsz	9,f
  1790     0613  2E12               	goto	u597
  1791     0614  0BC0               	decfsz	??_main,f
  1792     0615  2E12               	goto	u597
  1793     0616  0BC1               	decfsz	??_main+1,f
  1794     0617  2E12               	goto	u597
  1795     0618                     l1408:
  1796                           
  1797                           ;main.c: 92:       for (int i=0;i<5;i++){
  1798     0618  0020               	movlb	0	; select bank0
  1799     0619  01C4               	clrf	main@i_387
  1800     061A  01C5               	clrf	main@i_387+1
  1801     061B                     l1414:
  1802                           
  1803                           ;main.c: 93:          C1p += ADC_GetConversion(hallC1);
  1804     061B  3005               	movlw	5
  1805     061C  3183  23DB  3185   	fcall	_ADC_GetConversion
  1806     061F  0870               	movf	?_ADC_GetConversion,w
  1807     0620  0020               	movlb	0	; select bank0
  1808     0621  07C6               	addwf	main@C1p,f
  1809     0622  0871               	movf	?_ADC_GetConversion+1,w
  1810     0623  3DC7               	addwfc	main@C1p+1,f
  1811                           
  1812                           ;main.c: 94:          C2p += ADC_GetConversion(hallC2);
  1813     0624  3006               	movlw	6
  1814     0625  3183  23DB  3185   	fcall	_ADC_GetConversion
  1815     0628  0870               	movf	?_ADC_GetConversion,w
  1816     0629  0020               	movlb	0	; select bank0
  1817     062A  07C8               	addwf	main@C2p,f
  1818     062B  0871               	movf	?_ADC_GetConversion+1,w
  1819     062C  3DC9               	addwfc	main@C2p+1,f
  1820     062D                     l1416:
  1821                           
  1822                           ;main.c: 95:       }
  1823     062D  3001               	movlw	1
  1824     062E  07C4               	addwf	main@i_387,f
  1825     062F  3000               	movlw	0
  1826     0630  3DC5               	addwfc	main@i_387+1,f
  1827     0631                     l1418:
  1828     0631  0845               	movf	main@i_387+1,w
  1829     0632  3A80               	xorlw	128
  1830     0633  00C0               	movwf	??_main
  1831     0634  3080               	movlw	128
  1832     0635  0240               	subwf	??_main,w
  1833     0636  1D03               	skipz
  1834     0637  2E3A               	goto	u475
  1835     0638  3005               	movlw	5
  1836     0639  0244               	subwf	main@i_387,w
  1837     063A                     u475:
  1838     063A  1C03               	skipc
  1839     063B  2E3D               	goto	u471
  1840     063C  2E3E               	goto	u470
  1841     063D                     u471:
  1842     063D  2E1B               	goto	l1414
  1843     063E                     u470:
  1844     063E                     l1420:
  1845                           
  1846                           ;main.c: 96:       BOTON1_MIN = C1p/5;
  1847     063E  3005               	movlw	5
  1848     063F  00F0               	movwf	___lwdiv@divisor
  1849     0640  3000               	movlw	0
  1850     0641  00F1               	movwf	___lwdiv@divisor+1
  1851     0642  0020               	movlb	0	; select bank0
  1852     0643  0847               	movf	main@C1p+1,w
  1853     0644  00F3               	movwf	___lwdiv@dividend+1
  1854     0645  0846               	movf	main@C1p,w
  1855     0646  00F2               	movwf	___lwdiv@dividend
  1856     0647  3184  245D  3185   	fcall	___lwdiv
  1857     064A  0871               	movf	?___lwdiv+1,w
  1858     064B  0020               	movlb	0	; select bank0
  1859     064C  00D3               	movwf	_BOTON1_MIN+1
  1860     064D  0870               	movf	?___lwdiv,w
  1861     064E  00D2               	movwf	_BOTON1_MIN
  1862                           
  1863                           ;main.c: 97:       BOTON2_MIN = C2p/5;
  1864     064F  3005               	movlw	5
  1865     0650  00F0               	movwf	___lwdiv@divisor
  1866     0651  3000               	movlw	0
  1867     0652  00F1               	movwf	___lwdiv@divisor+1
  1868     0653  0849               	movf	main@C2p+1,w
  1869     0654  00F3               	movwf	___lwdiv@dividend+1
  1870     0655  0848               	movf	main@C2p,w
  1871     0656  00F2               	movwf	___lwdiv@dividend
  1872     0657  3184  245D  3185   	fcall	___lwdiv
  1873     065A  0871               	movf	?___lwdiv+1,w
  1874     065B  0020               	movlb	0	; select bank0
  1875     065C  00D1               	movwf	_BOTON2_MIN+1
  1876     065D  0870               	movf	?___lwdiv,w
  1877     065E  00D0               	movwf	_BOTON2_MIN
  1878                           
  1879                           ;main.c: 99:       PWM1_LoadDutyValue(DCmaxCW);
  1880     065F  30FA               	movlw	250
  1881     0660  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1882     0661  3000               	movlw	0
  1883     0662  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1884     0663  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1885     0666                     l1422:
  1886                           
  1887                           ;main.c: 100:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1888     0666  3029               	movlw	41
  1889     0667  0020               	movlb	0	; select bank0
  1890     0668  00C1               	movwf	??_main+1
  1891     0669  3096               	movlw	150
  1892     066A  00C0               	movwf	??_main
  1893     066B  307F               	movlw	127
  1894     066C                     u607:
  1895     066C  0B89               	decfsz	9,f
  1896     066D  2E6C               	goto	u607
  1897     066E  0BC0               	decfsz	??_main,f
  1898     066F  2E6C               	goto	u607
  1899     0670  0BC1               	decfsz	??_main+1,f
  1900     0671  2E6C               	goto	u607
  1901     0672                     l1424:
  1902                           
  1903                           ;main.c: 101:       PWM1_LoadDutyValue(DCmaxCCW);
  1904     0672  30F4               	movlw	244
  1905     0673  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1906     0674  3001               	movlw	1
  1907     0675  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1908     0676  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1909                           
  1910                           ;main.c: 102:       _delay((unsigned long)((2000)*(16000000/4000.0)));
  1911     0679  3029               	movlw	41
  1912     067A  0020               	movlb	0	; select bank0
  1913     067B  00C1               	movwf	??_main+1
  1914     067C  3096               	movlw	150
  1915     067D  00C0               	movwf	??_main
  1916     067E  307F               	movlw	127
  1917     067F                     u617:
  1918     067F  0B89               	decfsz	9,f
  1919     0680  2E7F               	goto	u617
  1920     0681  0BC0               	decfsz	??_main,f
  1921     0682  2E7F               	goto	u617
  1922     0683  0BC1               	decfsz	??_main+1,f
  1923     0684  2E7F               	goto	u617
  1924     0685                     l1426:
  1925                           
  1926                           ;main.c: 103:       PWM1_LoadDutyValue(DCmin);
  1927     0685  3076               	movlw	118
  1928     0686  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  1929     0687  3001               	movlw	1
  1930     0688  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  1931     0689  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  1932     068C                     l1428:
  1933                           
  1934                           ;main.c: 105:       save_to_nonvolatile();
  1935     068C  3184  2432  3185   	fcall	_save_to_nonvolatile
  1936     068F                     l1430:
  1937     068F                     l1432:
  1938     068F                     l1434:
  1939                           
  1940                           ;main.c: 113:    _delay((unsigned long)((200)*(16000000/4000.0)));
  1941     068F  3005               	movlw	5
  1942     0690  0020               	movlb	0	; select bank0
  1943     0691  00C1               	movwf	??_main+1
  1944     0692  300F               	movlw	15
  1945     0693  00C0               	movwf	??_main
  1946     0694  30F1               	movlw	241
  1947     0695                     u627:
  1948     0695  0B89               	decfsz	9,f
  1949     0696  2E95               	goto	u627
  1950     0697  0BC0               	decfsz	??_main,f
  1951     0698  2E95               	goto	u627
  1952     0699  0BC1               	decfsz	??_main+1,f
  1953     069A  2E95               	goto	u627
  1954     069B                     l1436:
  1955                           
  1956                           ;main.c: 116:       C1 = ADC_GetConversion(hallC1);
  1957     069B  3005               	movlw	5
  1958     069C  3183  23DB  3185   	fcall	_ADC_GetConversion
  1959     069F  0871               	movf	?_ADC_GetConversion+1,w
  1960     06A0  0020               	movlb	0	; select bank0
  1961     06A1  00CB               	movwf	main@C1+1
  1962     06A2  0870               	movf	?_ADC_GetConversion,w
  1963     06A3  00CA               	movwf	main@C1
  1964     06A4                     l1438:
  1965                           
  1966                           ;main.c: 117:       C2 = ADC_GetConversion(hallC2);
  1967     06A4  3006               	movlw	6
  1968     06A5  3183  23DB  3185   	fcall	_ADC_GetConversion
  1969     06A8  0871               	movf	?_ADC_GetConversion+1,w
  1970     06A9  0020               	movlb	0	; select bank0
  1971     06AA  00CD               	movwf	main@C2+1
  1972     06AB  0870               	movf	?_ADC_GetConversion,w
  1973     06AC  00CC               	movwf	main@C2
  1974     06AD                     l1440:
  1975                           
  1976                           ;main.c: 119:       if(C1 > (BOTON1_MIN + 10)) {
  1977     06AD  0852               	movf	_BOTON1_MIN,w
  1978     06AE  3E0A               	addlw	10
  1979     06AF  00C0               	movwf	??_main
  1980     06B0  3000               	movlw	0
  1981     06B1  3D53               	addwfc	_BOTON1_MIN+1,w
  1982     06B2  00C1               	movwf	??_main+1
  1983     06B3  084B               	movf	main@C1+1,w
  1984     06B4  0241               	subwf	??_main+1,w
  1985     06B5  1D03               	skipz
  1986     06B6  2EB9               	goto	u485
  1987     06B7  084A               	movf	main@C1,w
  1988     06B8  0240               	subwf	??_main,w
  1989     06B9                     u485:
  1990     06B9  1803               	skipnc
  1991     06BA  2EBC               	goto	u481
  1992     06BB  2EBD               	goto	u480
  1993     06BC                     u481:
  1994     06BC  2F04               	goto	l1458
  1995     06BD                     u480:
  1996     06BD  2EF2               	goto	l1456
  1997     06BE                     l1444:
  1998                           
  1999                           ;main.c: 121:             C1 = ADC_GetConversion(hallC1);
  2000     06BE  3005               	movlw	5
  2001     06BF  3183  23DB  3185   	fcall	_ADC_GetConversion
  2002     06C2  0871               	movf	?_ADC_GetConversion+1,w
  2003     06C3  0020               	movlb	0	; select bank0
  2004     06C4  00CB               	movwf	main@C1+1
  2005     06C5  0870               	movf	?_ADC_GetConversion,w
  2006     06C6  00CA               	movwf	main@C1
  2007     06C7                     l1446:
  2008                           
  2009                           ;main.c: 122:             dc = 895 - C1;
  2010     06C7  307F               	movlw	127
  2011     06C8  00C0               	movwf	??_main
  2012     06C9  3003               	movlw	3
  2013     06CA  00C1               	movwf	??_main+1
  2014     06CB  084A               	movf	main@C1,w
  2015     06CC  0240               	subwf	??_main,w
  2016     06CD  00CE               	movwf	main@dc
  2017     06CE  084B               	movf	main@C1+1,w
  2018     06CF  3B41               	subwfb	??_main+1,w
  2019     06D0  00CF               	movwf	main@dc+1
  2020     06D1                     l1448:
  2021                           
  2022                           ;main.c: 123:             if (dc<DCmaxCW){dc=DCmaxCW;}
  2023     06D1  3000               	movlw	0
  2024     06D2  024F               	subwf	main@dc+1,w
  2025     06D3  30FA               	movlw	250
  2026     06D4  1903               	skipnz
  2027     06D5  024E               	subwf	main@dc,w
  2028     06D6  1803               	skipnc
  2029     06D7  2ED9               	goto	u491
  2030     06D8  2EDA               	goto	u490
  2031     06D9                     u491:
  2032     06D9  2EDE               	goto	l216
  2033     06DA                     u490:
  2034     06DA                     l1450:
  2035     06DA  30FA               	movlw	250
  2036     06DB  00CE               	movwf	main@dc
  2037     06DC  3000               	movlw	0
  2038     06DD  00CF               	movwf	main@dc+1
  2039     06DE                     l216:
  2040                           
  2041                           ;main.c: 124:             if (dc>DCmin){dc=DCmin;}
  2042     06DE  3001               	movlw	1
  2043     06DF  024F               	subwf	main@dc+1,w
  2044     06E0  3077               	movlw	119
  2045     06E1  1903               	skipnz
  2046     06E2  024E               	subwf	main@dc,w
  2047     06E3  1C03               	skipc
  2048     06E4  2EE6               	goto	u501
  2049     06E5  2EE7               	goto	u500
  2050     06E6                     u501:
  2051     06E6  2EEB               	goto	l1454
  2052     06E7                     u500:
  2053     06E7                     l1452:
  2054     06E7  3076               	movlw	118
  2055     06E8  00CE               	movwf	main@dc
  2056     06E9  3001               	movlw	1
  2057     06EA  00CF               	movwf	main@dc+1
  2058     06EB                     l1454:
  2059                           
  2060                           ;main.c: 125:             PWM1_LoadDutyValue(dc);
  2061     06EB  084F               	movf	main@dc+1,w
  2062     06EC  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2063     06ED  084E               	movf	main@dc,w
  2064     06EE  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2065     06EF  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  2066     06F2                     l1456:
  2067                           
  2068                           ;main.c: 120:          while(C1 > (BOTON1_MIN + 10)) {
  2069     06F2  0020               	movlb	0	; select bank0
  2070     06F3  0852               	movf	_BOTON1_MIN,w
  2071     06F4  3E0A               	addlw	10
  2072     06F5  00C0               	movwf	??_main
  2073     06F6  3000               	movlw	0
  2074     06F7  3D53               	addwfc	_BOTON1_MIN+1,w
  2075     06F8  00C1               	movwf	??_main+1
  2076     06F9  084B               	movf	main@C1+1,w
  2077     06FA  0241               	subwf	??_main+1,w
  2078     06FB  1D03               	skipz
  2079     06FC  2EFF               	goto	u515
  2080     06FD  084A               	movf	main@C1,w
  2081     06FE  0240               	subwf	??_main,w
  2082     06FF                     u515:
  2083     06FF  1C03               	skipc
  2084     0700  2F02               	goto	u511
  2085     0701  2F03               	goto	u510
  2086     0702                     u511:
  2087     0702  2EBE               	goto	l1444
  2088     0703                     u510:
  2089     0703  2F5B               	goto	l1478
  2090     0704                     l1458:
  2091     0704  0850               	movf	_BOTON2_MIN,w
  2092     0705  3E0A               	addlw	10
  2093     0706  00C0               	movwf	??_main
  2094     0707  3000               	movlw	0
  2095     0708  3D51               	addwfc	_BOTON2_MIN+1,w
  2096     0709  00C1               	movwf	??_main+1
  2097     070A  084D               	movf	main@C2+1,w
  2098     070B  0241               	subwf	??_main+1,w
  2099     070C  1D03               	skipz
  2100     070D  2F10               	goto	u525
  2101     070E  084C               	movf	main@C2,w
  2102     070F  0240               	subwf	??_main,w
  2103     0710                     u525:
  2104     0710  1803               	skipnc
  2105     0711  2F13               	goto	u521
  2106     0712  2F14               	goto	u520
  2107     0713                     u521:
  2108     0713  2F57               	goto	l1476
  2109     0714                     u520:
  2110     0714  2F45               	goto	l1474
  2111     0715                     l1462:
  2112                           
  2113                           ;main.c: 131:             C2 = ADC_GetConversion(hallC2);
  2114     0715  3006               	movlw	6
  2115     0716  3183  23DB  3185   	fcall	_ADC_GetConversion
  2116     0719  0871               	movf	?_ADC_GetConversion+1,w
  2117     071A  0020               	movlb	0	; select bank0
  2118     071B  00CD               	movwf	main@C2+1
  2119     071C  0870               	movf	?_ADC_GetConversion,w
  2120     071D  00CC               	movwf	main@C2
  2121     071E                     l1464:
  2122                           
  2123                           ;main.c: 132:             dc = C2 - 145;
  2124     071E  084C               	movf	main@C2,w
  2125     071F  3E6F               	addlw	111
  2126     0720  00CE               	movwf	main@dc
  2127     0721  30FF               	movlw	255
  2128     0722  3D4D               	addwfc	main@C2+1,w
  2129     0723  00CF               	movwf	main@dc+1
  2130     0724                     l1466:
  2131                           
  2132                           ;main.c: 133:             if (dc<DCmin) {dc=DCmin;}
  2133     0724  3001               	movlw	1
  2134     0725  024F               	subwf	main@dc+1,w
  2135     0726  3076               	movlw	118
  2136     0727  1903               	skipnz
  2137     0728  024E               	subwf	main@dc,w
  2138     0729  1803               	skipnc
  2139     072A  2F2C               	goto	u531
  2140     072B  2F2D               	goto	u530
  2141     072C                     u531:
  2142     072C  2F31               	goto	l223
  2143     072D                     u530:
  2144     072D                     l1468:
  2145     072D  3076               	movlw	118
  2146     072E  00CE               	movwf	main@dc
  2147     072F  3001               	movlw	1
  2148     0730  00CF               	movwf	main@dc+1
  2149     0731                     l223:
  2150                           
  2151                           ;main.c: 134:             if (dc>DCmaxCCW) {dc=DCmaxCCW;}
  2152     0731  3001               	movlw	1
  2153     0732  024F               	subwf	main@dc+1,w
  2154     0733  30F5               	movlw	245
  2155     0734  1903               	skipnz
  2156     0735  024E               	subwf	main@dc,w
  2157     0736  1C03               	skipc
  2158     0737  2F39               	goto	u541
  2159     0738  2F3A               	goto	u540
  2160     0739                     u541:
  2161     0739  2F3E               	goto	l1472
  2162     073A                     u540:
  2163     073A                     l1470:
  2164     073A  30F4               	movlw	244
  2165     073B  00CE               	movwf	main@dc
  2166     073C  3001               	movlw	1
  2167     073D  00CF               	movwf	main@dc+1
  2168     073E                     l1472:
  2169                           
  2170                           ;main.c: 135:             PWM1_LoadDutyValue(dc);
  2171     073E  084F               	movf	main@dc+1,w
  2172     073F  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2173     0740  084E               	movf	main@dc,w
  2174     0741  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2175     0742  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  2176     0745                     l1474:
  2177                           
  2178                           ;main.c: 130:          while(C2 > (BOTON2_MIN + 10)) {
  2179     0745  0020               	movlb	0	; select bank0
  2180     0746  0850               	movf	_BOTON2_MIN,w
  2181     0747  3E0A               	addlw	10
  2182     0748  00C0               	movwf	??_main
  2183     0749  3000               	movlw	0
  2184     074A  3D51               	addwfc	_BOTON2_MIN+1,w
  2185     074B  00C1               	movwf	??_main+1
  2186     074C  084D               	movf	main@C2+1,w
  2187     074D  0241               	subwf	??_main+1,w
  2188     074E  1D03               	skipz
  2189     074F  2F52               	goto	u555
  2190     0750  084C               	movf	main@C2,w
  2191     0751  0240               	subwf	??_main,w
  2192     0752                     u555:
  2193     0752  1C03               	skipc
  2194     0753  2F55               	goto	u551
  2195     0754  2F56               	goto	u550
  2196     0755                     u551:
  2197     0755  2F15               	goto	l1462
  2198     0756                     u550:
  2199     0756  2F5B               	goto	l1478
  2200     0757                     l1476:
  2201                           
  2202                           ;main.c: 139:          dc = 375;
  2203     0757  3077               	movlw	119
  2204     0758  00CE               	movwf	main@dc
  2205     0759  3001               	movlw	1
  2206     075A  00CF               	movwf	main@dc+1
  2207     075B                     l1478:
  2208                           
  2209                           ;main.c: 141:       PWM1_LoadDutyValue(dc);
  2210     075B  084F               	movf	main@dc+1,w
  2211     075C  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  2212     075D  084E               	movf	main@dc,w
  2213     075E  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  2214     075F  3183  23AC  3185   	fcall	_PWM1_LoadDutyValue
  2215     0762  2E9B               	goto	l1436
  2216     0763  2801               	ljmp	start
  2217     0764                     __end_of_main:
  2218                           
  2219                           	psect	text1
  2220     0432                     __ptext1:	
  2221 ;; *************** function _save_to_nonvolatile *****************
  2222 ;; Defined at:
  2223 ;;		line 5 in file "nonvolatile.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  bloque         32    0[BANK0 ] unsigned short [16]
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1
  2237 ;;      Params:         0       0       0
  2238 ;;      Locals:         0      32       0
  2239 ;;      Temps:          1       0       0
  2240 ;;      Totals:         1      32       0
  2241 ;;Total ram usage:       33 bytes
  2242 ;; Hardware stack levels used: 1
  2243 ;; Hardware stack levels required when called: 2
  2244 ;; This function calls:
  2245 ;;		_FLASH_WriteBlock
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     0432                     _save_to_nonvolatile:	
  2252                           ;psect for function _save_to_nonvolatile
  2253                           
  2254     0432                     l1304:	
  2255                           ;incstack = 0
  2256                           ; Regs used in _save_to_nonvolatile: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2257                           
  2258                           
  2259                           ;nonvolatile.c: 6:  uint16_t bloque[16] = {[0 ... 15] = 0x3FFF};
  2260     0432  30A0               	movlw	low save_to_nonvolatile@F57
  2261     0433  0086               	movwf	6
  2262     0434  3000               	movlw	high save_to_nonvolatile@F57
  2263     0435  0087               	movwf	7
  2264     0436  3020               	movlw	low save_to_nonvolatile@bloque
  2265     0437  0084               	movwf	4
  2266     0438  3000               	movlw	high save_to_nonvolatile@bloque
  2267     0439  0085               	movwf	5
  2268     043A  3020               	movlw	32
  2269     043B  00FD               	movwf	??_save_to_nonvolatile
  2270     043C                     u330:
  2271     043C  0016               	moviw fsr1++
  2272     043D  001A               	movwi fsr0++
  2273     043E  0BFD               	decfsz	??_save_to_nonvolatile,f
  2274     043F  2C3C               	goto	u330
  2275     0440                     l1306:
  2276                           
  2277                           ;nonvolatile.c: 8:  bloque[0] = DATOS_VALIDOS;
  2278     0440  0020               	movlb	0	; select bank0
  2279     0441  01A0               	clrf	save_to_nonvolatile@bloque
  2280     0442  01A1               	clrf	save_to_nonvolatile@bloque+1
  2281     0443                     l1308:
  2282                           
  2283                           ;nonvolatile.c: 9:  bloque[1] = BOTON1_MAX;
  2284     0443  0857               	movf	_BOTON1_MAX+1,w
  2285     0444  00A3               	movwf	save_to_nonvolatile@bloque+3
  2286     0445  0856               	movf	_BOTON1_MAX,w
  2287     0446  00A2               	movwf	save_to_nonvolatile@bloque+2
  2288     0447                     l1310:
  2289                           
  2290                           ;nonvolatile.c: 10:  bloque[2] = BOTON1_MIN;
  2291     0447  0853               	movf	_BOTON1_MIN+1,w
  2292     0448  00A5               	movwf	save_to_nonvolatile@bloque+5
  2293     0449  0852               	movf	_BOTON1_MIN,w
  2294     044A  00A4               	movwf	save_to_nonvolatile@bloque+4
  2295     044B                     l1312:
  2296                           
  2297                           ;nonvolatile.c: 11:  bloque[3] = BOTON2_MAX;
  2298     044B  0855               	movf	_BOTON2_MAX+1,w
  2299     044C  00A7               	movwf	save_to_nonvolatile@bloque+7
  2300     044D  0854               	movf	_BOTON2_MAX,w
  2301     044E  00A6               	movwf	save_to_nonvolatile@bloque+6
  2302     044F                     l1314:
  2303                           
  2304                           ;nonvolatile.c: 12:  bloque[4] = BOTON2_MIN;
  2305     044F  0851               	movf	_BOTON2_MIN+1,w
  2306     0450  00A9               	movwf	save_to_nonvolatile@bloque+9
  2307     0451  0850               	movf	_BOTON2_MIN,w
  2308     0452  00A8               	movwf	save_to_nonvolatile@bloque+8
  2309     0453                     l1316:
  2310                           
  2311                           ;nonvolatile.c: 14:  FLASH_WriteBlock(0x0780, bloque);
  2312     0453  3080               	movlw	128
  2313     0454  00F3               	movwf	FLASH_WriteBlock@writeAddr
  2314     0455  3007               	movlw	7
  2315     0456  00F4               	movwf	FLASH_WriteBlock@writeAddr+1
  2316     0457  3020               	movlw	(low (save_to_nonvolatile@bloque| 0))& (0+255)
  2317     0458  00F5               	movwf	FLASH_WriteBlock@flashWordArray
  2318     0459  3184  24D6  3184   	fcall	_FLASH_WriteBlock
  2319     045C                     l254:
  2320     045C  0008               	return
  2321     045D                     __end_of_save_to_nonvolatile:
  2322                           
  2323                           	psect	text2
  2324     04D6                     __ptext2:	
  2325 ;; *************** function _FLASH_WriteBlock *****************
  2326 ;; Defined at:
  2327 ;;		line 94 in file "mcc_generated_files/memory.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  writeAddr       2    3[COMMON] unsigned short 
  2330 ;;  flashWordArr    1    5[COMMON] PTR unsigned short 
  2331 ;;		 -> save_to_nonvolatile@bloque(32), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  blockStartAd    2    9[COMMON] unsigned short 
  2334 ;;  i               1   12[COMMON] unsigned char 
  2335 ;;  GIEBitValue     1   11[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      char 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1
  2345 ;;      Params:         3       0       0
  2346 ;;      Locals:         4       0       0
  2347 ;;      Temps:          3       0       0
  2348 ;;      Totals:        10       0       0
  2349 ;;Total ram usage:       10 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		_FLASH_EraseBlock
  2354 ;; This function is called by:
  2355 ;;		_save_to_nonvolatile
  2356 ;;		_FLASH_WriteWord
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     04D6                     _FLASH_WriteBlock:	
  2361                           ;psect for function _FLASH_WriteBlock
  2362                           
  2363     04D6                     l1210:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _FLASH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint16_t writeAddr, uint16_t 
      +                          *flashWordArray);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:  
      +                             uint16_t blockStartAddr = (uint16_t )(writeAddr & ((0x800 -1) ^ (16 -1)));
  2369     04D6  30F0               	movlw	240
  2370     04D7  0573               	andwf	FLASH_WriteBlock@writeAddr,w
  2371     04D8  00F9               	movwf	FLASH_WriteBlock@blockStartAddr
  2372     04D9  3007               	movlw	7
  2373     04DA  0574               	andwf	FLASH_WriteBlock@writeAddr+1,w
  2374     04DB  00FA               	movwf	FLASH_WriteBlock@blockStartAddr+1
  2375     04DC                     l1212:
  2376                           
  2377                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  2378     04DC  3000               	movlw	0
  2379     04DD  1B8B               	btfsc	11,7	;volatile
  2380     04DE  3001               	movlw	1
  2381     04DF  00FB               	movwf	FLASH_WriteBlock@GIEBitValue
  2382     04E0                     l1214:
  2383                           
  2384                           ;mcc_generated_files/memory.c: 98:     uint8_t i;;mcc_generated_files/memory.c: 101:    
      +                           if( writeAddr != blockStartAddr )
  2385     04E0  087A               	movf	FLASH_WriteBlock@blockStartAddr+1,w
  2386     04E1  0674               	xorwf	FLASH_WriteBlock@writeAddr+1,w
  2387     04E2  1D03               	skipz
  2388     04E3  2CE6               	goto	u275
  2389     04E4  0879               	movf	FLASH_WriteBlock@blockStartAddr,w
  2390     04E5  0673               	xorwf	FLASH_WriteBlock@writeAddr,w
  2391     04E6                     u275:
  2392     04E6  1903               	skipnz
  2393     04E7  2CE9               	goto	u271
  2394     04E8  2CEA               	goto	u270
  2395     04E9                     u271:
  2396     04E9  2CEB               	goto	l103
  2397     04EA                     u270:
  2398     04EA  2D34               	goto	l104
  2399     04EB                     l103:	
  2400                           ;mcc_generated_files/memory.c: 104:     }
  2401                           
  2402                           
  2403                           ;mcc_generated_files/memory.c: 106:     INTCONbits.GIE = 0;
  2404     04EB  138B               	bcf	11,7	;volatile
  2405     04EC                     l1218:
  2406                           
  2407                           ;mcc_generated_files/memory.c: 109:     FLASH_EraseBlock(writeAddr);
  2408     04EC  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2409     04ED  00F1               	movwf	FLASH_EraseBlock@startAddr+1
  2410     04EE  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2411     04EF  00F0               	movwf	FLASH_EraseBlock@startAddr
  2412     04F0  3183  23F6  3184   	fcall	_FLASH_EraseBlock
  2413     04F3                     l1220:
  2414                           
  2415                           ;mcc_generated_files/memory.c: 112:     PMCON1bits.CFGS = 0;
  2416     04F3  0023               	movlb	3	; select bank3
  2417     04F4  1315               	bcf	21,6	;volatile
  2418     04F5                     l1222:
  2419                           
  2420                           ;mcc_generated_files/memory.c: 113:     PMCON1bits.WREN = 1;
  2421     04F5  1515               	bsf	21,2	;volatile
  2422     04F6                     l1224:
  2423                           
  2424                           ;mcc_generated_files/memory.c: 114:     PMCON1bits.LWLO = 1;
  2425     04F6  1695               	bsf	21,5	;volatile
  2426     04F7                     l1226:
  2427                           
  2428                           ;mcc_generated_files/memory.c: 116:     for (i=0; i<16; i++)
  2429     04F7  01FC               	clrf	FLASH_WriteBlock@i
  2430     04F8                     l1232:
  2431                           
  2432                           ;mcc_generated_files/memory.c: 117:     {;mcc_generated_files/memory.c: 119:         PMA
      +                          DRL = (writeAddr & 0xFF);
  2433     04F8  0873               	movf	FLASH_WriteBlock@writeAddr,w
  2434     04F9  0023               	movlb	3	; select bank3
  2435     04FA  0091               	movwf	17	;volatile
  2436     04FB                     l1234:
  2437                           
  2438                           ;mcc_generated_files/memory.c: 121:         PMADRH = ((writeAddr & 0xFF00) >> 8);
  2439     04FB  0874               	movf	FLASH_WriteBlock@writeAddr+1,w
  2440     04FC  0092               	movwf	18	;volatile
  2441     04FD                     l1236:
  2442                           
  2443                           ;mcc_generated_files/memory.c: 124:         PMDATL = flashWordArray[i];
  2444     04FD  357C               	lslf	FLASH_WriteBlock@i,w
  2445     04FE  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2446     04FF  00F6               	movwf	??_FLASH_WriteBlock
  2447     0500  0876               	movf	??_FLASH_WriteBlock,w
  2448     0501  0086               	movwf	6
  2449     0502  0187               	clrf	7
  2450     0503  0801               	movf	1,w
  2451     0504  0093               	movwf	19	;volatile
  2452     0505                     l1238:
  2453                           
  2454                           ;mcc_generated_files/memory.c: 125:         PMDATH = ((flashWordArray[i] & 0xFF00) >> 8)
      +                          ;
  2455     0505  357C               	lslf	FLASH_WriteBlock@i,w
  2456     0506  0775               	addwf	FLASH_WriteBlock@flashWordArray,w
  2457     0507  00F6               	movwf	??_FLASH_WriteBlock
  2458     0508  0876               	movf	??_FLASH_WriteBlock,w
  2459     0509  0086               	movwf	6
  2460     050A  0187               	clrf	7
  2461     050B  3F40               	moviw [0]fsr1
  2462     050C  00F7               	movwf	??_FLASH_WriteBlock+1
  2463     050D  3F41               	moviw [1]fsr1
  2464     050E  00F8               	movwf	??_FLASH_WriteBlock+2
  2465     050F  0878               	movf	??_FLASH_WriteBlock+2,w
  2466     0510  0094               	movwf	20	;volatile
  2467     0511                     l1240:
  2468                           
  2469                           ;mcc_generated_files/memory.c: 127:         if(i == (16 -1))
  2470     0511  300F               	movlw	15
  2471     0512  067C               	xorwf	FLASH_WriteBlock@i,w
  2472     0513  1D03               	btfss	3,2
  2473     0514  2D16               	goto	u281
  2474     0515  2D17               	goto	u280
  2475     0516                     u281:
  2476     0516  2D18               	goto	l1244
  2477     0517                     u280:
  2478     0517                     l1242:
  2479                           
  2480                           ;mcc_generated_files/memory.c: 128:         {;mcc_generated_files/memory.c: 130:        
      +                               PMCON1bits.LWLO = 0;
  2481     0517  1295               	bcf	21,5	;volatile
  2482     0518                     l1244:
  2483                           
  2484                           ;mcc_generated_files/memory.c: 133:         PMCON2 = 0x55;
  2485     0518  3055               	movlw	85
  2486     0519  0096               	movwf	22	;volsfr
  2487                           
  2488                           ;mcc_generated_files/memory.c: 134:         PMCON2 = 0xAA;
  2489     051A  30AA               	movlw	170
  2490     051B  0096               	movwf	22	;volsfr
  2491     051C                     l1246:
  2492                           
  2493                           ;mcc_generated_files/memory.c: 135:         PMCON1bits.WR = 1;
  2494     051C  1495               	bsf	21,1	;volatile
  2495     051D                     l1248:
  2496                           
  2497                           ;mcc_generated_files/memory.c: 136:         __nop();
  2498     051D  0000               	nop
  2499     051E                     l1250:
  2500                           
  2501                           ;mcc_generated_files/memory.c: 137:         __nop();
  2502     051E  0000               	nop
  2503                           
  2504                           ;mcc_generated_files/memory.c: 139:      writeAddr++;
  2505     051F  3001               	movlw	1
  2506     0520  07F3               	addwf	FLASH_WriteBlock@writeAddr,f
  2507     0521  3000               	movlw	0
  2508     0522  3DF4               	addwfc	FLASH_WriteBlock@writeAddr+1,f
  2509     0523                     l1252:
  2510                           
  2511                           ;mcc_generated_files/memory.c: 140:     }
  2512     0523  3001               	movlw	1
  2513     0524  00F6               	movwf	??_FLASH_WriteBlock
  2514     0525  0876               	movf	??_FLASH_WriteBlock,w
  2515     0526  07FC               	addwf	FLASH_WriteBlock@i,f
  2516     0527                     l1254:
  2517     0527  3010               	movlw	16
  2518     0528  027C               	subwf	FLASH_WriteBlock@i,w
  2519     0529  1C03               	skipc
  2520     052A  2D2C               	goto	u291
  2521     052B  2D2D               	goto	u290
  2522     052C                     u291:
  2523     052C  2CF8               	goto	l1232
  2524     052D                     u290:
  2525     052D                     l106:
  2526                           
  2527                           ;mcc_generated_files/memory.c: 142:     PMCON1bits.WREN = 0;
  2528     052D  0023               	movlb	3	; select bank3
  2529     052E  1115               	bcf	21,2	;volatile
  2530     052F                     l1256:
  2531                           
  2532                           ;mcc_generated_files/memory.c: 143:     INTCONbits.GIE = GIEBitValue;
  2533     052F  0C7B               	rrf	FLASH_WriteBlock@GIEBitValue,w
  2534     0530  1C03               	skipc
  2535     0531  138B               	bcf	11,7	;volatile
  2536     0532  1803               	skipnc
  2537     0533  178B               	bsf	11,7	;volatile
  2538     0534                     l104:
  2539     0534  0008               	return
  2540     0535                     __end_of_FLASH_WriteBlock:
  2541                           
  2542                           	psect	text3
  2543     03F6                     __ptext3:	
  2544 ;; *************** function _FLASH_EraseBlock *****************
  2545 ;; Defined at:
  2546 ;;		line 148 in file "mcc_generated_files/memory.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  startAddr       2    0[COMMON] unsigned short 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1
  2560 ;;      Params:         2       0       0
  2561 ;;      Locals:         1       0       0
  2562 ;;      Temps:          0       0       0
  2563 ;;      Totals:         3       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_FLASH_WriteBlock
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573     03F6                     _FLASH_EraseBlock:	
  2574                           ;psect for function _FLASH_EraseBlock
  2575                           
  2576     03F6                     l1146:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _FLASH_EraseBlock: [wreg+status,2+status,0]
  2579                           
  2580                           
  2581                           ;mcc_generated_files/memory.c: 148: void FLASH_EraseBlock(uint16_t startAddr);mcc_genera
      +                          ted_files/memory.c: 149: {;mcc_generated_files/memory.c: 150:     uint8_t GIEBitValue = 
      +                          INTCONbits.GIE;
  2582     03F6  3000               	movlw	0
  2583     03F7  1B8B               	btfsc	11,7	;volatile
  2584     03F8  3001               	movlw	1
  2585     03F9  00F2               	movwf	FLASH_EraseBlock@GIEBitValue
  2586     03FA                     l1148:
  2587                           
  2588                           ;mcc_generated_files/memory.c: 153:     INTCONbits.GIE = 0;
  2589     03FA  138B               	bcf	11,7	;volatile
  2590     03FB                     l1150:
  2591                           
  2592                           ;mcc_generated_files/memory.c: 155:     PMADRL = (startAddr & 0xFF);
  2593     03FB  0870               	movf	FLASH_EraseBlock@startAddr,w
  2594     03FC  0023               	movlb	3	; select bank3
  2595     03FD  0091               	movwf	17	;volatile
  2596     03FE                     l1152:
  2597                           
  2598                           ;mcc_generated_files/memory.c: 157:     PMADRH = ((startAddr & 0xFF00) >> 8);
  2599     03FE  0871               	movf	FLASH_EraseBlock@startAddr+1,w
  2600     03FF  0092               	movwf	18	;volatile
  2601     0400                     l1154:
  2602                           
  2603                           ;mcc_generated_files/memory.c: 160:     PMCON1bits.CFGS = 0;
  2604     0400  1315               	bcf	21,6	;volatile
  2605     0401                     l1156:
  2606                           
  2607                           ;mcc_generated_files/memory.c: 161:     PMCON1bits.FREE = 1;
  2608     0401  1615               	bsf	21,4	;volatile
  2609     0402                     l1158:
  2610                           
  2611                           ;mcc_generated_files/memory.c: 162:     PMCON1bits.WREN = 1;
  2612     0402  1515               	bsf	21,2	;volatile
  2613                           
  2614                           ;mcc_generated_files/memory.c: 165:     PMCON2 = 0x55;
  2615     0403  3055               	movlw	85
  2616     0404  0096               	movwf	22	;volsfr
  2617                           
  2618                           ;mcc_generated_files/memory.c: 166:     PMCON2 = 0xAA;
  2619     0405  30AA               	movlw	170
  2620     0406  0096               	movwf	22	;volsfr
  2621     0407                     l1160:
  2622                           
  2623                           ;mcc_generated_files/memory.c: 167:     PMCON1bits.WR = 1;
  2624     0407  1495               	bsf	21,1	;volatile
  2625     0408                     l1162:
  2626                           
  2627                           ;mcc_generated_files/memory.c: 168:     __nop();
  2628     0408  0000               	nop
  2629     0409                     l1164:
  2630                           
  2631                           ;mcc_generated_files/memory.c: 169:     __nop();
  2632     0409  0000               	nop
  2633     040A                     l1166:
  2634                           
  2635                           ;mcc_generated_files/memory.c: 171:     PMCON1bits.WREN = 0;
  2636     040A  0023               	movlb	3	; select bank3
  2637     040B  1115               	bcf	21,2	;volatile
  2638     040C                     l1168:
  2639                           
  2640                           ;mcc_generated_files/memory.c: 172:     INTCONbits.GIE = GIEBitValue;
  2641     040C  0C72               	rrf	FLASH_EraseBlock@GIEBitValue,w
  2642     040D  1C03               	skipc
  2643     040E  138B               	bcf	11,7	;volatile
  2644     040F  1803               	skipnc
  2645     0410  178B               	bsf	11,7	;volatile
  2646     0411                     l110:
  2647     0411  0008               	return
  2648     0412                     __end_of_FLASH_EraseBlock:
  2649                           
  2650                           	psect	text4
  2651     0499                     __ptext4:	
  2652 ;; *************** function _read_from_nonvolatile *****************
  2653 ;; Defined at:
  2654 ;;		line 17 in file "nonvolatile.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      char 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0, pclath, cstack
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMMON   BANK0   BANK1
  2668 ;;      Params:         0       0       0
  2669 ;;      Locals:         0       0       0
  2670 ;;      Temps:          0       0       0
  2671 ;;      Totals:         0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 1
  2675 ;; This function calls:
  2676 ;;		_FLASH_ReadWord
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682     0499                     _read_from_nonvolatile:	
  2683                           ;psect for function _read_from_nonvolatile
  2684                           
  2685     0499                     l1296:	
  2686                           ;incstack = 0
  2687                           ; Regs used in _read_from_nonvolatile: [wreg+status,2+status,0+pclath+cstack]
  2688                           
  2689                           
  2690                           ;nonvolatile.c: 18:  if (FLASH_ReadWord(0x0780)&DATOS_DEFAULT==DATOS_DEFAULT) {
  2691     0499  3080               	movlw	128
  2692     049A  00F0               	movwf	FLASH_ReadWord@flashAddr
  2693     049B  3007               	movlw	7
  2694     049C  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2695     049D  3183  23C2  3184   	fcall	_FLASH_ReadWord
  2696     04A0  1C70               	btfss	?_FLASH_ReadWord,0
  2697     04A1  2CA3               	goto	u321
  2698     04A2  2CA4               	goto	u320
  2699     04A3                     u321:
  2700     04A3  2CA5               	goto	l1300
  2701     04A4                     u320:
  2702     04A4  2CD5               	goto	l258
  2703     04A5                     l1300:
  2704                           
  2705                           ;nonvolatile.c: 22:  BOTON1_MAX = FLASH_ReadWord(0x0780 +1);
  2706     04A5  3081               	movlw	129
  2707     04A6  00F0               	movwf	FLASH_ReadWord@flashAddr
  2708     04A7  3007               	movlw	7
  2709     04A8  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2710     04A9  3183  23C2  3184   	fcall	_FLASH_ReadWord
  2711     04AC  0871               	movf	?_FLASH_ReadWord+1,w
  2712     04AD  0020               	movlb	0	; select bank0
  2713     04AE  00D7               	movwf	_BOTON1_MAX+1
  2714     04AF  0870               	movf	?_FLASH_ReadWord,w
  2715     04B0  00D6               	movwf	_BOTON1_MAX
  2716                           
  2717                           ;nonvolatile.c: 23:  BOTON1_MIN = FLASH_ReadWord(0x0780 +2);
  2718     04B1  3082               	movlw	130
  2719     04B2  00F0               	movwf	FLASH_ReadWord@flashAddr
  2720     04B3  3007               	movlw	7
  2721     04B4  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2722     04B5  3183  23C2  3184   	fcall	_FLASH_ReadWord
  2723     04B8  0871               	movf	?_FLASH_ReadWord+1,w
  2724     04B9  0020               	movlb	0	; select bank0
  2725     04BA  00D3               	movwf	_BOTON1_MIN+1
  2726     04BB  0870               	movf	?_FLASH_ReadWord,w
  2727     04BC  00D2               	movwf	_BOTON1_MIN
  2728                           
  2729                           ;nonvolatile.c: 24:  BOTON2_MAX = FLASH_ReadWord(0x0780 +3);
  2730     04BD  3083               	movlw	131
  2731     04BE  00F0               	movwf	FLASH_ReadWord@flashAddr
  2732     04BF  3007               	movlw	7
  2733     04C0  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2734     04C1  3183  23C2  3184   	fcall	_FLASH_ReadWord
  2735     04C4  0871               	movf	?_FLASH_ReadWord+1,w
  2736     04C5  0020               	movlb	0	; select bank0
  2737     04C6  00D5               	movwf	_BOTON2_MAX+1
  2738     04C7  0870               	movf	?_FLASH_ReadWord,w
  2739     04C8  00D4               	movwf	_BOTON2_MAX
  2740                           
  2741                           ;nonvolatile.c: 25:  BOTON2_MIN = FLASH_ReadWord(0x0780 +4);
  2742     04C9  3084               	movlw	132
  2743     04CA  00F0               	movwf	FLASH_ReadWord@flashAddr
  2744     04CB  3007               	movlw	7
  2745     04CC  00F1               	movwf	FLASH_ReadWord@flashAddr+1
  2746     04CD  3183  23C2  3184   	fcall	_FLASH_ReadWord
  2747     04D0  0871               	movf	?_FLASH_ReadWord+1,w
  2748     04D1  0020               	movlb	0	; select bank0
  2749     04D2  00D1               	movwf	_BOTON2_MIN+1
  2750     04D3  0870               	movf	?_FLASH_ReadWord,w
  2751     04D4  00D0               	movwf	_BOTON2_MIN
  2752     04D5                     l258:
  2753     04D5  0008               	return
  2754     04D6                     __end_of_read_from_nonvolatile:
  2755                           
  2756                           	psect	text5
  2757     03C2                     __ptext5:	
  2758 ;; *************** function _FLASH_ReadWord *****************
  2759 ;; Defined at:
  2760 ;;		line 58 in file "mcc_generated_files/memory.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  flashAddr       2    0[COMMON] unsigned short 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  2    0[COMMON] unsigned short 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1
  2774 ;;      Params:         2       0       0
  2775 ;;      Locals:         1       0       0
  2776 ;;      Temps:          0       0       0
  2777 ;;      Totals:         3       0       0
  2778 ;;Total ram usage:        3 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_read_from_nonvolatile
  2784 ;;		_FLASH_WriteWord
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788     03C2                     _FLASH_ReadWord:	
  2789                           ;psect for function _FLASH_ReadWord
  2790                           
  2791     03C2                     l1188:	
  2792                           ;incstack = 0
  2793                           ; Regs used in _FLASH_ReadWord: [wreg+status,2+status,0]
  2794                           
  2795                           
  2796                           ;mcc_generated_files/memory.c: 58: uint16_t FLASH_ReadWord(uint16_t flashAddr);mcc_gener
      +                          ated_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  2797     03C2  3000               	movlw	0
  2798     03C3  1B8B               	btfsc	11,7	;volatile
  2799     03C4  3001               	movlw	1
  2800     03C5  00F2               	movwf	FLASH_ReadWord@GIEBitValue
  2801     03C6                     l1190:
  2802                           
  2803                           ;mcc_generated_files/memory.c: 62:     INTCONbits.GIE = 0;
  2804     03C6  138B               	bcf	11,7	;volatile
  2805     03C7                     l1192:
  2806                           
  2807                           ;mcc_generated_files/memory.c: 63:     PMADRL = (flashAddr & 0x00FF);
  2808     03C7  0870               	movf	FLASH_ReadWord@flashAddr,w
  2809     03C8  0023               	movlb	3	; select bank3
  2810     03C9  0091               	movwf	17	;volatile
  2811     03CA                     l1194:
  2812                           
  2813                           ;mcc_generated_files/memory.c: 64:     PMADRH = ((flashAddr & 0xFF00) >> 8);
  2814     03CA  0871               	movf	FLASH_ReadWord@flashAddr+1,w
  2815     03CB  0092               	movwf	18	;volatile
  2816     03CC                     l1196:
  2817                           
  2818                           ;mcc_generated_files/memory.c: 66:     PMCON1bits.CFGS = 0;
  2819     03CC  1315               	bcf	21,6	;volatile
  2820     03CD                     l1198:
  2821                           
  2822                           ;mcc_generated_files/memory.c: 67:     PMCON1bits.RD = 1;
  2823     03CD  1415               	bsf	21,0	;volatile
  2824     03CE                     l1200:
  2825                           
  2826                           ;mcc_generated_files/memory.c: 68:     __nop();
  2827     03CE  0000               	nop
  2828     03CF                     l1202:
  2829                           
  2830                           ;mcc_generated_files/memory.c: 69:     __nop();
  2831     03CF  0000               	nop
  2832     03D0                     l1204:
  2833                           
  2834                           ;mcc_generated_files/memory.c: 70:     INTCONbits.GIE = GIEBitValue;
  2835     03D0  0C72               	rrf	FLASH_ReadWord@GIEBitValue,w
  2836     03D1  1C03               	skipc
  2837     03D2  138B               	bcf	11,7	;volatile
  2838     03D3  1803               	skipnc
  2839     03D4  178B               	bsf	11,7	;volatile
  2840     03D5                     l1206:
  2841                           
  2842                           ;mcc_generated_files/memory.c: 72:     return ((uint16_t)((PMDATH << 8) | PMDATL));
  2843     03D5  0023               	movlb	3	; select bank3
  2844     03D6  0814               	movf	20,w	;volatile
  2845     03D7  00F1               	movwf	?_FLASH_ReadWord+1
  2846     03D8  0813               	movf	19,w	;volatile
  2847     03D9  00F0               	movwf	?_FLASH_ReadWord
  2848     03DA                     l95:
  2849     03DA  0008               	return
  2850     03DB                     __end_of_FLASH_ReadWord:
  2851                           
  2852                           	psect	text6
  2853     045D                     __ptext6:	
  2854 ;; *************** function ___lwdiv *****************
  2855 ;; Defined at:
  2856 ;;		line 5 in file "/opt/microchip/xc8/v2.40/pic/sources/c99/common/lwdiv.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  divisor         2    0[COMMON] unsigned int 
  2859 ;;  dividend        2    2[COMMON] unsigned int 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  quotient        2    5[COMMON] unsigned int 
  2862 ;;  counter         1    7[COMMON] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2    0[COMMON] unsigned int 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1
  2872 ;;      Params:         4       0       0
  2873 ;;      Locals:         3       0       0
  2874 ;;      Temps:          1       0       0
  2875 ;;      Totals:         8       0       0
  2876 ;;Total ram usage:        8 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885     045D                     ___lwdiv:	
  2886                           ;psect for function ___lwdiv
  2887                           
  2888     045D                     l1318:	
  2889                           ;incstack = 0
  2890                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2891                           
  2892     045D  01F5               	clrf	___lwdiv@quotient
  2893     045E  01F6               	clrf	___lwdiv@quotient+1
  2894     045F                     l1320:
  2895     045F  0870               	movf	___lwdiv@divisor,w
  2896     0460  0471               	iorwf	___lwdiv@divisor+1,w
  2897     0461  1903               	btfsc	3,2
  2898     0462  2C64               	goto	u341
  2899     0463  2C65               	goto	u340
  2900     0464                     u341:
  2901     0464  2C94               	goto	l1340
  2902     0465                     u340:
  2903     0465                     l1322:
  2904     0465  01F7               	clrf	___lwdiv@counter
  2905     0466  0AF7               	incf	___lwdiv@counter,f
  2906     0467  2C71               	goto	l1328
  2907     0468                     l1324:
  2908     0468  3001               	movlw	1
  2909     0469                     u355:
  2910     0469  35F0               	lslf	___lwdiv@divisor,f
  2911     046A  0DF1               	rlf	___lwdiv@divisor+1,f
  2912     046B  0B89               	decfsz	9,f
  2913     046C  2C69               	goto	u355
  2914     046D                     l1326:
  2915     046D  3001               	movlw	1
  2916     046E  00F4               	movwf	??___lwdiv
  2917     046F  0874               	movf	??___lwdiv,w
  2918     0470  07F7               	addwf	___lwdiv@counter,f
  2919     0471                     l1328:
  2920     0471  1FF1               	btfss	___lwdiv@divisor+1,7
  2921     0472  2C74               	goto	u361
  2922     0473  2C75               	goto	u360
  2923     0474                     u361:
  2924     0474  2C68               	goto	l1324
  2925     0475                     u360:
  2926     0475                     l1330:
  2927     0475  3001               	movlw	1
  2928     0476                     u375:
  2929     0476  35F5               	lslf	___lwdiv@quotient,f
  2930     0477  0DF6               	rlf	___lwdiv@quotient+1,f
  2931     0478  0B89               	decfsz	9,f
  2932     0479  2C76               	goto	u375
  2933     047A  0871               	movf	___lwdiv@divisor+1,w
  2934     047B  0273               	subwf	___lwdiv@dividend+1,w
  2935     047C  1D03               	skipz
  2936     047D  2C80               	goto	u385
  2937     047E  0870               	movf	___lwdiv@divisor,w
  2938     047F  0272               	subwf	___lwdiv@dividend,w
  2939     0480                     u385:
  2940     0480  1C03               	skipc
  2941     0481  2C83               	goto	u381
  2942     0482  2C84               	goto	u380
  2943     0483                     u381:
  2944     0483  2C89               	goto	l1336
  2945     0484                     u380:
  2946     0484                     l1332:
  2947     0484  0870               	movf	___lwdiv@divisor,w
  2948     0485  02F2               	subwf	___lwdiv@dividend,f
  2949     0486  0871               	movf	___lwdiv@divisor+1,w
  2950     0487  3BF3               	subwfb	___lwdiv@dividend+1,f
  2951     0488                     l1334:
  2952     0488  1475               	bsf	___lwdiv@quotient,0
  2953     0489                     l1336:
  2954     0489  3001               	movlw	1
  2955     048A                     u395:
  2956     048A  36F1               	lsrf	___lwdiv@divisor+1,f
  2957     048B  0CF0               	rrf	___lwdiv@divisor,f
  2958     048C  0B89               	decfsz	9,f
  2959     048D  2C8A               	goto	u395
  2960     048E                     l1338:
  2961     048E  3001               	movlw	1
  2962     048F  02F7               	subwf	___lwdiv@counter,f
  2963     0490  1D03               	btfss	3,2
  2964     0491  2C93               	goto	u401
  2965     0492  2C94               	goto	u400
  2966     0493                     u401:
  2967     0493  2C75               	goto	l1330
  2968     0494                     u400:
  2969     0494                     l1340:
  2970     0494  0876               	movf	___lwdiv@quotient+1,w
  2971     0495  00F1               	movwf	?___lwdiv+1
  2972     0496  0875               	movf	___lwdiv@quotient,w
  2973     0497  00F0               	movwf	?___lwdiv
  2974     0498                     l606:
  2975     0498  0008               	return
  2976     0499                     __end_of___lwdiv:
  2977                           
  2978                           	psect	text7
  2979     0385                     __ptext7:	
  2980 ;; *************** function _SYSTEM_Initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1
  2996 ;;      Params:         0       0       0
  2997 ;;      Locals:         0       0       0
  2998 ;;      Temps:          0       0       0
  2999 ;;      Totals:         0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 1
  3003 ;; This function calls:
  3004 ;;		_ADC_Initialize
  3005 ;;		_OSCILLATOR_Initialize
  3006 ;;		_PIN_MANAGER_Initialize
  3007 ;;		_PWM1_Initialize
  3008 ;;		_TMR2_Initialize
  3009 ;;		_WDT_Initialize
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015     0385                     _SYSTEM_Initialize:	
  3016                           ;psect for function _SYSTEM_Initialize
  3017                           
  3018     0385                     l1292:	
  3019                           ;incstack = 0
  3020                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3021                           
  3022                           
  3023                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3024     0385  3183  2398  3183   	fcall	_PIN_MANAGER_Initialize
  3025                           
  3026                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3027     0388  3183  2358  3183   	fcall	_OSCILLATOR_Initialize
  3028                           
  3029                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3030     038B  3183  2354  3183   	fcall	_WDT_Initialize
  3031                           
  3032                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  3033     038E  3183  2364  3183   	fcall	_PWM1_Initialize
  3034                           
  3035                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  3036     0391  3183  236C  3183   	fcall	_TMR2_Initialize
  3037                           
  3038                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  3039     0394  3183  237C  3183   	fcall	_ADC_Initialize
  3040     0397                     l131:
  3041     0397  0008               	return
  3042     0398                     __end_of_SYSTEM_Initialize:
  3043                           
  3044                           	psect	text8
  3045     0354                     __ptext8:	
  3046 ;; *************** function _WDT_Initialize *****************
  3047 ;; Defined at:
  3048 ;;		line 69 in file "mcc_generated_files/mcc.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1
  3062 ;;      Params:         0       0       0
  3063 ;;      Locals:         0       0       0
  3064 ;;      Temps:          0       0       0
  3065 ;;      Totals:         0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; This function calls:
  3069 ;;		Nothing
  3070 ;; This function is called by:
  3071 ;;		_SYSTEM_Initialize
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075     0354                     _WDT_Initialize:	
  3076                           ;psect for function _WDT_Initialize
  3077                           
  3078     0354                     l1276:	
  3079                           ;incstack = 0
  3080                           ; Regs used in _WDT_Initialize: [wreg]
  3081                           
  3082                           
  3083                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  3084     0354  3016               	movlw	22
  3085     0355  0021               	movlb	1	; select bank1
  3086     0356  0097               	movwf	23	;volatile
  3087     0357                     l137:
  3088     0357  0008               	return
  3089     0358                     __end_of_WDT_Initialize:
  3090                           
  3091                           	psect	text9
  3092     036C                     __ptext9:	
  3093 ;; *************** function _TMR2_Initialize *****************
  3094 ;; Defined at:
  3095 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1
  3109 ;;      Params:         0       0       0
  3110 ;;      Locals:         0       0       0
  3111 ;;      Temps:          0       0       0
  3112 ;;      Totals:         0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_SYSTEM_Initialize
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122     036C                     _TMR2_Initialize:	
  3123                           ;psect for function _TMR2_Initialize
  3124                           
  3125     036C                     l1180:	
  3126                           ;incstack = 0
  3127                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  3128                           
  3129                           
  3130                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x7D;
  3131     036C  307D               	movlw	125
  3132     036D  0020               	movlb	0	; select bank0
  3133     036E  009B               	movwf	27	;volatile
  3134     036F                     l1182:
  3135                           
  3136                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3137     036F  019A               	clrf	26	;volatile
  3138     0370                     l1184:
  3139                           
  3140                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3141     0370  1091               	bcf	17,1	;volatile
  3142     0371                     l1186:
  3143                           
  3144                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  3145     0371  3007               	movlw	7
  3146     0372  009C               	movwf	28	;volatile
  3147     0373                     l53:
  3148     0373  0008               	return
  3149     0374                     __end_of_TMR2_Initialize:
  3150                           
  3151                           	psect	text10
  3152     0364                     __ptext10:	
  3153 ;; *************** function _PWM1_Initialize *****************
  3154 ;; Defined at:
  3155 ;;		line 58 in file "mcc_generated_files/pwm1.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;		None
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1
  3169 ;;      Params:         0       0       0
  3170 ;;      Locals:         0       0       0
  3171 ;;      Temps:          0       0       0
  3172 ;;      Totals:         0       0       0
  3173 ;;Total ram usage:        0 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_SYSTEM_Initialize
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182     0364                     _PWM1_Initialize:	
  3183                           ;psect for function _PWM1_Initialize
  3184                           
  3185     0364                     l1278:	
  3186                           ;incstack = 0
  3187                           ; Regs used in _PWM1_Initialize: [wreg]
  3188                           
  3189                           
  3190                           ;mcc_generated_files/pwm1.c: 62:     PWM1CON = 0xC0;
  3191     0364  30C0               	movlw	192
  3192     0365  002C               	movlb	12	; select bank12
  3193     0366  0093               	movwf	19	;volatile
  3194                           
  3195                           ;mcc_generated_files/pwm1.c: 65:     PWM1DCH = 0x5D;
  3196     0367  305D               	movlw	93
  3197     0368  0092               	movwf	18	;volatile
  3198                           
  3199                           ;mcc_generated_files/pwm1.c: 68:     PWM1DCL = 0x80;
  3200     0369  3080               	movlw	128
  3201     036A  0091               	movwf	17	;volatile
  3202     036B                     l170:
  3203     036B  0008               	return
  3204     036C                     __end_of_PWM1_Initialize:
  3205                           
  3206                           	psect	text11
  3207     0398                     __ptext11:	
  3208 ;; *************** function _PIN_MANAGER_Initialize *****************
  3209 ;; Defined at:
  3210 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1
  3224 ;;      Params:         0       0       0
  3225 ;;      Locals:         0       0       0
  3226 ;;      Temps:          0       0       0
  3227 ;;      Totals:         0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_SYSTEM_Initialize
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237     0398                     _PIN_MANAGER_Initialize:	
  3238                           ;psect for function _PIN_MANAGER_Initialize
  3239                           
  3240     0398                     l1260:	
  3241                           ;incstack = 0
  3242                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3243                           
  3244                           
  3245                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3246     0398  0022               	movlb	2	; select bank2
  3247     0399  018C               	clrf	12	;volatile
  3248                           
  3249                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3250     039A  018E               	clrf	14	;volatile
  3251     039B                     l1262:
  3252                           
  3253                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x3F;
  3254     039B  303F               	movlw	63
  3255     039C  0021               	movlb	1	; select bank1
  3256     039D  008C               	movwf	12	;volatile
  3257     039E                     l1264:
  3258                           
  3259                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x1F;
  3260     039E  301F               	movlw	31
  3261     039F  008E               	movwf	14	;volatile
  3262     03A0                     l1266:
  3263                           
  3264                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0F;
  3265     03A0  300F               	movlw	15
  3266     03A1  0023               	movlb	3	; select bank3
  3267     03A2  008E               	movwf	14	;volatile
  3268     03A3                     l1268:
  3269                           
  3270                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x17;
  3271     03A3  3017               	movlw	23
  3272     03A4  008C               	movwf	12	;volatile
  3273                           
  3274                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3275     03A5  0024               	movlb	4	; select bank4
  3276     03A6  018C               	clrf	12	;volatile
  3277     03A7                     l1270:
  3278                           
  3279                           ;mcc_generated_files/pin_manager.c: 79:     OPTION_REGbits.nWPUEN = 1;
  3280     03A7  0021               	movlb	1	; select bank1
  3281     03A8  1795               	bsf	21,7	;volatile
  3282                           
  3283                           ;mcc_generated_files/pin_manager.c: 85:     APFCON = 0x00;
  3284     03A9  0022               	movlb	2	; select bank2
  3285     03AA  019D               	clrf	29	;volatile
  3286     03AB                     l158:
  3287     03AB  0008               	return
  3288     03AC                     __end_of_PIN_MANAGER_Initialize:
  3289                           
  3290                           	psect	text12
  3291     0358                     __ptext12:	
  3292 ;; *************** function _OSCILLATOR_Initialize *****************
  3293 ;; Defined at:
  3294 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1
  3308 ;;      Params:         0       0       0
  3309 ;;      Locals:         0       0       0
  3310 ;;      Temps:          0       0       0
  3311 ;;      Totals:         0       0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_SYSTEM_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321     0358                     _OSCILLATOR_Initialize:	
  3322                           ;psect for function _OSCILLATOR_Initialize
  3323                           
  3324     0358                     l1272:	
  3325                           ;incstack = 0
  3326                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3327                           
  3328                           
  3329                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3330     0358  3078               	movlw	120
  3331     0359  0021               	movlb	1	; select bank1
  3332     035A  0099               	movwf	25	;volatile
  3333     035B                     l1274:
  3334                           
  3335                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  3336     035B  0022               	movlb	2	; select bank2
  3337     035C  0196               	clrf	22	;volatile
  3338     035D                     l134:
  3339     035D  0008               	return
  3340     035E                     __end_of_OSCILLATOR_Initialize:
  3341                           
  3342                           	psect	text13
  3343     037C                     __ptext13:	
  3344 ;; *************** function _ADC_Initialize *****************
  3345 ;; Defined at:
  3346 ;;		line 67 in file "mcc_generated_files/adc.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1
  3360 ;;      Params:         0       0       0
  3361 ;;      Locals:         0       0       0
  3362 ;;      Temps:          0       0       0
  3363 ;;      Totals:         0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_SYSTEM_Initialize
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373     037C                     _ADC_Initialize:	
  3374                           ;psect for function _ADC_Initialize
  3375                           
  3376     037C                     l1170:	
  3377                           ;incstack = 0
  3378                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3379                           
  3380                           
  3381                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
  3382     037C  3080               	movlw	128
  3383     037D  0021               	movlb	1	; select bank1
  3384     037E  009E               	movwf	30	;volatile
  3385     037F                     l1172:
  3386                           
  3387                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  3388     037F  019F               	clrf	31	;volatile
  3389     0380                     l1174:
  3390                           
  3391                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  3392     0380  019B               	clrf	27	;volatile
  3393     0381                     l1176:
  3394                           
  3395                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  3396     0381  019C               	clrf	28	;volatile
  3397     0382                     l1178:
  3398                           
  3399                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  3400     0382  3001               	movlw	1
  3401     0383  009D               	movwf	29	;volatile
  3402     0384                     l19:
  3403     0384  0008               	return
  3404     0385                     __end_of_ADC_Initialize:
  3405                           
  3406                           	psect	text14
  3407     03AC                     __ptext14:	
  3408 ;; *************** function _PWM1_LoadDutyValue *****************
  3409 ;; Defined at:
  3410 ;;		line 72 in file "mcc_generated_files/pwm1.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  dutyValue       2    0[COMMON] unsigned short 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1
  3424 ;;      Params:         2       0       0
  3425 ;;      Locals:         0       0       0
  3426 ;;      Temps:          2       0       0
  3427 ;;      Totals:         4       0       0
  3428 ;;Total ram usage:        4 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437     03AC                     _PWM1_LoadDutyValue:	
  3438                           ;psect for function _PWM1_LoadDutyValue
  3439                           
  3440     03AC                     l1294:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  3443                           
  3444                           
  3445                           ;mcc_generated_files/pwm1.c: 72:  void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm1.c: 73:  {;mcc_generated_files/pwm1.c: 75:      PWM1DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3446     03AC  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  3447     03AD  00F3               	movwf	??_PWM1_LoadDutyValue+1
  3448     03AE  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  3449     03AF  00F2               	movwf	??_PWM1_LoadDutyValue
  3450     03B0  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  3451     03B1  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  3452     03B2  36F3               	lsrf	??_PWM1_LoadDutyValue+1,f
  3453     03B3  0CF2               	rrf	??_PWM1_LoadDutyValue,f
  3454     03B4  0872               	movf	??_PWM1_LoadDutyValue,w
  3455     03B5  002C               	movlb	12	; select bank12
  3456     03B6  0092               	movwf	18	;volatile
  3457                           
  3458                           ;mcc_generated_files/pwm1.c: 78:      PWM1DCL = (dutyValue & 0x0003)<<6;
  3459     03B7  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
  3460     03B8  3903               	andlw	3
  3461     03B9  00F2               	movwf	??_PWM1_LoadDutyValue
  3462     03BA  3005               	movlw	5
  3463     03BB                     u315:
  3464     03BB  35F2               	lslf	??_PWM1_LoadDutyValue,f
  3465     03BC  3EFF               	addlw	-1
  3466     03BD  1D03               	skipz
  3467     03BE  2BBB               	goto	u315
  3468     03BF  3572               	lslf	??_PWM1_LoadDutyValue,w
  3469     03C0  0091               	movwf	17	;volatile
  3470     03C1                     l173:
  3471     03C1  0008               	return
  3472     03C2                     __end_of_PWM1_LoadDutyValue:
  3473                           
  3474                           	psect	text15
  3475     03DB                     __ptext15:	
  3476 ;; *************** function _ADC_GetConversion *****************
  3477 ;; Defined at:
  3478 ;;		line 115 in file "mcc_generated_files/adc.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  channel         1    wreg     enum E2576
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  channel         1    3[COMMON] enum E2576
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  2    0[COMMON] unsigned short 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1
  3492 ;;      Params:         2       0       0
  3493 ;;      Locals:         1       0       0
  3494 ;;      Temps:          1       0       0
  3495 ;;      Totals:         4       0       0
  3496 ;;Total ram usage:        4 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505     03DB                     _ADC_GetConversion:	
  3506                           ;psect for function _ADC_GetConversion
  3507                           
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3511                           ;ADC_GetConversion@channel stored from wreg
  3512     03DB  00F3               	movwf	ADC_GetConversion@channel
  3513     03DC                     l1280:
  3514                           
  3515                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  3516     03DC  0873               	movf	ADC_GetConversion@channel,w
  3517     03DD  00F2               	movwf	??_ADC_GetConversion
  3518     03DE  0DF2               	rlf	??_ADC_GetConversion,f
  3519     03DF  0DF2               	rlf	??_ADC_GetConversion,f
  3520     03E0  0021               	movlb	1	; select bank1
  3521     03E1  081D               	movf	29,w	;volatile
  3522     03E2  0672               	xorwf	??_ADC_GetConversion,w
  3523     03E3  3983               	andlw	-125
  3524     03E4  0672               	xorwf	??_ADC_GetConversion,w
  3525     03E5  009D               	movwf	29	;volatile
  3526     03E6                     l1282:
  3527                           
  3528                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  3529     03E6  141D               	bsf	29,0	;volatile
  3530     03E7                     l1284:
  3531                           
  3532                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  3533     03E7  3006               	movlw	6
  3534     03E8                     u637:
  3535     03E8  0B89               	decfsz	9,f
  3536     03E9  2BE8               	goto	u637
  3537     03EA  3200               	nop2
  3538     03EB                     l1286:
  3539                           
  3540                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
  3541     03EB  0021               	movlb	1	; select bank1
  3542     03EC  149D               	bsf	29,1	;volatile
  3543     03ED                     l34:	
  3544                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  3545                           
  3546                           
  3547                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
  3548     03ED  189D               	btfsc	29,1	;volatile
  3549     03EE  2BF0               	goto	u301
  3550     03EF  2BF1               	goto	u300
  3551     03F0                     u301:
  3552     03F0  2BED               	goto	l34
  3553     03F1                     u300:
  3554     03F1                     l1288:
  3555                           
  3556                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3557     03F1  081C               	movf	28,w	;volatile
  3558     03F2  00F1               	movwf	?_ADC_GetConversion+1
  3559     03F3  081B               	movf	27,w	;volatile
  3560     03F4  00F0               	movwf	?_ADC_GetConversion
  3561     03F5                     l37:
  3562     03F5  0008               	return
  3563     03F6                     __end_of_ADC_GetConversion:
  3564     007E                     btemp	set	126	;btemp
  3565     007E                     wtemp0	set	126
  3566                           
  3567                           	psect	idloc
  3568                           
  3569                           ;Config register IDLOC0 @ 0x8000
  3570                           ;	unspecified, using default values
  3571     8000                     	org	32768
  3572     8000  3FFF               	dw	16383
  3573                           
  3574                           ;Config register IDLOC1 @ 0x8001
  3575                           ;	unspecified, using default values
  3576     8001                     	org	32769
  3577     8001  3FFF               	dw	16383
  3578                           
  3579                           ;Config register IDLOC2 @ 0x8002
  3580                           ;	unspecified, using default values
  3581     8002                     	org	32770
  3582     8002  3FFF               	dw	16383
  3583                           
  3584                           ;Config register IDLOC3 @ 0x8003
  3585                           ;	unspecified, using default values
  3586     8003                     	org	32771
  3587     8003  3FFF               	dw	16383
  3588                           
  3589                           	psect	config
  3590                           
  3591                           ;Config register CONFIG1 @ 0x8007
  3592                           ;	Oscillator Selection Bits
  3593                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3594                           ;	Watchdog Timer Enable
  3595                           ;	WDTE = OFF, WDT disabled
  3596                           ;	Power-up Timer Enable
  3597                           ;	PWRTE = OFF, PWRT disabled
  3598                           ;	MCLR Pin Function Select
  3599                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3600                           ;	Flash Program Memory Code Protection
  3601                           ;	CP = OFF, Program memory code protection is disabled
  3602                           ;	Brown-out Reset Enable
  3603                           ;	BOREN = ON, Brown-out Reset enabled
  3604                           ;	Clock Out Enable
  3605                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3606     8007                     	org	32775
  3607     8007  3FE4               	dw	16356
  3608                           
  3609                           ;Config register CONFIG2 @ 0x8008
  3610                           ;	Flash Memory Self-Write Protection
  3611                           ;	WRT = OFF, Write protection off
  3612                           ;	Stack Overflow/Underflow Reset Enable
  3613                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3614                           ;	Brown-out Reset Voltage Selection
  3615                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3616                           ;	Low-Power Brown Out Reset
  3617                           ;	LPBOR = OFF, Low-Power BOR is disabled
  3618                           ;	Low-Voltage Programming Enable
  3619                           ;	LVP = ON, Low-voltage programming enabled
  3620     8008                     	org	32776
  3621     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    6
    Data        40
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      58
    BANK1            32      0      32

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    FLASH_WriteBlock@flashWordArray	PTR unsigned short  size(1) Largest target is 32
		 -> save_to_nonvolatile@bloque(BANK0[32]), 


Critical Paths under _main in COMMON

    _main->_save_to_nonvolatile
    _save_to_nonvolatile->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _read_from_nonvolatile->_FLASH_ReadWord

Critical Paths under _main in BANK0

    _main->_save_to_nonvolatile

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    3506
                                             32 BANK0     16    16      0
                  _ADC_GetConversion
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            ___lwdiv
              _read_from_nonvolatile
                _save_to_nonvolatile
 ---------------------------------------------------------------------------------
 (1) _save_to_nonvolatile                                 33    33      0     882
                                             13 COMMON     1     1      0
                                              0 BANK0     32    32      0
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    10     7      3     760
                                              3 COMMON    10     7      3
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     3     1      2     143
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _read_from_nonvolatile                                0     0      0     523
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadWord                                       3     1      2     523
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   4     2      2     728
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   ___lwdiv
   _read_from_nonvolatile
     _FLASH_ReadWord
   _save_to_nonvolatile
     _FLASH_WriteBlock
       _FLASH_EraseBlock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      68       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     30      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      20       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      68       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb  4 23:46:01 2023

                            l34 03ED                              l19 0384                              l37 03F5  
                            l53 0373                              l95 03DA                             l110 0411  
                           l103 04EB                             l104 0534                             l106 052D  
                           l131 0397                             l134 035D                             l223 0731  
                           l216 06DE                             l137 0357                             l170 036B  
                           l173 03C1                             l158 03AB                             l254 045C  
                           l258 04D5                             l606 0498                             u300 03F1  
                           u301 03F0                             u400 0494                             u320 04A4  
                           u401 0493                             u321 04A3                             u330 043C  
                           u315 03BB                             u340 0465                             u500 06E7  
                           u420 0562                             u341 0464                             u501 06E6  
                           u421 0561                             u270 04EA                             u510 0703  
                           u430 056B                             _PR2 001B                             u271 04E9  
                           u511 0702                             u431 056A                             u360 0475  
                           u280 0517                             u520 0714                             u440 0594  
                           u361 0474                             u281 0516                             u521 0713  
                           u441 0593                             u290 052D                             u530 072D  
                           u450 0603                             u355 0469                             u291 052C  
                           u275 04E6                             u531 072C                             u515 06FF  
                           u451 0602                             u380 0484                             u540 073A  
                           u460 060C                             u381 0483                             u541 0739  
                           u525 0710                             u461 060B                             u445 0590  
                           u550 0756                             u470 063E                             u375 0476  
                           u551 0755                             u607 066C                             u471 063D  
                           u480 06BD                             u385 0480                             u481 06BC  
                           u617 067F                             u490 06DA                             u395 048A  
                           u555 0752                             u491 06D9                             u627 0695  
                           u475 063A                             u637 03E8                             u485 06B9  
                           u567 0541                             u577 05C2                             u587 05D5  
                           u597 0612                 _TMR2_Initialize 036C                             wreg 0009  
FLASH_WriteBlock@flashWordArray 0075                            l1200 03CE                            l1202 03CF  
                          l1210 04D6                            l1204 03D0                            l1300 04A5  
                          l1220 04F3                            l1212 04DC                            l1206 03D5  
                          l1150 03FB                            l1222 04F5                            l1214 04E0  
                          l1310 0447                            l1320 045F                            l1160 0407  
                          l1152 03FE                            l1240 0511                            l1232 04F8  
                          l1224 04F6                            l1312 044B                            l1304 0432  
                          l1400 05E8                            l1170 037C                            l1330 0475  
                          l1322 0465                            l1162 0408                            l1154 0400  
                          l1146 03F6                            l1250 051E                            l1242 0517  
                          l1234 04FB                            l1226 04F7                            l1218 04EC  
                          l1314 044F                            l1306 0440                            l1402 05FA  
                          l1172 037F                            l1260 0398                            l1180 036C  
                          l1332 0484                            l1324 0468                            l1340 0494  
                          l1164 0409                            l1156 0401                            l1148 03FA  
                          l1252 0523                            l1244 0518                            l1236 04FD  
                          l1316 0453                            l1308 0443                            l1420 063E  
                          l1404 0603                            l1174 0380                            l1270 03A7  
                          l1262 039B                            l1182 036F                            l1334 0488  
                          l1326 046D                            l1318 045D                            l1190 03C6  
                          l1166 040A                            l1158 0402                            l1254 0527  
                          l1246 051C                            l1238 0505                            l1422 0666  
                          l1414 061B                            l1406 060C                            l1430 068F  
                          l1280 03DC                            l1176 0381                            l1272 0358  
                          l1264 039E                            l1184 0370                            l1336 0489  
                          l1328 0471                            l1192 03C7                            l1168 040C  
                          l1256 052F                            l1248 051D                            l1440 06AD  
                          l1432 068F                            l1424 0672                            l1416 062D  
                          l1408 0618                            l1360 0535                            l1282 03E6  
                          l1178 0382                            l1274 035B                            l1266 03A0  
                          l1186 0371                            l1338 048E                            l1194 03CA  
                          l1450 06DA                            l1434 068F                            l1426 0685  
                          l1418 0631                            l1370 0550                            l1362 053B  
                          l1284 03E7                            l1268 03A3                            l1276 0354  
                          l1292 0385                            l1196 03CC                            l1188 03C2  
                          l1452 06E7                            l1444 06BE                            l1436 069B  
                          l1428 068C                            l1372 0559                            l1364 0547  
                          l1286 03EB                            l1294 03AC                            l1278 0364  
                          l1198 03CD                            l1470 073A                            l1462 0715  
                          l1454 06EB                            l1446 06C7                            l1438 06A4  
                          l1390 05BC                            l1382 0571                            l1374 0562  
                          l1366 0547                            l1288 03F1                            l1296 0499  
                          l1472 073E                            l1464 071E                            l1448 06D1  
                          l1456 06F2                            l1392 05C8                            l1384 0583  
                          l1376 056B                            l1368 0547                            l1466 0724  
                          l1474 0745                            l1458 0704                            l1394 05DB  
                          l1386 0587                            l1468 072D                            l1476 0757  
                          l1396 05E2                            l1388 0594                            l1478 075B  
                          l1398 05E5                 __end_of_DCmaxCW 0352         __end_of_PWM1_Initialize 036C  
                          _LATA 010C                            _LATC 010E                            _TMR2 001A  
                          _WPUA 020C                            _main 0535                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E               ?_FLASH_WriteBlock 0073  
                          start 0001              ??_FLASH_WriteBlock 0076   __end_of_OSCILLATOR_Initialize 035E  
              __end_of_DCmaxCCW 0354                           ?_main 0070                           _T2CON 001C  
               __end_of___lwdiv 0499                           _DCmin 034E                           _TRISA 008C  
                         _TRISC 008E                  _WDT_Initialize 0354                           main@i 0042  
                         status 0003                           wtemp0 007E                 __initialization 0764  
                  __end_of_main 0764         __end_of_TMR2_Initialize 0374                          ??_main 0040  
        __end_of_WDT_Initialize 0358                          _ADCON0 009D                          _ADCON1 009E  
                        _ADCON2 009F       FLASH_WriteBlock@writeAddr 0073                          _ADRESH 009C  
                        _ADRESL 009B                          _APFCON 011D                          _ANSELA 018C  
                        _ANSELC 018E                          _BORCON 0116                ?_PWM1_Initialize 0070  
                        _PMADRH 0192                          _PMADRL 0191                          _PMDATH 0194  
                        _PMDATL 0193                          _PMCON2 0196                          _OSCCON 0099  
                        _WDTCON 0097                       ??___lwdiv 0074                          main@C1 004A  
                        main@C2 004C                          main@dc 004E         FLASH_ReadWord@flashAddr 0070  
               ?_WDT_Initialize 0070        ADC_GetConversion@channel 0073               _SYSTEM_Initialize 0385  
       __end_of__initialization 077E              ?_SYSTEM_Initialize 0070                   __end_of_DCmin 0350  
   PWM1_LoadDutyValue@dutyValue 0070                  __pcstackCOMMON 0070                    __pidataBANK0 0374  
                  __pidataBANK1 0412             ??_SYSTEM_Initialize 0070              _PWM1_LoadDutyValue 03AC  
              ?_TMR2_Initialize 0070           _read_from_nonvolatile 0499                  _OPTION_REGbits 0095  
           ?_PWM1_LoadDutyValue 0070     FLASH_WriteBlock@GIEBitValue 007B       __end_of_SYSTEM_Initialize 0398  
                    __pbssBANK0 0058            ??_PWM1_LoadDutyValue 0072                      __pmaintext 0535  
           _save_to_nonvolatile 0432                  _FLASH_ReadWord 03C2                         _DCmaxCW 0350  
                       _PWM1DCH 0612                         _PWM1DCL 0611                         _PWM1CON 0613  
          ?_save_to_nonvolatile 0070                _FLASH_EraseBlock 03F6            _ADC_InterruptHandler 0058  
                       ___lwdiv 045D          ?_read_from_nonvolatile 0070          __end_of_FLASH_ReadWord 03DB  
                       __ptext1 0432                         __ptext2 04D6                         __ptext3 03F6  
                       __ptext4 0499                         __ptext5 03C2                         __ptext6 045D  
                       __ptext7 0385                         __ptext8 0354                         __ptext9 036C  
         _OSCILLATOR_Initialize 0358                       _T2CONbits 001C        ??_PIN_MANAGER_Initialize 0070  
                       main@C1p 0046                         main@C2p 0048           ??_save_to_nonvolatile 007D  
          end_of_initialization 077E                         init_ram 035E                         initloop 035F  
     FLASH_ReadWord@GIEBitValue 0072                 ?_FLASH_ReadWord 0070                ??_WDT_Initialize 0070  
             FLASH_WriteBlock@i 007C                  _ADC_Initialize 037C                _FLASH_WriteBlock 04D6  
        ?_OSCILLATOR_Initialize 0070             start_initialization 0764       save_to_nonvolatile@bloque 0020  
        __end_of_ADC_Initialize 0385                     __pdataBANK0 0050                     __pdataBANK1 00A0  
   FLASH_EraseBlock@GIEBitValue 0072        __end_of_FLASH_EraseBlock 0412                       ___latbits 0000  
                 __pcstackBANK0 0020                ___lwdiv@dividend 0072          _PIN_MANAGER_Initialize 0398  
       ??_read_from_nonvolatile 0073                        ?___lwdiv 0070                 ?_ADC_Initialize 0070  
             ??_PWM1_Initialize 0070                ___lwdiv@quotient 0075  FLASH_WriteBlock@blockStartAddr 0079  
                      _DCmaxCCW 0352                        _PIR1bits 0011       FLASH_EraseBlock@startAddr 0070  
              ??_FLASH_ReadWord 0072          save_to_nonvolatile@F57 00A0                      _ADCON0bits 009D  
                     main@i_387 0044     __end_of_save_to_nonvolatile 045D               ??_TMR2_Initialize 0070  
      __end_of_FLASH_WriteBlock 0535               _ADC_GetConversion 03DB         ??_OSCILLATOR_Initialize 0070  
            ?_ADC_GetConversion 0070             ??_ADC_GetConversion 0072                 ___lwdiv@divisor 0070  
               ___lwdiv@counter 0077                        __ptext10 0364                        __ptext11 0398  
                      __ptext12 0358                        __ptext13 037C                        __ptext14 03AC  
                      __ptext15 03DB                      _BOTON1_MAX 0056                      _BOTON1_MIN 0052  
                    _BOTON2_MAX 0054                      _BOTON2_MIN 0050       __end_of_ADC_GetConversion 03F6  
             ?_FLASH_EraseBlock 0070              ??_FLASH_EraseBlock 0072                      _INTCONbits 000B  
                    _PMCON1bits 0195         ?_PIN_MANAGER_Initialize 0070                 _PWM1_Initialize 0364  
              ??_ADC_Initialize 0070   __end_of_read_from_nonvolatile 04D6                   __pstringtext1 0352  
                 __pstringtext2 0350                   __pstringtext3 034E  __end_of_PIN_MANAGER_Initialize 03AC  
    __end_of_PWM1_LoadDutyValue 03C2  
